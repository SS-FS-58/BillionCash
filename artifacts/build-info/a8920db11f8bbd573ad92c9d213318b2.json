{
	"id": "a8920db11f8bbd573ad92c9d213318b2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"BillionCash.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract BillionCash is Ownable {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) public _BCTokenBalances;\r\n    mapping(address => mapping(address => uint256)) public _allowed;\r\n    string constant tokenName = \"BillionCash\";\r\n    string constant tokenSymbol = \"BC\";\r\n    uint8 constant tokenDecimals = 18;\r\n    uint256 _totalSupply = 50000 * 10**uint256(tokenDecimals);\r\n    address pancakeswap;\r\n    address marketingwallet;\r\n    address adminAddress;\r\n    uint256 public constant PERCENTS_DIVIDER = 1000;\r\n    uint256 public constant FEE_PERCENT = 50;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    constructor(\r\n        address _developmentWallet,\r\n        address _marketingWallet,\r\n        address _pancakeswap\r\n    ) {\r\n        adminAddress = _developmentWallet;\r\n        marketingwallet = _marketingWallet;\r\n        pancakeswap = _pancakeswap;\r\n        _mint(marketingwallet, _totalSupply);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return tokenName;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return tokenSymbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return tokenDecimals;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        return _BCTokenBalances[owner];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(value <= _BCTokenBalances[msg.sender]);\r\n        require(to != address(0));\r\n\r\n        uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER);\r\n        uint256 tokensToTransfer = value\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee);\r\n\r\n        _BCTokenBalances[msg.sender] = _BCTokenBalances[msg.sender].sub(value);\r\n        _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer);\r\n        _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(\r\n            BCTokenForFee\r\n        );\r\n\r\n        emit Transfer(msg.sender, to, tokensToTransfer);\r\n        emit Transfer(msg.sender, adminAddress, BCTokenForFee);\r\n        emit Transfer(msg.sender, marketingwallet, BCTokenForFee);\r\n        emit Transfer(msg.sender, pancakeswap, BCTokenForFee);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public returns (bool) {\r\n        require(value <= _BCTokenBalances[from]);\r\n        require(value <= _allowed[from][msg.sender]);\r\n        require(to != address(0));\r\n\r\n        _BCTokenBalances[from] = _BCTokenBalances[from].sub(value);\r\n\r\n        uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER);\r\n        uint256 tokensToTransfer = value\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee);\r\n\r\n        _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer);\r\n        _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(\r\n            BCTokenForFee\r\n        );\r\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\r\n\r\n        emit Transfer(msg.sender, adminAddress, BCTokenForFee);\r\n        emit Transfer(msg.sender, marketingwallet, BCTokenForFee);\r\n        emit Transfer(msg.sender, pancakeswap, BCTokenForFee);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].add(addedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].sub(subtractedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(amount != 0);\r\n        _BCTokenBalances[account] = _BCTokenBalances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function setDevelopmentAddress(address  _developmentAddress) external onlyOwner {\r\n        adminAddress = _developmentAddress;\r\n    }\r\n    function setMarketAddress(address  _marketAddress) external onlyOwner {\r\n        marketingwallet = _marketAddress;\r\n    }\r\n    function setPancakeAddress(address  _pancakeAddress) external onlyOwner {\r\n        pancakeswap = _pancakeAddress;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BillionCash.sol": {
				"BillionCash": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_developmentWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_pancakeswap",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "FEE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_BCTokenBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_allowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_developmentAddress",
									"type": "address"
								}
							],
							"name": "setDevelopmentAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_marketAddress",
									"type": "address"
								}
							],
							"name": "setMarketAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pancakeAddress",
									"type": "address"
								}
							],
							"name": "setPancakeAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BillionCash.sol\":186:6090  contract BillionCash is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"BillionCash.sol\":546:572  10**uint256(tokenDecimals) */\n  tag_1\n    /* \"BillionCash.sol\":506:508  18 */\n  0x12\n    /* \"BillionCash.sol\":546:548  10 */\n  0x0a\n    /* \"BillionCash.sol\":546:572  10**uint256(tokenDecimals) */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"BillionCash.sol\":538:572  50000 * 10**uint256(tokenDecimals) */\n  tag_3\n  swap1\n    /* \"BillionCash.sol\":538:543  50000 */\n  0xc350\n    /* \"BillionCash.sol\":538:572  50000 * 10**uint256(tokenDecimals) */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"BillionCash.sol\":515:572  uint256 _totalSupply = 50000 * 10**uint256(tokenDecimals) */\n  0x03\n  sstore\n    /* \"BillionCash.sol\":965:1268  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"BillionCash.sol\":1098:1110  adminAddress */\n  0x06\n    /* \"BillionCash.sol\":1098:1131  adminAddress = _developmentWallet */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  or\n  swap1\n  swap3\n  sstore\n    /* \"BillionCash.sol\":1142:1157  marketingwallet */\n  0x05\n    /* \"BillionCash.sol\":1142:1176  marketingwallet = _marketingWallet */\n  dup1\n  sload\n  dup6\n  dup5\n  and\n  swap1\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"BillionCash.sol\":1187:1198  pancakeswap */\n  0x04\n    /* \"BillionCash.sol\":1187:1213  pancakeswap = _pancakeswap */\n  dup1\n  sload\n  swap4\n  dup6\n  and\n  swap4\n  swap1\n  swap3\n  and\n  swap3\n  swap1\n  swap3\n  or\n  swap1\n  sstore\n    /* \"BillionCash.sol\":1247:1259  _totalSupply */\n  sload(0x03)\n    /* \"BillionCash.sol\":1224:1260  _mint(marketingwallet, _totalSupply) */\n  tag_16\n  swap2\n    /* \"BillionCash.sol\":1142:1176  marketingwallet = _marketingWallet */\n  swap1\n    /* \"BillionCash.sol\":1224:1229  _mint */\n  tag_17\n    /* \"BillionCash.sol\":1224:1260  _mint(marketingwallet, _totalSupply) */\n  jump\t// in\ntag_16:\n    /* \"BillionCash.sol\":965:1268  constructor(... */\n  pop\n  pop\n  pop\n    /* \"BillionCash.sol\":186:6090  contract BillionCash is Ownable {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"BillionCash.sol\":5468:5693  function _mint(address account, uint256 amount) internal {... */\ntag_17:\n    /* \"BillionCash.sol\":5544:5555  amount != 0 */\n  dup1\n    /* \"BillionCash.sol\":5536:5556  require(amount != 0) */\n  tag_22\n  jumpi\n  0x00\n  dup1\n  revert\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BillionCash.sol\":5595:5620  _BCTokenBalances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"BillionCash.sol\":5595:5611  _BCTokenBalances */\n  0x01\n    /* \"BillionCash.sol\":5595:5620  _BCTokenBalances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"BillionCash.sol\":5595:5632  _BCTokenBalances[account].add(amount) */\n  tag_23\n  swap2\n    /* \"BillionCash.sol\":5625:5631  amount */\n  dup4\n  swap1\n    /* \"BillionCash.sol\":5595:5624  _BCTokenBalances[account].add */\n  tag_0_107\n  tag_24\n  dup3\n  shl\n  or\n    /* \"BillionCash.sol\":5595:5632  _BCTokenBalances[account].add(amount) */\n  swap1\n  shr\n  jump\t// in\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BillionCash.sol\":5567:5592  _BCTokenBalances[account] */\n  dup4\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"BillionCash.sol\":5567:5583  _BCTokenBalances */\n  0x01\n    /* \"BillionCash.sol\":5567:5592  _BCTokenBalances[account] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"BillionCash.sol\":5567:5632  _BCTokenBalances[account] = _BCTokenBalances[account].add(amount) */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"BillionCash.sol\":5648:5685  Transfer(address(0), account, amount) */\n  swap2\n  mload\n    /* \"BillionCash.sol\":5567:5592  _BCTokenBalances[account] */\n  swap1\n  swap2\n  swap1\n    /* \"BillionCash.sol\":5648:5685  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n  tag_25\n  swap1\n    /* \"BillionCash.sol\":5678:5684  amount */\n  dup6\n    /* \"#utility.yul\":2404:2429   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2377:2395   */\n  add\n  swap1\n    /* \"#utility.yul\":2258:2435   */\n  jump\n    /* \"BillionCash.sol\":5648:5685  Transfer(address(0), account, amount) */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BillionCash.sol\":5468:5693  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_30:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_31:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_37:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_41\n  tag_30\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_42:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_32:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_27)\n    /* \"#utility.yul\":642:722   */\ntag_44:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_27)\n    /* \"#utility.yul\":731:807   */\ntag_45:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_46)\n    /* \"#utility.yul\":836:895   */\ntag_47:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_27)\n    /* \"#utility.yul\":904:1034   */\ntag_48:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_50\n  tag_30\n  jump\t// in\ntag_50:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_27)\n    /* \"#utility.yul\":816:1034   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_51\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_27)\n    /* \"#utility.yul\":1043:1202   */\ntag_51:\n    /* \"#utility.yul\":1234:1268   */\n  tag_52\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_54\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap4\n    /* \"#utility.yul\":573:1379   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1515   */\ntag_2:\n    /* \"#utility.yul\":1444:1449   */\n  0x00\n    /* \"#utility.yul\":1473:1509   */\n  tag_28\n    /* \"#utility.yul\":1500:1508   */\n  dup4\n    /* \"#utility.yul\":1494:1498   */\n  dup4\n    /* \"#utility.yul\":1473:1509   */\n  tag_32\n  jump\t// in\n    /* \"#utility.yul\":1520:1688   */\ntag_4:\n    /* \"#utility.yul\":1560:1567   */\n  0x00\n    /* \"#utility.yul\":1626:1627   */\n  dup2\n    /* \"#utility.yul\":1622:1623   */\n  0x00\n    /* \"#utility.yul\":1618:1624   */\n  not\n    /* \"#utility.yul\":1614:1628   */\n  div\n    /* \"#utility.yul\":1611:1612   */\n  dup4\n    /* \"#utility.yul\":1608:1629   */\n  gt\n    /* \"#utility.yul\":1603:1604   */\n  dup3\n    /* \"#utility.yul\":1596:1605   */\n  iszero\n    /* \"#utility.yul\":1589:1606   */\n  iszero\n    /* \"#utility.yul\":1585:1630   */\n  and\n    /* \"#utility.yul\":1582:1653   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1633:1651   */\n  tag_59\n  tag_30\n  jump\t// in\ntag_59:\n  pop\n    /* \"#utility.yul\":1673:1682   */\n  mul\n  swap1\n    /* \"#utility.yul\":1520:1688   */\n  jump\t// out\n    /* \"#utility.yul\":1693:1870   */\ntag_33:\n    /* \"#utility.yul\":1772:1785   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1814:1845   */\n  dup2\n  and\n    /* \"#utility.yul\":1804:1846   */\n  dup2\n  eq\n    /* \"#utility.yul\":1794:1864   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1860:1861   */\n  0x00\n    /* \"#utility.yul\":1857:1858   */\n  dup1\n    /* \"#utility.yul\":1850:1862   */\n  revert\n    /* \"#utility.yul\":1794:1864   */\ntag_61:\n    /* \"#utility.yul\":1693:1870   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1875:2253   */\ntag_7:\n    /* \"#utility.yul\":1963:1969   */\n  0x00\n    /* \"#utility.yul\":1971:1977   */\n  dup1\n    /* \"#utility.yul\":1979:1985   */\n  0x00\n    /* \"#utility.yul\":2032:2034   */\n  0x60\n    /* \"#utility.yul\":2020:2029   */\n  dup5\n    /* \"#utility.yul\":2011:2018   */\n  dup7\n    /* \"#utility.yul\":2007:2030   */\n  sub\n    /* \"#utility.yul\":2003:2035   */\n  slt\n    /* \"#utility.yul\":2000:2052   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2048:2049   */\n  0x00\n    /* \"#utility.yul\":2045:2046   */\n  dup1\n    /* \"#utility.yul\":2038:2050   */\n  revert\n    /* \"#utility.yul\":2000:2052   */\ntag_63:\n    /* \"#utility.yul\":2071:2111   */\n  tag_64\n    /* \"#utility.yul\":2101:2110   */\n  dup5\n    /* \"#utility.yul\":2071:2111   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2061:2111   */\n  swap3\n  pop\n    /* \"#utility.yul\":2130:2179   */\n  tag_65\n    /* \"#utility.yul\":2175:2177   */\n  0x20\n    /* \"#utility.yul\":2164:2173   */\n  dup6\n    /* \"#utility.yul\":2160:2178   */\n  add\n    /* \"#utility.yul\":2130:2179   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2120:2179   */\n  swap2\n  pop\n    /* \"#utility.yul\":2198:2247   */\n  tag_66\n    /* \"#utility.yul\":2243:2245   */\n  0x40\n    /* \"#utility.yul\":2232:2241   */\n  dup6\n    /* \"#utility.yul\":2228:2246   */\n  add\n    /* \"#utility.yul\":2198:2247   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2188:2247   */\n  swap1\n  pop\n    /* \"#utility.yul\":1875:2253   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2440:2568   */\ntag_29:\n    /* \"#utility.yul\":2480:2483   */\n  0x00\n    /* \"#utility.yul\":2511:2512   */\n  dup3\n    /* \"#utility.yul\":2507:2513   */\n  not\n    /* \"#utility.yul\":2504:2505   */\n  dup3\n    /* \"#utility.yul\":2501:2514   */\n  gt\n    /* \"#utility.yul\":2498:2537   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2517:2535   */\n  tag_70\n  tag_30\n  jump\t// in\ntag_70:\n  pop\n    /* \"#utility.yul\":2553:2562   */\n  add\n  swap1\n    /* \"#utility.yul\":2440:2568   */\n  jump\t// out\ntag_34:\n    /* \"BillionCash.sol\":186:6090  contract BillionCash is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BillionCash.sol\":186:6090  contract BillionCash is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7711c596\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xba0fb861\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xeaf98d23\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfae92612\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x7711c596\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa70b4607\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x29b1c15c\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x29b1c15c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x01c234a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_3:\n      tag_27\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BillionCash.sol\":1276:1363  function name() public pure returns (string memory) {... */\n    tag_4:\n        /* \"BillionCash.sol\":1346:1355  tokenName */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0b\n      dup2\n      mstore\n      shl(0xab, 0x084d2d8d8d2dedc86c2e6d)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"BillionCash.sol\":1276:1363  function name() public pure returns (string memory) {... */\n    tag_31:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n        /* \"BillionCash.sol\":3148:3390  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":1400:1414   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1393:1415   */\n      iszero\n        /* \"#utility.yul\":1375:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1363:1365   */\n      0x20\n        /* \"#utility.yul\":1348:1366   */\n      add\n        /* \"BillionCash.sol\":3148:3390  function approve(address spender, uint256 value) public returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1235:1422   */\n      jump\n        /* \"BillionCash.sol\":1565:1656  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n        /* \"BillionCash.sol\":1636:1648  _totalSupply */\n      sload(0x03)\n        /* \"BillionCash.sol\":1565:1656  function totalSupply() public view returns (uint256) {... */\n      jump(tag_27)\n        /* \"BillionCash.sol\":3398:4694  function transferFrom(... */\n    tag_7:\n      tag_35\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"BillionCash.sol\":5701:5834  function setDevelopmentAddress(address  _developmentAddress) external onlyOwner {... */\n    tag_8:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"BillionCash.sol\":1470:1557  function decimals() public pure returns (uint8) {... */\n    tag_9:\n      mload(0x40)\n        /* \"BillionCash.sol\":506:508  18 */\n      0x12\n        /* \"#utility.yul\":2093:2129   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2081:2083   */\n      0x20\n        /* \"#utility.yul\":2066:2084   */\n      add\n        /* \"BillionCash.sol\":1470:1557  function decimals() public pure returns (uint8) {... */\n      tag_29\n        /* \"#utility.yul\":1951:2135   */\n      jump\n        /* \"BillionCash.sol\":4702:5072  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_10:\n      tag_35\n      tag_58\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n        /* \"BillionCash.sol\":1664:1777  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_11:\n      tag_27\n      tag_62\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_62:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":1746:1769  _BCTokenBalances[owner] */\n      and\n        /* \"BillionCash.sol\":1719:1726  uint256 */\n      0x00\n        /* \"BillionCash.sol\":1746:1769  _BCTokenBalances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":1746:1762  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":1746:1769  _BCTokenBalances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"BillionCash.sol\":1664:1777  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_49\n      tag_66\n      jump\t// in\n        /* \"BillionCash.sol\":258:309  mapping(address => uint256) public _BCTokenBalances */\n    tag_13:\n      tag_27\n      tag_68\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_68:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2286:2337   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2274:2276   */\n      0x20\n        /* \"#utility.yul\":2259:2277   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":2140:2343   */\n      jump\n        /* \"BillionCash.sol\":1371:1462  function symbol() public pure returns (string memory) {... */\n    tag_15:\n        /* \"BillionCash.sol\":1443:1454  tokenSymbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x4243)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"BillionCash.sol\":1371:1462  function symbol() public pure returns (string memory) {... */\n      jump(tag_31)\n        /* \"BillionCash.sol\":5080:5460  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_16:\n      tag_35\n      tag_79\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"BillionCash.sol\":5967:6087  function setPancakeAddress(address  _pancakeAddress) external onlyOwner {... */\n    tag_17:\n      tag_49\n      tag_83\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n        /* \"BillionCash.sol\":1785:2969  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_18:\n      tag_35\n      tag_86\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n        /* \"BillionCash.sol\":316:379  mapping(address => mapping(address => uint256)) public _allowed */\n    tag_19:\n      tag_27\n      tag_90\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_90:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"BillionCash.sol\":2977:3140  function allowance(address owner, address spender)... */\n    tag_20:\n      tag_27\n      tag_95\n      calldatasize\n      0x04\n      tag_91\n      jump\t// in\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3108:3123  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"BillionCash.sol\":3076:3083  uint256 */\n      0x00\n        /* \"BillionCash.sol\":3108:3123  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3108:3116  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3108:3123  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":3108:3132  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"BillionCash.sol\":2977:3140  function allowance(address owner, address spender)... */\n      jump\n        /* \"BillionCash.sol\":716:756  uint256 public constant FEE_PERCENT = 50 */\n    tag_21:\n      tag_27\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":716:756  uint256 public constant FEE_PERCENT = 50 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_49\n      tag_102\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"BillionCash.sol\":5840:5961  function setMarketAddress(address  _marketAddress) external onlyOwner {... */\n    tag_23:\n      tag_49\n      tag_105\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n        /* \"BillionCash.sol\":3148:3390  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_38:\n        /* \"BillionCash.sol\":3213:3217  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3238:3259  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":3230:3260  require(spender != address(0)) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"BillionCash.sol\":3280:3290  msg.sender */\n      caller\n        /* \"BillionCash.sol\":3271:3291  _allowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3271:3279  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3271:3291  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3271:3300  _allowed[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":3271:3308  _allowed[msg.sender][spender] = value */\n      dup7\n      swap1\n      sstore\n        /* \"BillionCash.sol\":3324:3360  Approval(msg.sender, spender, value) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3271:3300  _allowed[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"BillionCash.sol\":3280:3290  msg.sender */\n      swap2\n        /* \"BillionCash.sol\":3324:3360  Approval(msg.sender, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":3324:3360  Approval(msg.sender, spender, value) */\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":3378:3382  true */\n      0x01\n        /* \"BillionCash.sol\":3148:3390  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":3398:4694  function transferFrom(... */\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3545:3567  _BCTokenBalances[from] */\n      dup4\n      and\n        /* \"BillionCash.sol\":3511:3515  bool */\n      0x00\n        /* \"BillionCash.sol\":3545:3567  _BCTokenBalances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3545:3561  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3545:3567  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3536:3567  value <= _BCTokenBalances[from] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":3528:3568  require(value <= _BCTokenBalances[from]) */\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3596:3610  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3596:3604  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3596:3610  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":3611:3621  msg.sender */\n      caller\n        /* \"BillionCash.sol\":3596:3622  _allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3587:3622  value <= _allowed[from][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":3579:3623  require(value <= _allowed[from][msg.sender]) */\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3642:3658  to != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":3634:3659  require(to != address(0)) */\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3697:3719  _BCTokenBalances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3697:3713  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3697:3719  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3697:3730  _BCTokenBalances[from].sub(value) */\n      tag_117\n      swap1\n        /* \"BillionCash.sol\":3724:3729  value */\n      dup4\n        /* \"BillionCash.sol\":3697:3723  _BCTokenBalances[from].sub */\n      tag_118\n        /* \"BillionCash.sol\":3697:3730  _BCTokenBalances[from].sub(value) */\n      jump\t// in\n    tag_117:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3672:3694  _BCTokenBalances[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3672:3688  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3672:3694  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BillionCash.sol\":3672:3730  _BCTokenBalances[from] = _BCTokenBalances[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"BillionCash.sol\":3767:3811  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      tag_119\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":3767:3789  value.mul(FEE_PERCENT) */\n      tag_120\n        /* \"BillionCash.sol\":3767:3772  value */\n      dup6\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":3767:3776  value.mul */\n      tag_121\n        /* \"BillionCash.sol\":3767:3789  value.mul(FEE_PERCENT) */\n      jump\t// in\n    tag_120:\n        /* \"BillionCash.sol\":3767:3793  value.mul(FEE_PERCENT).div */\n      swap1\n      tag_122\n        /* \"BillionCash.sol\":3767:3811  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      jump\t// in\n    tag_119:\n        /* \"BillionCash.sol\":3743:3811  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      swap1\n      pop\n        /* \"BillionCash.sol\":3822:3846  uint256 tokensToTransfer */\n      0x00\n        /* \"BillionCash.sol\":3849:3953  value... */\n      tag_123\n        /* \"BillionCash.sol\":3743:3811  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":3849:3920  value... */\n      tag_125\n        /* \"BillionCash.sol\":3743:3811  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup2\n        /* \"BillionCash.sol\":3849:3920  value... */\n      dup2\n        /* \"BillionCash.sol\":3849:3854  value */\n      dup9\n        /* \"BillionCash.sol\":3743:3811  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":3849:3872  value... */\n      tag_118\n        /* \"BillionCash.sol\":3849:3887  value... */\n      jump\t// in\n    tag_125:\n        /* \"BillionCash.sol\":3849:3905  value... */\n      swap1\n      tag_118\n        /* \"BillionCash.sol\":3849:3920  value... */\n      jump\t// in\n        /* \"BillionCash.sol\":3849:3953  value... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3989:4009  _BCTokenBalances[to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3989:4005  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3989:4009  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3822:3953  uint256 tokensToTransfer = value... */\n      swap1\n      swap2\n      pop\n        /* \"BillionCash.sol\":3989:4031  _BCTokenBalances[to].add(tokensToTransfer) */\n      tag_126\n      swap1\n        /* \"BillionCash.sol\":3822:3953  uint256 tokensToTransfer = value... */\n      dup3\n        /* \"BillionCash.sol\":3989:4013  _BCTokenBalances[to].add */\n      tag_107\n        /* \"BillionCash.sol\":3989:4031  _BCTokenBalances[to].add(tokensToTransfer) */\n      jump\t// in\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3966:3986  _BCTokenBalances[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3966:3982  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3966:3986  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":3966:4031  _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4092:4104  adminAddress */\n      sload(0x06)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4075:4105  _BCTokenBalances[adminAddress] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4075:4148  _BCTokenBalances[adminAddress].add(... */\n      tag_127\n      swap1\n        /* \"BillionCash.sol\":4124:4137  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4075:4109  _BCTokenBalances[adminAddress].add */\n      tag_107\n        /* \"BillionCash.sol\":4075:4148  _BCTokenBalances[adminAddress].add(... */\n      jump\t// in\n    tag_127:\n        /* \"BillionCash.sol\":4059:4071  adminAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4042:4072  _BCTokenBalances[adminAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4042:4058  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4042:4072  _BCTokenBalances[adminAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":4042:4148  _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4212:4227  marketingwallet */\n      sload(0x05)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4195:4228  _BCTokenBalances[marketingwallet] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4195:4271  _BCTokenBalances[marketingwallet].add(... */\n      tag_128\n      swap1\n        /* \"BillionCash.sol\":4247:4260  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4195:4232  _BCTokenBalances[marketingwallet].add */\n      tag_107\n        /* \"BillionCash.sol\":4195:4271  _BCTokenBalances[marketingwallet].add(... */\n      jump\t// in\n    tag_128:\n        /* \"BillionCash.sol\":4176:4191  marketingwallet */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4159:4192  _BCTokenBalances[marketingwallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4159:4175  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4159:4192  _BCTokenBalances[marketingwallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":4159:4271  _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4331:4342  pancakeswap */\n      sload(0x04)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4314:4343  _BCTokenBalances[pancakeswap] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4314:4386  _BCTokenBalances[pancakeswap].add(... */\n      tag_129\n      swap1\n        /* \"BillionCash.sol\":4362:4375  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4314:4347  _BCTokenBalances[pancakeswap].add */\n      tag_107\n        /* \"BillionCash.sol\":4314:4386  _BCTokenBalances[pancakeswap].add(... */\n      jump\t// in\n    tag_129:\n        /* \"BillionCash.sol\":4299:4310  pancakeswap */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4282:4311  _BCTokenBalances[pancakeswap] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4282:4298  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4282:4311  _BCTokenBalances[pancakeswap] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":4282:4386  _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(... */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"BillionCash.sol\":4426:4440  _allowed[from] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4426:4434  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4426:4440  _allowed[from] */\n      dup3\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"BillionCash.sol\":4441:4451  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4426:4452  _allowed[from][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4426:4463  _allowed[from][msg.sender].sub(value) */\n      tag_130\n      swap1\n        /* \"BillionCash.sol\":4457:4462  value */\n      dup6\n        /* \"BillionCash.sol\":4426:4456  _allowed[from][msg.sender].sub */\n      tag_118\n        /* \"BillionCash.sol\":4426:4463  _allowed[from][msg.sender].sub(value) */\n      jump\t// in\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4397:4411  _allowed[from] */\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4397:4405  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4397:4411  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":4412:4422  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4397:4423  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":4397:4463  _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4502:4514  adminAddress */\n      sload(0x06)\n        /* \"BillionCash.sol\":4481:4530  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n      mload\n        /* \"BillionCash.sol\":4502:4514  adminAddress */\n      swap2\n      and\n      swap2\n        /* \"BillionCash.sol\":4412:4422  msg.sender */\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4481:4530  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n      tag_131\n      swap1\n        /* \"BillionCash.sol\":4516:4529  BCTokenForFee */\n      dup7\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"BillionCash.sol\":4481:4530  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":4567:4582  marketingwallet */\n      sload(0x05)\n        /* \"BillionCash.sol\":4546:4598  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4567:4582  marketingwallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":4555:4565  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4546:4598  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4546:4598  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":4635:4646  pancakeswap */\n      sload(0x04)\n        /* \"BillionCash.sol\":4614:4662  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4635:4646  pancakeswap */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":4623:4633  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4614:4662  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4614:4662  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":4682:4686  true */\n      0x01\n      swap6\n        /* \"BillionCash.sol\":3398:4694  function transferFrom(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":5701:5834  function setDevelopmentAddress(address  _developmentAddress) external onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"BillionCash.sol\":5792:5804  adminAddress */\n      0x06\n        /* \"BillionCash.sol\":5792:5826  adminAddress = _developmentAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BillionCash.sol\":5701:5834  function setDevelopmentAddress(address  _developmentAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"BillionCash.sol\":4702:5072  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_59:\n        /* \"BillionCash.sol\":4800:4804  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4830:4851  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":4822:4852  require(spender != address(0)) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"BillionCash.sol\":4919:4929  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4910:4930  _allowed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4910:4918  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4910:4930  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4910:4939  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4910:4955  _allowed[msg.sender][spender].add(addedValue) */\n      tag_145\n      swap1\n        /* \"BillionCash.sol\":4944:4954  addedValue */\n      dup4\n        /* \"BillionCash.sol\":4910:4943  _allowed[msg.sender][spender].add */\n      tag_107\n        /* \"BillionCash.sol\":4910:4955  _allowed[msg.sender][spender].add(addedValue) */\n      jump\t// in\n    tag_145:\n        /* \"BillionCash.sol\":4872:4882  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4863:4883  _allowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4863:4871  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4863:4883  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4863:4892  _allowed[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":4863:4966  _allowed[msg.sender][spender] = (... */\n      dup6\n      swap1\n      sstore\n        /* \"BillionCash.sol\":4982:5042  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      swap4\n      dup5\n      mstore\n        /* \"BillionCash.sol\":4863:4892  _allowed[msg.sender][spender] */\n      swap1\n      swap3\n        /* \"BillionCash.sol\":4982:5042  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4982:5042  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      tag_111\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"BillionCash.sol\":5080:5460  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_80:\n        /* \"BillionCash.sol\":5183:5187  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":5213:5234  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":5205:5235  require(spender != address(0)) */\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n        /* \"BillionCash.sol\":5302:5312  msg.sender */\n      caller\n        /* \"BillionCash.sol\":5293:5313  _allowed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":5293:5301  _allowed */\n      0x02\n        /* \"BillionCash.sol\":5293:5313  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":5293:5322  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":5293:5343  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_145\n      swap1\n        /* \"BillionCash.sol\":5327:5342  subtractedValue */\n      dup4\n        /* \"BillionCash.sol\":5293:5326  _allowed[msg.sender][spender].sub */\n      tag_118\n        /* \"BillionCash.sol\":5293:5343  _allowed[msg.sender][spender].sub(subtractedValue) */\n      jump\t// in\n        /* \"BillionCash.sol\":5967:6087  function setPancakeAddress(address  _pancakeAddress) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_165:\n        /* \"BillionCash.sol\":6050:6061  pancakeswap */\n      0x04\n        /* \"BillionCash.sol\":6050:6079  pancakeswap = _pancakeAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BillionCash.sol\":5967:6087  function setPancakeAddress(address  _pancakeAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"BillionCash.sol\":1785:2969  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_87:\n        /* \"BillionCash.sol\":1897:1907  msg.sender */\n      caller\n        /* \"BillionCash.sol\":1846:1850  bool */\n      0x00\n        /* \"BillionCash.sol\":1880:1908  _BCTokenBalances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":1880:1896  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":1880:1908  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"BillionCash.sol\":1871:1908  value <= _BCTokenBalances[msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":1863:1909  require(value <= _BCTokenBalances[msg.sender]) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":1928:1944  to != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":1920:1945  require(to != address(0)) */\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n        /* \"BillionCash.sol\":1958:1979  uint256 BCTokenForFee */\n      0x00\n        /* \"BillionCash.sol\":1982:2026  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      tag_171\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":1982:2004  value.mul(FEE_PERCENT) */\n      tag_120\n        /* \"BillionCash.sol\":1982:1987  value */\n      dup6\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":1982:1991  value.mul */\n      tag_121\n        /* \"BillionCash.sol\":1982:2004  value.mul(FEE_PERCENT) */\n      jump\t// in\n        /* \"BillionCash.sol\":1982:2026  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n    tag_171:\n        /* \"BillionCash.sol\":1958:2026  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      swap1\n      pop\n        /* \"BillionCash.sol\":2037:2061  uint256 tokensToTransfer */\n      0x00\n        /* \"BillionCash.sol\":2064:2168  value... */\n      tag_173\n        /* \"BillionCash.sol\":1958:2026  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":2064:2135  value... */\n      tag_125\n        /* \"BillionCash.sol\":1958:2026  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup2\n        /* \"BillionCash.sol\":2064:2135  value... */\n      dup2\n        /* \"BillionCash.sol\":2064:2069  value */\n      dup9\n        /* \"BillionCash.sol\":1958:2026  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":2064:2087  value... */\n      tag_118\n        /* \"BillionCash.sol\":2064:2102  value... */\n      jump\t// in\n        /* \"BillionCash.sol\":2064:2168  value... */\n    tag_173:\n        /* \"BillionCash.sol\":2229:2239  msg.sender */\n      caller\n        /* \"BillionCash.sol\":2212:2240  _BCTokenBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2212:2228  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2212:2240  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2037:2168  uint256 tokensToTransfer = value... */\n      swap1\n      swap2\n      pop\n        /* \"BillionCash.sol\":2212:2251  _BCTokenBalances[msg.sender].sub(value) */\n      tag_176\n      swap1\n        /* \"BillionCash.sol\":2245:2250  value */\n      dup6\n        /* \"BillionCash.sol\":2212:2244  _BCTokenBalances[msg.sender].sub */\n      tag_118\n        /* \"BillionCash.sol\":2212:2251  _BCTokenBalances[msg.sender].sub(value) */\n      jump\t// in\n    tag_176:\n        /* \"BillionCash.sol\":2198:2208  msg.sender */\n      caller\n        /* \"BillionCash.sol\":2181:2209  _BCTokenBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2181:2197  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2181:2209  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2181:2251  _BCTokenBalances[msg.sender] = _BCTokenBalances[msg.sender].sub(value) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2285:2305  _BCTokenBalances[to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2285:2327  _BCTokenBalances[to].add(tokensToTransfer) */\n      tag_177\n      swap1\n        /* \"BillionCash.sol\":2310:2326  tokensToTransfer */\n      dup3\n        /* \"BillionCash.sol\":2285:2309  _BCTokenBalances[to].add */\n      tag_107\n        /* \"BillionCash.sol\":2285:2327  _BCTokenBalances[to].add(tokensToTransfer) */\n      jump\t// in\n    tag_177:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2262:2282  _BCTokenBalances[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2262:2278  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2262:2282  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2262:2327  _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2388:2400  adminAddress */\n      sload(0x06)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2371:2401  _BCTokenBalances[adminAddress] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2371:2444  _BCTokenBalances[adminAddress].add(... */\n      tag_178\n      swap1\n        /* \"BillionCash.sol\":2420:2433  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2371:2405  _BCTokenBalances[adminAddress].add */\n      tag_107\n        /* \"BillionCash.sol\":2371:2444  _BCTokenBalances[adminAddress].add(... */\n      jump\t// in\n    tag_178:\n        /* \"BillionCash.sol\":2355:2367  adminAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2338:2368  _BCTokenBalances[adminAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2338:2354  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2338:2368  _BCTokenBalances[adminAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2338:2444  _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2508:2523  marketingwallet */\n      sload(0x05)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2491:2524  _BCTokenBalances[marketingwallet] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2491:2567  _BCTokenBalances[marketingwallet].add(... */\n      tag_179\n      swap1\n        /* \"BillionCash.sol\":2543:2556  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2491:2528  _BCTokenBalances[marketingwallet].add */\n      tag_107\n        /* \"BillionCash.sol\":2491:2567  _BCTokenBalances[marketingwallet].add(... */\n      jump\t// in\n    tag_179:\n        /* \"BillionCash.sol\":2472:2487  marketingwallet */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2455:2488  _BCTokenBalances[marketingwallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2455:2471  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2455:2488  _BCTokenBalances[marketingwallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2455:2567  _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2627:2638  pancakeswap */\n      sload(0x04)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2610:2639  _BCTokenBalances[pancakeswap] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2610:2682  _BCTokenBalances[pancakeswap].add(... */\n      tag_180\n      swap1\n        /* \"BillionCash.sol\":2658:2671  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2610:2643  _BCTokenBalances[pancakeswap].add */\n      tag_107\n        /* \"BillionCash.sol\":2610:2682  _BCTokenBalances[pancakeswap].add(... */\n      jump\t// in\n    tag_180:\n        /* \"BillionCash.sol\":2595:2606  pancakeswap */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2578:2607  _BCTokenBalances[pancakeswap] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2578:2594  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2578:2607  _BCTokenBalances[pancakeswap] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":2578:2682  _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2700:2742  Transfer(msg.sender, to, tokensToTransfer) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2700:2742  Transfer(msg.sender, to, tokensToTransfer) */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"BillionCash.sol\":2709:2719  msg.sender */\n      caller\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2700:2742  Transfer(msg.sender, to, tokensToTransfer) */\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2700:2742  Transfer(msg.sender, to, tokensToTransfer) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2779:2791  adminAddress */\n      sload(0x06)\n        /* \"BillionCash.sol\":2758:2807  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2779:2791  adminAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2767:2777  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2758:2807  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2758:2807  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2844:2859  marketingwallet */\n      sload(0x05)\n        /* \"BillionCash.sol\":2823:2875  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2844:2859  marketingwallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2832:2842  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2823:2875  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2823:2875  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2912:2923  pancakeswap */\n      sload(0x04)\n        /* \"BillionCash.sol\":2891:2939  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2912:2923  pancakeswap */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2900:2910  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2891:2939  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2891:2939  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":2957:2961  true */\n      0x01\n      swap5\n        /* \"BillionCash.sol\":1785:2969  function transfer(address to, uint256 value) public returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3176:3178   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3158:3179   */\n      mstore\n        /* \"#utility.yul\":3215:3217   */\n      0x26\n        /* \"#utility.yul\":3195:3213   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3188:3218   */\n      mstore\n        /* \"#utility.yul\":3254:3288   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3234:3252   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3227:3289   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3305:3323   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3298:3334   */\n      mstore\n        /* \"#utility.yul\":3351:3370   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_139\n        /* \"#utility.yul\":2974:3376   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_155\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":5840:5961  function setMarketAddress(address  _marketAddress) external onlyOwner {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_199:\n        /* \"BillionCash.sol\":5921:5936  marketingwallet */\n      0x05\n        /* \"BillionCash.sol\":5921:5953  marketingwallet = _marketAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BillionCash.sol\":5840:5961  function setMarketAddress(address  _marketAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_207\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_210\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_213\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:793   */\n    tag_34:\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":337:339   */\n      0x20\n        /* \"#utility.yul\":366:368   */\n      dup1\n        /* \"#utility.yul\":355:364   */\n      dup4\n        /* \"#utility.yul\":348:369   */\n      mstore\n        /* \"#utility.yul\":398:404   */\n      dup4\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":441:447   */\n      dup1\n        /* \"#utility.yul\":436:438   */\n      dup3\n        /* \"#utility.yul\":425:434   */\n      dup6\n        /* \"#utility.yul\":421:439   */\n      add\n        /* \"#utility.yul\":414:448   */\n      mstore\n        /* \"#utility.yul\":466:467   */\n      0x00\n        /* \"#utility.yul\":476:616   */\n    tag_221:\n        /* \"#utility.yul\":490:496   */\n      dup2\n        /* \"#utility.yul\":487:488   */\n      dup2\n        /* \"#utility.yul\":484:497   */\n      lt\n        /* \"#utility.yul\":476:616   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":585:599   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":581:604   */\n      dup4\n      add\n        /* \"#utility.yul\":575:605   */\n      mload\n        /* \"#utility.yul\":551:568   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":570:572   */\n      0x40\n        /* \"#utility.yul\":547:573   */\n      add\n        /* \"#utility.yul\":540:606   */\n      mstore\n        /* \"#utility.yul\":505:515   */\n      dup3\n      add\n        /* \"#utility.yul\":476:616   */\n      jump(tag_221)\n    tag_223:\n        /* \"#utility.yul\":634:640   */\n      dup2\n        /* \"#utility.yul\":631:632   */\n      dup2\n        /* \"#utility.yul\":628:641   */\n      gt\n        /* \"#utility.yul\":625:716   */\n      iszero\n      tag_224\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":699:701   */\n      0x40\n        /* \"#utility.yul\":690:696   */\n      dup4\n        /* \"#utility.yul\":679:688   */\n      dup8\n        /* \"#utility.yul\":675:697   */\n      add\n        /* \"#utility.yul\":671:702   */\n      add\n        /* \"#utility.yul\":664:706   */\n      mstore\n        /* \"#utility.yul\":625:716   */\n    tag_224:\n      pop\n        /* \"#utility.yul\":777:779   */\n      0x1f\n        /* \"#utility.yul\":756:771   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":752:781   */\n      and\n        /* \"#utility.yul\":737:782   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":784:786   */\n      0x40\n        /* \"#utility.yul\":733:787   */\n      add\n      swap4\n        /* \"#utility.yul\":196:793   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":798:971   */\n    tag_216:\n        /* \"#utility.yul\":866:886   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":915:946   */\n      dup2\n      and\n        /* \"#utility.yul\":905:947   */\n      dup2\n      eq\n        /* \"#utility.yul\":895:965   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":961:962   */\n      0x00\n        /* \"#utility.yul\":958:959   */\n      dup1\n        /* \"#utility.yul\":951:963   */\n      revert\n        /* \"#utility.yul\":895:965   */\n    tag_226:\n        /* \"#utility.yul\":798:971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":976:1230   */\n    tag_37:\n        /* \"#utility.yul\":1044:1050   */\n      0x00\n        /* \"#utility.yul\":1052:1058   */\n      dup1\n        /* \"#utility.yul\":1105:1107   */\n      0x40\n        /* \"#utility.yul\":1093:1102   */\n      dup4\n        /* \"#utility.yul\":1084:1091   */\n      dup6\n        /* \"#utility.yul\":1080:1103   */\n      sub\n        /* \"#utility.yul\":1076:1108   */\n      slt\n        /* \"#utility.yul\":1073:1125   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":1121:1122   */\n      0x00\n        /* \"#utility.yul\":1118:1119   */\n      dup1\n        /* \"#utility.yul\":1111:1123   */\n      revert\n        /* \"#utility.yul\":1073:1125   */\n    tag_228:\n        /* \"#utility.yul\":1144:1173   */\n      tag_229\n        /* \"#utility.yul\":1163:1172   */\n      dup4\n        /* \"#utility.yul\":1144:1173   */\n      tag_216\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":1134:1173   */\n      swap5\n        /* \"#utility.yul\":1220:1222   */\n      0x20\n        /* \"#utility.yul\":1205:1223   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1192:1224   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":976:1230   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_46:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_232:\n        /* \"#utility.yul\":1612:1641   */\n      tag_233\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_216\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_234\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_216\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1760:1946   */\n    tag_51:\n        /* \"#utility.yul\":1819:1825   */\n      0x00\n        /* \"#utility.yul\":1872:1874   */\n      0x20\n        /* \"#utility.yul\":1860:1869   */\n      dup3\n        /* \"#utility.yul\":1851:1858   */\n      dup5\n        /* \"#utility.yul\":1847:1870   */\n      sub\n        /* \"#utility.yul\":1843:1875   */\n      slt\n        /* \"#utility.yul\":1840:1892   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":1888:1889   */\n      0x00\n        /* \"#utility.yul\":1885:1886   */\n      dup1\n        /* \"#utility.yul\":1878:1890   */\n      revert\n        /* \"#utility.yul\":1840:1892   */\n    tag_236:\n        /* \"#utility.yul\":1911:1940   */\n      tag_203\n        /* \"#utility.yul\":1930:1939   */\n      dup3\n        /* \"#utility.yul\":1911:1940   */\n      tag_216\n      jump\t// in\n        /* \"#utility.yul\":2348:2608   */\n    tag_91:\n        /* \"#utility.yul\":2416:2422   */\n      0x00\n        /* \"#utility.yul\":2424:2430   */\n      dup1\n        /* \"#utility.yul\":2477:2479   */\n      0x40\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2456:2463   */\n      dup6\n        /* \"#utility.yul\":2452:2475   */\n      sub\n        /* \"#utility.yul\":2448:2480   */\n      slt\n        /* \"#utility.yul\":2445:2497   */\n      iszero\n      tag_241\n      jumpi\n        /* \"#utility.yul\":2493:2494   */\n      0x00\n        /* \"#utility.yul\":2490:2491   */\n      dup1\n        /* \"#utility.yul\":2483:2495   */\n      revert\n        /* \"#utility.yul\":2445:2497   */\n    tag_241:\n        /* \"#utility.yul\":2516:2545   */\n      tag_242\n        /* \"#utility.yul\":2535:2544   */\n      dup4\n        /* \"#utility.yul\":2516:2545   */\n      tag_216\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":2506:2545   */\n      swap2\n      pop\n        /* \"#utility.yul\":2564:2602   */\n      tag_243\n        /* \"#utility.yul\":2598:2600   */\n      0x20\n        /* \"#utility.yul\":2587:2596   */\n      dup5\n        /* \"#utility.yul\":2583:2601   */\n      add\n        /* \"#utility.yul\":2564:2602   */\n      tag_216\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":2554:2602   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2608   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2613:2969   */\n    tag_140:\n        /* \"#utility.yul\":2815:2817   */\n      0x20\n        /* \"#utility.yul\":2797:2818   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2834:2852   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2827:2857   */\n      mstore\n        /* \"#utility.yul\":2893:2927   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2888:2890   */\n      0x40\n        /* \"#utility.yul\":2873:2891   */\n      dup3\n      add\n        /* \"#utility.yul\":2866:2928   */\n      mstore\n        /* \"#utility.yul\":2960:2962   */\n      0x60\n        /* \"#utility.yul\":2945:2963   */\n      add\n      swap1\n        /* \"#utility.yul\":2613:2969   */\n      jump\t// out\n        /* \"#utility.yul\":3381:3508   */\n    tag_217:\n        /* \"#utility.yul\":3442:3452   */\n      0x4e487b71\n        /* \"#utility.yul\":3437:3440   */\n      0xe0\n        /* \"#utility.yul\":3433:3453   */\n      shl\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3423:3454   */\n      mstore\n        /* \"#utility.yul\":3473:3477   */\n      0x11\n        /* \"#utility.yul\":3470:3471   */\n      0x04\n        /* \"#utility.yul\":3463:3478   */\n      mstore\n        /* \"#utility.yul\":3497:3501   */\n      0x24\n        /* \"#utility.yul\":3494:3495   */\n      0x00\n        /* \"#utility.yul\":3487:3502   */\n      revert\n        /* \"#utility.yul\":3513:3641   */\n    tag_204:\n        /* \"#utility.yul\":3553:3556   */\n      0x00\n        /* \"#utility.yul\":3584:3585   */\n      dup3\n        /* \"#utility.yul\":3580:3586   */\n      not\n        /* \"#utility.yul\":3577:3578   */\n      dup3\n        /* \"#utility.yul\":3574:3587   */\n      gt\n        /* \"#utility.yul\":3571:3610   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":3590:3608   */\n      tag_249\n      tag_217\n      jump\t// in\n    tag_249:\n      pop\n        /* \"#utility.yul\":3626:3635   */\n      add\n      swap1\n        /* \"#utility.yul\":3513:3641   */\n      jump\t// out\n        /* \"#utility.yul\":3646:3771   */\n    tag_207:\n        /* \"#utility.yul\":3686:3690   */\n      0x00\n        /* \"#utility.yul\":3714:3715   */\n      dup3\n        /* \"#utility.yul\":3711:3712   */\n      dup3\n        /* \"#utility.yul\":3708:3716   */\n      lt\n        /* \"#utility.yul\":3705:3739   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":3719:3737   */\n      tag_252\n      tag_217\n      jump\t// in\n    tag_252:\n      pop\n        /* \"#utility.yul\":3756:3765   */\n      sub\n      swap1\n        /* \"#utility.yul\":3646:3771   */\n      jump\t// out\n        /* \"#utility.yul\":3776:3944   */\n    tag_210:\n        /* \"#utility.yul\":3816:3823   */\n      0x00\n        /* \"#utility.yul\":3882:3883   */\n      dup2\n        /* \"#utility.yul\":3878:3879   */\n      0x00\n        /* \"#utility.yul\":3874:3880   */\n      not\n        /* \"#utility.yul\":3870:3884   */\n      div\n        /* \"#utility.yul\":3867:3868   */\n      dup4\n        /* \"#utility.yul\":3864:3885   */\n      gt\n        /* \"#utility.yul\":3859:3860   */\n      dup3\n        /* \"#utility.yul\":3852:3861   */\n      iszero\n        /* \"#utility.yul\":3845:3862   */\n      iszero\n        /* \"#utility.yul\":3841:3886   */\n      and\n        /* \"#utility.yul\":3838:3909   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":3889:3907   */\n      tag_255\n      tag_217\n      jump\t// in\n    tag_255:\n      pop\n        /* \"#utility.yul\":3929:3938   */\n      mul\n      swap1\n        /* \"#utility.yul\":3776:3944   */\n      jump\t// out\n        /* \"#utility.yul\":3949:4166   */\n    tag_213:\n        /* \"#utility.yul\":3989:3990   */\n      0x00\n        /* \"#utility.yul\":4015:4016   */\n      dup3\n        /* \"#utility.yul\":4005:4137   */\n      tag_257\n      jumpi\n        /* \"#utility.yul\":4059:4069   */\n      0x4e487b71\n        /* \"#utility.yul\":4054:4057   */\n      0xe0\n        /* \"#utility.yul\":4050:4070   */\n      shl\n        /* \"#utility.yul\":4047:4048   */\n      0x00\n        /* \"#utility.yul\":4040:4071   */\n      mstore\n        /* \"#utility.yul\":4094:4098   */\n      0x12\n        /* \"#utility.yul\":4091:4092   */\n      0x04\n        /* \"#utility.yul\":4084:4099   */\n      mstore\n        /* \"#utility.yul\":4122:4126   */\n      0x24\n        /* \"#utility.yul\":4119:4120   */\n      0x00\n        /* \"#utility.yul\":4112:4127   */\n      revert\n        /* \"#utility.yul\":4005:4137   */\n    tag_257:\n      pop\n        /* \"#utility.yul\":4151:4160   */\n      div\n      swap1\n        /* \"#utility.yul\":3949:4166   */\n      jump\t// out\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa2646970667358221220284b50340951187e38915a5b8e92aa61fc2ebfa917171f93c394b0046ced42a064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_531": {
									"entryPoint": null,
									"id": 531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1060": {
									"entryPoint": 261,
									"id": 1060,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 181,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_302": {
									"entryPoint": 416,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2570:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:4",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:4"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:4"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:4"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:4"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:4",
																"statements": []
															},
															"src": "292:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:4",
														"type": ""
													}
												],
												"src": "146:422:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:4"
															},
															"nodeType": "YulIf",
															"src": "642:80:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:4"
															},
															"nodeType": "YulIf",
															"src": "731:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:4"
															},
															"nodeType": "YulIf",
															"src": "1043:159:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:4"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:4"
															},
															"nodeType": "YulIf",
															"src": "1277:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:4"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:4",
														"type": ""
													}
												],
												"src": "573:806:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1454:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1464:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1494:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1500:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1473:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1464:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1425:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1431:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1444:5:4",
														"type": ""
													}
												],
												"src": "1384:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1572:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1631:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1633:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1633:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1603:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1596:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1596:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1589:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1611:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1622:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1618:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1618:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1626:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1614:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1614:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1608:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1585:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:45:4"
															},
															"nodeType": "YulIf",
															"src": "1582:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1677:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1680:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1673:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1662:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1551:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1554:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1560:7:4",
														"type": ""
													}
												],
												"src": "1520:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1753:117:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1763:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1772:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1763:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1807:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1818:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1833:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1838:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1829:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1829:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1842:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1825:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1825:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1814:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1814:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1804:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:50:4"
															},
															"nodeType": "YulIf",
															"src": "1794:70:4"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1732:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1743:5:4",
														"type": ""
													}
												],
												"src": "1693:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1990:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2036:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2048:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2020:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2003:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2003:32:4"
															},
															"nodeType": "YulIf",
															"src": "2000:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2061:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2071:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:40:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2160:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2130:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:49:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2188:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2232:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2243:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2198:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:49:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1940:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1951:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1963:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1971:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1979:6:4",
														"type": ""
													}
												],
												"src": "1875:378:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2422:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2328:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2339:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:4",
														"type": ""
													}
												],
												"src": "2258:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2488:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2515:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2517:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2517:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2517:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2504:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2511:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2507:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2501:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:13:4"
															},
															"nodeType": "YulIf",
															"src": "2498:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2557:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2560:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2553:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2471:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2474:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2480:3:4",
														"type": ""
													}
												],
												"src": "2440:128:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620000126012600a620002ca565b620000209061c350620002d8565b6003553480156200003057600080fd5b506040516200117638038062001176833981016040819052620000539162000317565b6200005e33620000b5565b600680546001600160a01b038086166001600160a01b0319928316179092556005805485841690831681179091556004805493851693909216929092179055600354620000ac919062000105565b5050506200037c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806200011057600080fd5b6001600160a01b0382166000908152600160209081526040909120546200014291839062000b2d620001a0821b17901c565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001949085815260200190565b60405180910390a35050565b6000620001ae828462000361565b90505b92915050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200020e578160001904821115620001f257620001f2620001b7565b808516156200020057918102915b93841c9390800290620001d2565b509250929050565b6000826200022757506001620001b1565b816200023657506000620001b1565b81600181146200024f57600281146200025a576200027a565b6001915050620001b1565b60ff8411156200026e576200026e620001b7565b50506001821b620001b1565b5060208310610133831016604e8410600b84101617156200029f575081810a620001b1565b620002ab8383620001cd565b8060001904821115620002c257620002c2620001b7565b029392505050565b6000620001ae838362000216565b6000816000190483118215151615620002f557620002f5620001b7565b500290565b80516001600160a01b03811681146200031257600080fd5b919050565b6000806000606084860312156200032d57600080fd5b6200033884620002fa565b92506200034860208501620002fa565b91506200035860408501620002fa565b90509250925092565b60008219821115620003775762000377620001b7565b500190565b610dea806200038c6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80637711c596116100b8578063a9059cbb1161007c578063a9059cbb146102ad578063ba0fb861146102c0578063dd62ed3e146102eb578063eaf98d2314610324578063f2fde38b1461032c578063fae926121461033f57600080fd5b80637711c5961461022e5780638da5cb5b1461024e57806395d89b4114610269578063a457c2d714610287578063a70b46071461029a57600080fd5b806329b1c15c116100ff57806329b1c15c146101c6578063313ce567146101db57806339509351146101ea57806370a08231146101fd578063715018a61461022657600080fd5b806301c234a81461013c57806306fdde0314610158578063095ea7b31461018857806318160ddd146101ab57806323b872dd146101b3575b600080fd5b6101456103e881565b6040519081526020015b60405180910390f35b60408051808201909152600b81526a084d2d8d8d2dedc86c2e6d60ab1b60208201525b60405161014f9190610bb4565b61019b610196366004610c25565b610352565b604051901515815260200161014f565b600354610145565b61019b6101c1366004610c4f565b6103cc565b6101d96101d4366004610c8b565b61066f565b005b6040516012815260200161014f565b61019b6101f8366004610c25565b6106c4565b61014561020b366004610c8b565b6001600160a01b031660009081526001602052604090205490565b6101d961075e565b61014561023c366004610c8b565b60016020526000908152604090205481565b6000546040516001600160a01b03909116815260200161014f565b604080518082019091526002815261424360f01b602082015261017b565b61019b610295366004610c25565b610794565b6101d96102a8366004610c8b565b6107d7565b61019b6102bb366004610c25565b610823565b6101456102ce366004610ca6565b600260209081526000928352604080842090915290825290205481565b6101456102f9366004610ca6565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610145603281565b6101d961033a366004610c8b565b610a46565b6101d961034d366004610c8b565b610ae1565b60006001600160a01b03831661036757600080fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b0383166000908152600160205260408120548211156103f157600080fd5b6001600160a01b038416600090815260026020908152604080832033845290915290205482111561042157600080fd5b6001600160a01b03831661043457600080fd5b6001600160a01b0384166000908152600160205260409020546104579083610b40565b6001600160a01b03851660009081526001602052604081209190915561048a6103e8610484856032610b4c565b90610b58565b905060006104a48261049e81818882610b40565b90610b40565b6001600160a01b0386166000908152600160205260409020549091506104ca9082610b2d565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546104fc9083610b2d565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546105319083610b2d565b6005546001600160a01b0390811660009081526001602052604080822093909355600454909116815220546105669083610b2d565b6004546001600160a01b0390811660009081526001602090815260408083209490945591891681526002825282812033825290915220546105a79085610b40565b6001600160a01b0380881660009081526002602090815260408083203380855292529182902093909355600654905191169190600080516020610d95833981519152906105f79086815260200190565b60405180910390a36005546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a350600195945050505050565b6000546001600160a01b031633146106a25760405162461bcd60e51b815260040161069990610cd9565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0383166106d957600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546107079083610b2d565b3360008181526002602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016103bb565b6000546001600160a01b031633146107885760405162461bcd60e51b815260040161069990610cd9565b6107926000610b64565b565b60006001600160a01b0383166107a957600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546107079083610b40565b6000546001600160a01b031633146108015760405162461bcd60e51b815260040161069990610cd9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602052604081205482111561083f57600080fd5b6001600160a01b03831661085257600080fd5b60006108656103e8610484856032610b4c565b905060006108798261049e81818882610b40565b336000908152600160205260409020549091506108969085610b40565b33600090815260016020526040808220929092556001600160a01b038716815220546108c29082610b2d565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546108f49083610b2d565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546109299083610b2d565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461095e9083610b2d565b6004546001600160a01b039081166000908152600160209081526040918290209390935551838152908716913391600080516020610d95833981519152910160405180910390a36006546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36005546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a3506001949350505050565b6000546001600160a01b03163314610a705760405162461bcd60e51b815260040161069990610cd9565b6001600160a01b038116610ad55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610699565b610ade81610b64565b50565b6000546001600160a01b03163314610b0b5760405162461bcd60e51b815260040161069990610cd9565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b398284610d24565b9392505050565b6000610b398284610d3c565b6000610b398284610d53565b6000610b398284610d72565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610be157858101830151858201604001528201610bc5565b81811115610bf3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c2057600080fd5b919050565b60008060408385031215610c3857600080fd5b610c4183610c09565b946020939093013593505050565b600080600060608486031215610c6457600080fd5b610c6d84610c09565b9250610c7b60208501610c09565b9150604084013590509250925092565b600060208284031215610c9d57600080fd5b610b3982610c09565b60008060408385031215610cb957600080fd5b610cc283610c09565b9150610cd060208401610c09565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d3757610d37610d0e565b500190565b600082821015610d4e57610d4e610d0e565b500390565b6000816000190483118215151615610d6d57610d6d610d0e565b500290565b600082610d8f57634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220284b50340951187e38915a5b8e92aa61fc2ebfa917171f93c394b0046ced42a064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x12 PUSH1 0x12 PUSH1 0xA PUSH3 0x2CA JUMP JUMPDEST PUSH3 0x20 SWAP1 PUSH2 0xC350 PUSH3 0x2D8 JUMP JUMPDEST PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1176 CODESIZE SUB DUP1 PUSH3 0x1176 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x53 SWAP2 PUSH3 0x317 JUMP JUMPDEST PUSH3 0x5E CALLER PUSH3 0xB5 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x5 DUP1 SLOAD DUP6 DUP5 AND SWAP1 DUP4 AND DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP4 DUP6 AND SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH3 0xAC SWAP2 SWAP1 PUSH3 0x105 JUMP JUMPDEST POP POP POP PUSH3 0x37C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH3 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x142 SWAP2 DUP4 SWAP1 PUSH3 0xB2D PUSH3 0x1A0 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x194 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AE DUP3 DUP5 PUSH3 0x361 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x20E JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F2 PUSH3 0x1B7 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x200 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x1D2 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x227 JUMPI POP PUSH1 0x1 PUSH3 0x1B1 JUMP JUMPDEST DUP2 PUSH3 0x236 JUMPI POP PUSH1 0x0 PUSH3 0x1B1 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x24F JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x25A JUMPI PUSH3 0x27A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1B1 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x26E JUMPI PUSH3 0x26E PUSH3 0x1B7 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x1B1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x29F JUMPI POP DUP2 DUP2 EXP PUSH3 0x1B1 JUMP JUMPDEST PUSH3 0x2AB DUP4 DUP4 PUSH3 0x1CD JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x2C2 JUMPI PUSH3 0x2C2 PUSH3 0x1B7 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AE DUP4 DUP4 PUSH3 0x216 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2F5 JUMPI PUSH3 0x2F5 PUSH3 0x1B7 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x338 DUP5 PUSH3 0x2FA JUMP JUMPDEST SWAP3 POP PUSH3 0x348 PUSH1 0x20 DUP6 ADD PUSH3 0x2FA JUMP JUMPDEST SWAP2 POP PUSH3 0x358 PUSH1 0x40 DUP6 ADD PUSH3 0x2FA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x377 JUMPI PUSH3 0x377 PUSH3 0x1B7 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0xDEA DUP1 PUSH3 0x38C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7711C596 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xBA0FB861 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xEAF98D23 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xFAE92612 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7711C596 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA70B4607 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29B1C15C GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x29B1C15C EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x84D2D8D8D2DEDC86C2E6D PUSH1 0xAB SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x145 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x145 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4243 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x17B JUMP JUMPDEST PUSH2 0x19B PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x457 SWAP1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x48A PUSH2 0x3E8 PUSH2 0x484 DUP6 PUSH1 0x32 PUSH2 0xB4C JUMP JUMPDEST SWAP1 PUSH2 0xB58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A4 DUP3 PUSH2 0x49E DUP2 DUP2 DUP9 DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x4CA SWAP1 DUP3 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4FC SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x531 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x566 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x5A7 SWAP1 DUP6 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5F7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x707 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x792 PUSH1 0x0 PUSH2 0xB64 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x707 SWAP1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x865 PUSH2 0x3E8 PUSH2 0x484 DUP6 PUSH1 0x32 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x879 DUP3 PUSH2 0x49E DUP2 DUP2 DUP9 DUP3 PUSH2 0xB40 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x896 SWAP1 DUP6 PUSH2 0xB40 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8C2 SWAP1 DUP3 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8F4 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x929 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x95E SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x699 JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xB64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBC5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC41 DUP4 PUSH2 0xC09 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6D DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP3 POP PUSH2 0xC7B PUSH1 0x20 DUP6 ADD PUSH2 0xC09 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB39 DUP3 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC09 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD0 PUSH1 0x20 DUP5 ADD PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0xD0E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD0E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6D PUSH2 0xD0E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x4B POP CALLVALUE MULMOD MLOAD XOR PUSH31 0x38915A5B8E92AA61FC2EBFA917171F93C394B0046CED42A064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "186:5904:3:-:0;;;546:26;506:2;546;:26;:::i;:::-;538:34;;:5;:34;:::i;:::-;515:57;;965:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;1098:12:3;:33;;-1:-1:-1;;;;;1098:33:3;;;-1:-1:-1;;;;;;1098:33:3;;;;;;;1142:15;:34;;;;;;;;;;;;;1187:11;:26;;;;;;;;;;;;;;;1247:12;;1224:36;;1142:34;1224:5;:36::i;:::-;965:303;;;186:5904;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5468:225:3:-;5544:11;5536:20;;;;;;-1:-1:-1;;;;;5595:25:3;;;;;;:16;:25;;;;;;;;;:37;;5625:6;;5595:29;;;;;:37;;:::i;:::-;-1:-1:-1;;;;;5567:25:3;;;;;;:16;:25;;;;;;:65;;;;5648:37;;5567:25;;;5648:37;;;;5678:6;2404:25:4;;2392:2;2377:18;;2258:177;5648:37:3;;;;;;;;5468:225;;:::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;;2755:96;;;;;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:4;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:4;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:4;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:4;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;573:806;-1:-1:-1;;;573:806:4:o;1384:131::-;1444:5;1473:36;1500:8;1494:4;1473:36;:::i;1520:168::-;1560:7;1626:1;1622;1618:6;1614:14;1611:1;1608:21;1603:1;1596:9;1589:17;1585:45;1582:71;;;1633:18;;:::i;:::-;-1:-1:-1;1673:9:4;;1520:168::o;1693:177::-;1772:13;;-1:-1:-1;;;;;1814:31:4;;1804:42;;1794:70;;1860:1;1857;1850:12;1794:70;1693:177;;;:::o;1875:378::-;1963:6;1971;1979;2032:2;2020:9;2011:7;2007:23;2003:32;2000:52;;;2048:1;2045;2038:12;2000:52;2071:40;2101:9;2071:40;:::i;:::-;2061:50;;2130:49;2175:2;2164:9;2160:18;2130:49;:::i;:::-;2120:59;;2198:49;2243:2;2232:9;2228:18;2198:49;:::i;:::-;2188:59;;1875:378;;;;;:::o;2440:128::-;2480:3;2511:1;2507:6;2504:1;2501:13;2498:39;;;2517:18;;:::i;:::-;-1:-1:-1;2553:9:4;;2440:128::o;:::-;186:5904:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FEE_PERCENT_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PERCENTS_DIVIDER_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BCTokenBalances_451": {
									"entryPoint": null,
									"id": 451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_allowed_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 2916,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_302": {
									"entryPoint": 2861,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_729": {
									"entryPoint": null,
									"id": 729,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_766": {
									"entryPoint": 850,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_555": {
									"entryPoint": null,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1026": {
									"entryPoint": 1940,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_347": {
									"entryPoint": 2904,
									"id": 347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_975": {
									"entryPoint": 1732,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_332": {
									"entryPoint": 2892,
									"id": 332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_539": {
									"entryPoint": null,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1886,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDevelopmentAddress_1072": {
									"entryPoint": 1647,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMarketAddress_1084": {
									"entryPoint": 2785,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setPancakeAddress_1096": {
									"entryPoint": 2007,
									"id": 1096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_317": {
									"entryPoint": 2880,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_547": {
									"entryPoint": null,
									"id": 547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_563": {
									"entryPoint": null,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_924": {
									"entryPoint": 972,
									"id": 924,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 2630,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_713": {
									"entryPoint": 2083,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3342,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4168:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:476:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "337:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "331:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "355:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "366:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "348:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "382:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "436:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "441:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "457:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "466:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "461:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "555:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "566:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "551:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "551:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "570:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "547:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "547:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "589:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "597:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "585:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "585:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "601:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "581:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "581:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "575:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "575:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "487:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "490:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "484:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "498:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "500:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "509:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "512:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "505:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "500:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "480:3:4",
																"statements": []
															},
															"src": "476:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "650:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "679:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "690:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "675:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "675:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "699:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "671:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "671:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "631:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "628:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:13:4"
															},
															"nodeType": "YulIf",
															"src": "625:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "725:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "741:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "760:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "756:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "756:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "777:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "773:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "752:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "752:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "784:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "725:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:4",
														"type": ""
													}
												],
												"src": "196:597:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "847:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "857:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "879:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "866:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "857:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "949:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "958:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "961:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "951:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "951:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "951:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "908:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "919:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "934:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "939:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "930:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "930:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "943:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "926:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "926:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "915:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "915:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "905:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "905:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "898:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:50:4"
															},
															"nodeType": "YulIf",
															"src": "895:70:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "837:5:4",
														"type": ""
													}
												],
												"src": "798:173:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1063:167:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1109:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1118:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1121:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1111:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1111:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1111:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1084:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1093:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1080:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1105:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1076:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1076:32:4"
															},
															"nodeType": "YulIf",
															"src": "1073:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1134:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1144:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1209:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1220:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1205:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1205:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1192:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1182:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1021:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1032:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1044:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1052:6:4",
														"type": ""
													}
												],
												"src": "976:254:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1330:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1340:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1352:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1363:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1348:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1340:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1382:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1407:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1400:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1400:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1393:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1393:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1375:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1375:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1375:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1299:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1310:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1321:4:4",
														"type": ""
													}
												],
												"src": "1235:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:4"
															},
															"nodeType": "YulIf",
															"src": "1541:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:4",
														"type": ""
													}
												],
												"src": "1427:328:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1830:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1876:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1885:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1888:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1878:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1878:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1878:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1851:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1860:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1847:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1847:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1843:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:32:4"
															},
															"nodeType": "YulIf",
															"src": "1840:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1901:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1930:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1911:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1911:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1901:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1796:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1807:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1819:6:4",
														"type": ""
													}
												],
												"src": "1760:186:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2058:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2081:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2066:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2066:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2058:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2100:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2115:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2123:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2111:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2111:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2093:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2093:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2093:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2017:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2028:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2039:4:4",
														"type": ""
													}
												],
												"src": "1951:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2241:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2251:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2274:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2259:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2251:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2293:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2308:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2324:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2329:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2320:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2320:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2333:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2316:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2316:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2304:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2304:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2210:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2221:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2232:4:4",
														"type": ""
													}
												],
												"src": "2140:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2435:173:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2481:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2493:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2483:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2483:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2483:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2456:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2452:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2452:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:32:4"
															},
															"nodeType": "YulIf",
															"src": "2445:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2506:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2535:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2516:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2516:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2506:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2554:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2587:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2598:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2583:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2583:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2564:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2393:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2404:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2416:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2424:6:4",
														"type": ""
													}
												],
												"src": "2348:260:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2787:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2804:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2815:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2797:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2797:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2797:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2838:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2849:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2834:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2834:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2854:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2877:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2888:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2873:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2893:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2866:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2866:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2937:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2949:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2960:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2945:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2937:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2764:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2778:4:4",
														"type": ""
													}
												],
												"src": "2613:356:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3148:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3165:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3176:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3158:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3158:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3199:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3210:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3195:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3195:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3215:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3188:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3188:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3188:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3238:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3249:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3234:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3234:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3254:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3227:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3227:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3309:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3320:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3325:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3298:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3298:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3343:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3355:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3366:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3351:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3351:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3343:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3125:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3139:4:4",
														"type": ""
													}
												],
												"src": "2974:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3413:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3430:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3437:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3442:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3433:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3433:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3470:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3473:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3463:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3463:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3463:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3494:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3497:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3381:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3561:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3588:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3590:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3590:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3590:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3577:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3584:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3580:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3580:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3574:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3574:13:4"
															},
															"nodeType": "YulIf",
															"src": "3571:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3619:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3630:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3633:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3626:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3626:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3619:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3544:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3547:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3553:3:4",
														"type": ""
													}
												],
												"src": "3513:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3695:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3717:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3719:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3719:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3719:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3711:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3714:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3708:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:8:4"
															},
															"nodeType": "YulIf",
															"src": "3705:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3748:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3760:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3763:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3756:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3748:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3677:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3680:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3686:4:4",
														"type": ""
													}
												],
												"src": "3646:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3828:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3887:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3889:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3889:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3889:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3859:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3852:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3852:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3845:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3845:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3867:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3878:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3874:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3874:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3882:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "3870:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3870:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3864:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3864:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3841:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3841:45:4"
															},
															"nodeType": "YulIf",
															"src": "3838:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3918:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3933:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3936:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3929:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3918:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3807:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3810:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3816:7:4",
														"type": ""
													}
												],
												"src": "3776:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3995:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4026:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4047:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4054:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4059:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4050:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4050:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4040:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4040:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4040:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4091:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4094:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4084:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4084:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4084:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4119:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4122:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4112:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4112:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4112:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4015:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4008:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4008:9:4"
															},
															"nodeType": "YulIf",
															"src": "4005:132:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4146:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4155:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4158:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4151:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4146:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3980:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3983:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3989:1:4",
														"type": ""
													}
												],
												"src": "3949:217:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c80637711c596116100b8578063a9059cbb1161007c578063a9059cbb146102ad578063ba0fb861146102c0578063dd62ed3e146102eb578063eaf98d2314610324578063f2fde38b1461032c578063fae926121461033f57600080fd5b80637711c5961461022e5780638da5cb5b1461024e57806395d89b4114610269578063a457c2d714610287578063a70b46071461029a57600080fd5b806329b1c15c116100ff57806329b1c15c146101c6578063313ce567146101db57806339509351146101ea57806370a08231146101fd578063715018a61461022657600080fd5b806301c234a81461013c57806306fdde0314610158578063095ea7b31461018857806318160ddd146101ab57806323b872dd146101b3575b600080fd5b6101456103e881565b6040519081526020015b60405180910390f35b60408051808201909152600b81526a084d2d8d8d2dedc86c2e6d60ab1b60208201525b60405161014f9190610bb4565b61019b610196366004610c25565b610352565b604051901515815260200161014f565b600354610145565b61019b6101c1366004610c4f565b6103cc565b6101d96101d4366004610c8b565b61066f565b005b6040516012815260200161014f565b61019b6101f8366004610c25565b6106c4565b61014561020b366004610c8b565b6001600160a01b031660009081526001602052604090205490565b6101d961075e565b61014561023c366004610c8b565b60016020526000908152604090205481565b6000546040516001600160a01b03909116815260200161014f565b604080518082019091526002815261424360f01b602082015261017b565b61019b610295366004610c25565b610794565b6101d96102a8366004610c8b565b6107d7565b61019b6102bb366004610c25565b610823565b6101456102ce366004610ca6565b600260209081526000928352604080842090915290825290205481565b6101456102f9366004610ca6565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610145603281565b6101d961033a366004610c8b565b610a46565b6101d961034d366004610c8b565b610ae1565b60006001600160a01b03831661036757600080fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b0383166000908152600160205260408120548211156103f157600080fd5b6001600160a01b038416600090815260026020908152604080832033845290915290205482111561042157600080fd5b6001600160a01b03831661043457600080fd5b6001600160a01b0384166000908152600160205260409020546104579083610b40565b6001600160a01b03851660009081526001602052604081209190915561048a6103e8610484856032610b4c565b90610b58565b905060006104a48261049e81818882610b40565b90610b40565b6001600160a01b0386166000908152600160205260409020549091506104ca9082610b2d565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546104fc9083610b2d565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546105319083610b2d565b6005546001600160a01b0390811660009081526001602052604080822093909355600454909116815220546105669083610b2d565b6004546001600160a01b0390811660009081526001602090815260408083209490945591891681526002825282812033825290915220546105a79085610b40565b6001600160a01b0380881660009081526002602090815260408083203380855292529182902093909355600654905191169190600080516020610d95833981519152906105f79086815260200190565b60405180910390a36005546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a350600195945050505050565b6000546001600160a01b031633146106a25760405162461bcd60e51b815260040161069990610cd9565b60405180910390fd5b600680546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160a01b0383166106d957600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546107079083610b2d565b3360008181526002602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591016103bb565b6000546001600160a01b031633146107885760405162461bcd60e51b815260040161069990610cd9565b6107926000610b64565b565b60006001600160a01b0383166107a957600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546107079083610b40565b6000546001600160a01b031633146108015760405162461bcd60e51b815260040161069990610cd9565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b3360009081526001602052604081205482111561083f57600080fd5b6001600160a01b03831661085257600080fd5b60006108656103e8610484856032610b4c565b905060006108798261049e81818882610b40565b336000908152600160205260409020549091506108969085610b40565b33600090815260016020526040808220929092556001600160a01b038716815220546108c29082610b2d565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546108f49083610b2d565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546109299083610b2d565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461095e9083610b2d565b6004546001600160a01b039081166000908152600160209081526040918290209390935551838152908716913391600080516020610d95833981519152910160405180910390a36006546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36005546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610d958339815191529060200160405180910390a3506001949350505050565b6000546001600160a01b03163314610a705760405162461bcd60e51b815260040161069990610cd9565b6001600160a01b038116610ad55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610699565b610ade81610b64565b50565b6000546001600160a01b03163314610b0b5760405162461bcd60e51b815260040161069990610cd9565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6000610b398284610d24565b9392505050565b6000610b398284610d3c565b6000610b398284610d53565b6000610b398284610d72565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610be157858101830151858201604001528201610bc5565b81811115610bf3576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c2057600080fd5b919050565b60008060408385031215610c3857600080fd5b610c4183610c09565b946020939093013593505050565b600080600060608486031215610c6457600080fd5b610c6d84610c09565b9250610c7b60208501610c09565b9150604084013590509250925092565b600060208284031215610c9d57600080fd5b610b3982610c09565b60008060408385031215610cb957600080fd5b610cc283610c09565b9150610cd060208401610c09565b90509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610d3757610d37610d0e565b500190565b600082821015610d4e57610d4e610d0e565b500390565b6000816000190483118215151615610d6d57610d6d610d0e565b500290565b600082610d8f57634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220284b50340951187e38915a5b8e92aa61fc2ebfa917171f93c394b0046ced42a064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7711C596 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xBA0FB861 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0xEAF98D23 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xFAE92612 EQ PUSH2 0x33F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7711C596 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA70B4607 EQ PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x29B1C15C GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x29B1C15C EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x84D2D8D8D2DEDC86C2E6D PUSH1 0xAB SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x145 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC4F JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x19B PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x6C4 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x75E JUMP JUMPDEST PUSH2 0x145 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4243 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x17B JUMP JUMPDEST PUSH2 0x19B PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x2A8 CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH2 0x19B PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC25 JUMP JUMPDEST PUSH2 0x823 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2F9 CALLDATASIZE PUSH1 0x4 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xA46 JUMP JUMPDEST PUSH2 0x1D9 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0xC8B JUMP JUMPDEST PUSH2 0xAE1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x457 SWAP1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x48A PUSH2 0x3E8 PUSH2 0x484 DUP6 PUSH1 0x32 PUSH2 0xB4C JUMP JUMPDEST SWAP1 PUSH2 0xB58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x4A4 DUP3 PUSH2 0x49E DUP2 DUP2 DUP9 DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x4CA SWAP1 DUP3 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4FC SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x531 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x566 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x5A7 SWAP1 DUP6 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5F7 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x707 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH2 0x792 PUSH1 0x0 PUSH2 0xB64 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x707 SWAP1 DUP4 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x865 PUSH2 0x3E8 PUSH2 0x484 DUP6 PUSH1 0x32 PUSH2 0xB4C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x879 DUP3 PUSH2 0x49E DUP2 DUP2 DUP9 DUP3 PUSH2 0xB40 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x896 SWAP1 DUP6 PUSH2 0xB40 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8C2 SWAP1 DUP3 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x8F4 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x929 SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x95E SWAP1 DUP4 PUSH2 0xB2D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD95 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x699 JUMP JUMPDEST PUSH2 0xADE DUP2 PUSH2 0xB64 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB0B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x699 SWAP1 PUSH2 0xCD9 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD24 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB39 DUP3 DUP5 PUSH2 0xD72 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBC5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xBF3 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC41 DUP4 PUSH2 0xC09 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6D DUP5 PUSH2 0xC09 JUMP JUMPDEST SWAP3 POP PUSH2 0xC7B PUSH1 0x20 DUP6 ADD PUSH2 0xC09 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB39 DUP3 PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCC2 DUP4 PUSH2 0xC09 JUMP JUMPDEST SWAP2 POP PUSH2 0xCD0 PUSH1 0x20 DUP5 ADD PUSH2 0xC09 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xD37 JUMPI PUSH2 0xD37 PUSH2 0xD0E JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD4E JUMPI PUSH2 0xD4E PUSH2 0xD0E JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xD6D JUMPI PUSH2 0xD6D PUSH2 0xD0E JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD8F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x4B POP CALLVALUE MULMOD MLOAD XOR PUSH31 0x38915A5B8E92AA61FC2EBFA917171F93C394B0046CED42A064736F6C634300 ADDMOD EXP STOP CALLER ",
							"sourceMap": "186:5904:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:47;;705:4;662:47;;;;;160:25:4;;;148:2;133:18;662:47:3;;;;;;;;1276:87;1346:9;;;;;;;;;;;;-1:-1:-1;;;1346:9:3;;;;1276:87;;;;;;;:::i;3148:242::-;;;;;;:::i;:::-;;:::i;:::-;;;1400:14:4;;1393:22;1375:41;;1363:2;1348:18;3148:242:3;1235:187:4;1565:91:3;1636:12;;1565:91;;3398:1296;;;;;;:::i;:::-;;:::i;5701:133::-;;;;;;:::i;:::-;;:::i;:::-;;1470:87;;;506:2;2093:36:4;;2081:2;2066:18;1470:87:3;1951:184:4;4702:370:3;;;;;;:::i;:::-;;:::i;1664:113::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1746:23:3;1719:7;1746:23;;;:16;:23;;;;;;;1664:113;1668:101:0;;;:::i;258:51:3:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1036:85:0;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2286:51:4;;2274:2;2259:18;1036:85:0;2140:203:4;1371:91:3;1443:11;;;;;;;;;;;;-1:-1:-1;;;1443:11:3;;;;1371:91;;5080:380;;;;;;:::i;:::-;;:::i;5967:120::-;;;;;;:::i;:::-;;:::i;1785:1184::-;;;;;;:::i;:::-;;:::i;316:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2977:163;;;;;;:::i;:::-;-1:-1:-1;;;;;3108:15:3;;;3076:7;3108:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2977:163;716:40;;754:2;716:40;;1918:198:0;;;;;;:::i;:::-;;:::i;5840:121:3:-;;;;;;:::i;:::-;;:::i;3148:242::-;3213:4;-1:-1:-1;;;;;3238:21:3;;3230:30;;;;;;3280:10;3271:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3271:29:3;;;;;;;;;;;;:37;;;3324:36;160:25:4;;;3271:29:3;;3280:10;3324:36;;133:18:4;3324:36:3;;;;;;;;-1:-1:-1;3378:4:3;3148:242;;;;:::o;3398:1296::-;-1:-1:-1;;;;;3545:22:3;;3511:4;3545:22;;;:16;:22;;;;;;3536:31;;;3528:40;;;;;;-1:-1:-1;;;;;3596:14:3;;;;;;:8;:14;;;;;;;;3611:10;3596:26;;;;;;;;3587:35;;;3579:44;;;;;;-1:-1:-1;;;;;3642:16:3;;3634:25;;;;;;-1:-1:-1;;;;;3697:22:3;;;;;;:16;:22;;;;;;:33;;3724:5;3697:26;:33::i;:::-;-1:-1:-1;;;;;3672:22:3;;;;;;:16;:22;;;;;:58;;;;3767:44;705:4;3767:22;:5;754:2;3767:9;:22::i;:::-;:26;;:44::i;:::-;3743:68;-1:-1:-1;3822:24:3;3849:104;3743:68;3849:71;3743:68;3849:71;:5;3743:68;3849:23;:38::i;:::-;:56;;:71::i;:104::-;-1:-1:-1;;;;;3989:20:3;;;;;;:16;:20;;;;;;3822:131;;-1:-1:-1;3989:42:3;;3822:131;3989:24;:42::i;:::-;-1:-1:-1;;;;;3966:20:3;;;;;;;:16;:20;;;;;;:65;;;;4092:12;;;;;4075:30;;;;:73;;4124:13;4075:34;:73::i;:::-;4059:12;;-1:-1:-1;;;;;4059:12:3;;;4042:30;;;;:16;:30;;;;;;:106;;;;4212:15;;;;;4195:33;;;;:76;;4247:13;4195:37;:76::i;:::-;4176:15;;-1:-1:-1;;;;;4176:15:3;;;4159:33;;;;:16;:33;;;;;;:112;;;;4331:11;;;;;4314:29;;;;:72;;4362:13;4314:33;:72::i;:::-;4299:11;;-1:-1:-1;;;;;4299:11:3;;;4282:29;;;;:16;:29;;;;;;;;:104;;;;4426:14;;;;;:8;:14;;;;;4441:10;4426:26;;;;;;;:37;;4457:5;4426:30;:37::i;:::-;-1:-1:-1;;;;;4397:14:3;;;;;;;:8;:14;;;;;;;;4412:10;4397:26;;;;;;;;;:66;;;;4502:12;;4481:49;;4502:12;;;4412:10;-1:-1:-1;;;;;;;;;;;4481:49:3;;;4516:13;160:25:4;;148:2;133:18;;14:177;4481:49:3;;;;;;;;4567:15;;4546:52;;160:25:4;;;-1:-1:-1;;;;;4567:15:3;;;;4555:10;;-1:-1:-1;;;;;;;;;;;4546:52:3;148:2:4;133:18;4546:52:3;;;;;;;4635:11;;4614:48;;160:25:4;;;-1:-1:-1;;;;;4635:11:3;;;;4623:10;;-1:-1:-1;;;;;;;;;;;4614:48:3;148:2:4;133:18;4614:48:3;;;;;;;-1:-1:-1;4682:4:3;;3398:1296;-1:-1:-1;;;;;3398:1296:3:o;5701:133::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;5792:12:3::1;:34:::0;;-1:-1:-1;;;;;;5792:34:3::1;-1:-1:-1::0;;;;;5792:34:3;;;::::1;::::0;;;::::1;::::0;;5701:133::o;4702:370::-;4800:4;-1:-1:-1;;;;;4830:21:3;;4822:30;;;;;;4919:10;4910:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4910:29:3;;;;;;;;;;:45;;4944:10;4910:33;:45::i;:::-;4872:10;4863:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4863:29:3;;;;;;;;;;;;:103;;;4982:60;160:25:4;;;4863:29:3;;4982:60;;133:18:4;4982:60:3;14:177:4;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5080:380:3:-;5183:4;-1:-1:-1;;;;;5213:21:3;;5205:30;;;;;;5302:10;5293:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5293:29:3;;;;;;;;;;:50;;5327:15;5293:33;:50::i;5967:120::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;6050:11:3::1;:29:::0;;-1:-1:-1;;;;;;6050:29:3::1;-1:-1:-1::0;;;;;6050:29:3;;;::::1;::::0;;;::::1;::::0;;5967:120::o;1785:1184::-;1897:10;1846:4;1880:28;;;:16;:28;;;;;;1871:37;;;1863:46;;;;;;-1:-1:-1;;;;;1928:16:3;;1920:25;;;;;;1958:21;1982:44;705:4;1982:22;:5;754:2;1982:9;:22::i;:44::-;1958:68;-1:-1:-1;2037:24:3;2064:104;1958:68;2064:71;1958:68;2064:71;:5;1958:68;2064:23;:38::i;:104::-;2229:10;2212:28;;;;:16;:28;;;;;;2037:131;;-1:-1:-1;2212:39:3;;2245:5;2212:32;:39::i;:::-;2198:10;2181:28;;;;:16;:28;;;;;;:70;;;;-1:-1:-1;;;;;2285:20:3;;;;;;:42;;2310:16;2285:24;:42::i;:::-;-1:-1:-1;;;;;2262:20:3;;;;;;;:16;:20;;;;;;:65;;;;2388:12;;;;;2371:30;;;;:73;;2420:13;2371:34;:73::i;:::-;2355:12;;-1:-1:-1;;;;;2355:12:3;;;2338:30;;;;:16;:30;;;;;;:106;;;;2508:15;;;;;2491:33;;;;:76;;2543:13;2491:37;:76::i;:::-;2472:15;;-1:-1:-1;;;;;2472:15:3;;;2455:33;;;;:16;:33;;;;;;:112;;;;2627:11;;;;;2610:29;;;;:72;;2658:13;2610:33;:72::i;:::-;2595:11;;-1:-1:-1;;;;;2595:11:3;;;2578:29;;;;:16;:29;;;;;;;;;:104;;;;2700:42;160:25:4;;;2700:42:3;;;;2709:10;;-1:-1:-1;;;;;;;;;;;2700:42:3;133:18:4;2700:42:3;;;;;;;2779:12;;2758:49;;160:25:4;;;-1:-1:-1;;;;;2779:12:3;;;;2767:10;;-1:-1:-1;;;;;;;;;;;2758:49:3;148:2:4;133:18;2758:49:3;;;;;;;2844:15;;2823:52;;160:25:4;;;-1:-1:-1;;;;;2844:15:3;;;;2832:10;;-1:-1:-1;;;;;;;;;;;2823:52:3;148:2:4;133:18;2823:52:3;;;;;;;2912:11;;2891:48;;160:25:4;;;-1:-1:-1;;;;;2912:11:3;;;;2900:10;;-1:-1:-1;;;;;;;;;;;2891:48:3;148:2:4;133:18;2891:48:3;;;;;;;-1:-1:-1;2957:4:3;;1785:1184;-1:-1:-1;;;;1785:1184:3:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3176:2:4;1998:73:0::1;::::0;::::1;3158:21:4::0;3215:2;3195:18;;;3188:30;3254:34;3234:18;;;3227:62;-1:-1:-1;;;3305:18:4;;;3298:36;3351:19;;1998:73:0::1;2974:402:4::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;5840:121:3:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5921:15:3::1;:32:::0;;-1:-1:-1;;;;;;5921:32:3::1;-1:-1:-1::0;;;;;5921:32:3;;;::::1;::::0;;;::::1;::::0;;5840:121::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:2:o;3122:::-;3180:7;3206:5;3210:1;3206;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:597:4:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;634:6;631:1;628:13;625:91;;;704:1;699:2;690:6;679:9;675:22;671:31;664:42;625:91;-1:-1:-1;777:2:4;756:15;-1:-1:-1;;752:29:4;737:45;;;;784:2;733:54;;196:597;-1:-1:-1;;;196:597:4:o;798:173::-;866:20;;-1:-1:-1;;;;;915:31:4;;905:42;;895:70;;961:1;958;951:12;895:70;798:173;;;:::o;976:254::-;1044:6;1052;1105:2;1093:9;1084:7;1080:23;1076:32;1073:52;;;1121:1;1118;1111:12;1073:52;1144:29;1163:9;1144:29;:::i;:::-;1134:39;1220:2;1205:18;;;;1192:32;;-1:-1:-1;;;976:254:4:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1760:186::-;1819:6;1872:2;1860:9;1851:7;1847:23;1843:32;1840:52;;;1888:1;1885;1878:12;1840:52;1911:29;1930:9;1911:29;:::i;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:356::-;2815:2;2797:21;;;2834:18;;;2827:30;2893:34;2888:2;2873:18;;2866:62;2960:2;2945:18;;2613:356::o;3381:127::-;3442:10;3437:3;3433:20;3430:1;3423:31;3473:4;3470:1;3463:15;3497:4;3494:1;3487:15;3513:128;3553:3;3584:1;3580:6;3577:1;3574:13;3571:39;;;3590:18;;:::i;:::-;-1:-1:-1;3626:9:4;;3513:128::o;3646:125::-;3686:4;3714:1;3711;3708:8;3705:34;;;3719:18;;:::i;:::-;-1:-1:-1;3756:9:4;;3646:125::o;3776:168::-;3816:7;3882:1;3878;3874:6;3870:14;3867:1;3864:21;3859:1;3852:9;3845:17;3841:45;3838:71;;;3889:18;;:::i;:::-;-1:-1:-1;3929:9:4;;3776:168::o;3949:217::-;3989:1;4015;4005:132;;4059:10;4054:3;4050:20;4047:1;4040:31;4094:4;4091:1;4084:15;4122:4;4119:1;4112:15;4005:132;-1:-1:-1;4151:9:4;;3949:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "712400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FEE_PERCENT()": "272",
								"PERCENTS_DIVIDER()": "208",
								"_BCTokenBalances(address)": "2531",
								"_allowed(address,address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24588",
								"balanceOf(address)": "2615",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26990",
								"increaseAllowance(address,uint256)": "26971",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28225",
								"setDevelopmentAddress(address)": "26734",
								"setMarketAddress(address)": "26843",
								"setPancakeAddress(address)": "26822",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28419"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 546,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 508,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 538,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 538,
									"end": 543,
									"name": "PUSH",
									"source": 3,
									"value": "C350"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 572,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 515,
									"end": 572,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1098,
									"end": 1110,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1098,
									"end": 1131,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1157,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1198,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1187,
									"end": 1213,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1247,
									"end": 1259,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1247,
									"end": 1259,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1260,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1224,
									"end": 1260,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1142,
									"end": 1176,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1224,
									"end": 1229,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1224,
									"end": 1260,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1224,
									"end": 1260,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1224,
									"end": 1260,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1268,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5468,
									"end": 5693,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 5468,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5544,
									"end": 5555,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5536,
									"end": 5556,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5611,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5620,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5625,
									"end": 5631,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5625,
									"end": 5631,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5624,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551723"
								},
								{
									"begin": 5595,
									"end": 5624,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 5595,
									"end": 5624,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5624,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5624,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 5595,
									"end": 5632,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5583,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5632,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5632,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5632,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5632,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5567,
									"end": 5592,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5678,
									"end": 5684,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2404,
									"end": 2429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2404,
									"end": 2429,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2377,
									"end": 2395,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2395,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2258,
									"end": 2435,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5648,
									"end": 5685,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5468,
									"end": 5693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5468,
									"end": 5693,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5468,
									"end": 5693,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2813,
									"end": 2820,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2843,
									"end": 2844,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2832,
									"end": 2844,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2832,
									"end": 2844,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1384,
									"end": 1515,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1384,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1500,
									"end": 1508,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1498,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1560,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1623,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1624,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1628,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1608,
									"end": 1629,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1605,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1589,
									"end": 1606,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1585,
									"end": 1630,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1772,
									"end": 1785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1772,
									"end": 1785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1814,
									"end": 1845,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1814,
									"end": 1845,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1846,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1846,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1860,
									"end": 1861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1850,
									"end": 1862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1963,
									"end": 1969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1977,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1979,
									"end": 1985,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 2034,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2020,
									"end": 2029,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2030,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2035,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2049,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2038,
									"end": 2050,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2101,
									"end": 2110,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2111,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2111,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2164,
									"end": 2173,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2178,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2243,
									"end": 2245,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2232,
									"end": 2241,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2228,
									"end": 2246,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2188,
									"end": 2247,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2188,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2511,
									"end": 2512,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2507,
									"end": 2513,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2504,
									"end": 2505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2501,
									"end": 2514,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2553,
									"end": 2562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 6090,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220284b50340951187e38915a5b8e92aa61fc2ebfa917171f93c394b0046ced42a064736f6c634300080a0033",
									".code": [
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "7711C596"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "BA0FB861"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "EAF98D23"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "FAE92612"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "7711C596"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "A70B4607"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "29B1C15C"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "29B1C15C"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "1C234A8"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 6090,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84D2D8D8D2DEDC86C2E6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1346,
											"end": 1355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1276,
											"end": 1363,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1400,
											"end": 1414,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1375,
											"end": 1416,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1363,
											"end": 1365,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1348,
											"end": 1366,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1235,
											"end": 1422,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1636,
											"end": 1648,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1565,
											"end": 1656,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1557,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1470,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1557,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1470,
											"end": 1557,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2093,
											"end": 2129,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2081,
											"end": 2083,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1470,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1951,
											"end": 2135,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1719,
											"end": 1726,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1762,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1746,
											"end": 1769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1664,
											"end": 1777,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2337,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2259,
											"end": 2277,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2140,
											"end": 2343,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1371,
											"end": 1462,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 1371,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1454,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1371,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 1371,
											"end": 1462,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3083,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3116,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3123,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3108,
											"end": 3132,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3140,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 716,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 716,
											"end": 756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3238,
											"end": 3259,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3238,
											"end": 3259,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3230,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3279,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3291,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3308,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3308,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3308,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3271,
											"end": 3300,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3390,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3561,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3567,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3567,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3567,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3536,
											"end": 3567,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3528,
											"end": 3568,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3604,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3610,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3611,
											"end": 3621,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3622,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3622,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3622,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3622,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3579,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3642,
											"end": 3658,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3634,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3713,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3719,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3724,
											"end": 3729,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3697,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 3697,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3688,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3730,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3730,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3730,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 3767,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3767,
											"end": 3789,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3789,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3767,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3767,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3767,
											"end": 3811,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3767,
											"end": 3811,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3767,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3743,
											"end": 3811,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3822,
											"end": 3846,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3743,
											"end": 3811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3743,
											"end": 3811,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3920,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3854,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3743,
											"end": 3811,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3849,
											"end": 3905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3849,
											"end": 3920,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3849,
											"end": 3953,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3849,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4005,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4009,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3989,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3989,
											"end": 4031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3822,
											"end": 3953,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3989,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3989,
											"end": 4031,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3989,
											"end": 4031,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 3989,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3982,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 3986,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3966,
											"end": 4031,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 4104,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4105,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4075,
											"end": 4148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4124,
											"end": 4137,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4075,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4075,
											"end": 4148,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4075,
											"end": 4148,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 4075,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4071,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4058,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4072,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4148,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4148,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4148,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4212,
											"end": 4227,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4228,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4228,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4228,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4228,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4271,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4195,
											"end": 4271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4247,
											"end": 4260,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4195,
											"end": 4232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4195,
											"end": 4271,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4195,
											"end": 4271,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 4195,
											"end": 4271,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4191,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4175,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4192,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4271,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4271,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4271,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4159,
											"end": 4271,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4342,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4331,
											"end": 4342,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4331,
											"end": 4342,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4343,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4343,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4343,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4386,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4314,
											"end": 4386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4362,
											"end": 4375,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4314,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4314,
											"end": 4386,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4314,
											"end": 4386,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4314,
											"end": 4386,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4299,
											"end": 4310,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4311,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4386,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4386,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4386,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4386,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4434,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4440,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4441,
											"end": 4451,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4452,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4426,
											"end": 4463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4457,
											"end": 4462,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4426,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 4426,
											"end": 4463,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4426,
											"end": 4463,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4426,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4405,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4411,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4422,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4463,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4463,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4463,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4397,
											"end": 4463,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4412,
											"end": 4422,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4516,
											"end": 4529,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4481,
											"end": 4530,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4582,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4565,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4555,
											"end": 4565,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4546,
											"end": 4598,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4635,
											"end": 4646,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4633,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4623,
											"end": 4633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4614,
											"end": 4662,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3398,
											"end": 4694,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5792,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5792,
											"end": 5826,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5701,
											"end": 5834,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 4702,
											"end": 5072,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4804,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4830,
											"end": 4851,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4830,
											"end": 4851,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 4822,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4919,
											"end": 4929,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4918,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4939,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4910,
											"end": 4955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4944,
											"end": 4954,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4910,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4910,
											"end": 4955,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 4955,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4910,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4882,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4871,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4883,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4966,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4966,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4966,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5042,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4863,
											"end": 4892,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4982,
											"end": 5042,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4982,
											"end": 5042,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 5042,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5080,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5183,
											"end": 5187,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5213,
											"end": 5234,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5234,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 5205,
											"end": 5235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5302,
											"end": 5312,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5301,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5313,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5322,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5293,
											"end": 5343,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5327,
											"end": 5342,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5293,
											"end": 5343,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6050,
											"end": 6061,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6050,
											"end": 6079,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5967,
											"end": 6087,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1897,
											"end": 1907,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1846,
											"end": 1850,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1908,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1908,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1908,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1871,
											"end": 1908,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 1863,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1944,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 1920,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 1979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1982,
											"end": 1987,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1982,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 1982,
											"end": 2004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1982,
											"end": 2026,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 1982,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2026,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 1958,
											"end": 2026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 1958,
											"end": 2026,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2069,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1958,
											"end": 2026,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2064,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2064,
											"end": 2102,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2064,
											"end": 2168,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 2064,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2229,
											"end": 2239,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2228,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2240,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2168,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2168,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2212,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2245,
											"end": 2250,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2212,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2212,
											"end": 2251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2212,
											"end": 2251,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2212,
											"end": 2251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2198,
											"end": 2208,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2197,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2209,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2251,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2181,
											"end": 2251,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2305,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2285,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2285,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2278,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2282,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2327,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2371,
											"end": 2444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2420,
											"end": 2433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2371,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2371,
											"end": 2444,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2371,
											"end": 2444,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2371,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2368,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2444,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2444,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2444,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2338,
											"end": 2444,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2508,
											"end": 2523,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2524,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2491,
											"end": 2567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2556,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2491,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2491,
											"end": 2567,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2491,
											"end": 2567,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2491,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2472,
											"end": 2487,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2471,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2488,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2567,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2567,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2567,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2638,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2639,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2639,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2639,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2610,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2671,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2610,
											"end": 2682,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2610,
											"end": 2682,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 2610,
											"end": 2682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2595,
											"end": 2606,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2607,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2682,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2682,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2578,
											"end": 2682,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2709,
											"end": 2719,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2742,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2791,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2777,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2777,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2758,
											"end": 2807,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2844,
											"end": 2859,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2842,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2832,
											"end": 2842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2823,
											"end": 2875,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2923,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2900,
											"end": 2910,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2900,
											"end": 2910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2891,
											"end": 2939,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2957,
											"end": 2961,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 2969,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3176,
											"end": 3178,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3195,
											"end": 3213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3254,
											"end": 3288,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3227,
											"end": 3289,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3305,
											"end": 3323,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3305,
											"end": 3323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3298,
											"end": 3334,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3351,
											"end": 3370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2974,
											"end": 3376,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5921,
											"end": 5936,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5921,
											"end": 5953,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5840,
											"end": 5961,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 793,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 196,
											"end": 793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 355,
											"end": 364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 348,
											"end": 369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 425,
											"end": 434,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 484,
											"end": 497,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 570,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 628,
											"end": 641,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 679,
											"end": 688,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 675,
											"end": 697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 664,
											"end": 706,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 752,
											"end": 781,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 733,
											"end": 787,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 196,
											"end": 793,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 793,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 798,
											"end": 971,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 798,
											"end": 971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 866,
											"end": 886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 866,
											"end": 886,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 915,
											"end": 946,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 915,
											"end": 946,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 905,
											"end": 947,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 905,
											"end": 947,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 895,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 895,
											"end": 965,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 958,
											"end": 959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 951,
											"end": 963,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 895,
											"end": 965,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 895,
											"end": 965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 798,
											"end": 971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 798,
											"end": 971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 798,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 798,
											"end": 971,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1044,
											"end": 1050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1107,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1093,
											"end": 1102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1091,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1103,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1076,
											"end": 1108,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1119,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1111,
											"end": 1123,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 1073,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 1144,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1134,
											"end": 1173,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1220,
											"end": 1222,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1192,
											"end": 1224,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 976,
											"end": 1230,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1760,
											"end": 1946,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1760,
											"end": 1946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1874,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1860,
											"end": 1869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1858,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1870,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1843,
											"end": 1875,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1892,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1892,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1840,
											"end": 1892,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1888,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 1886,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1890,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1840,
											"end": 1892,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 1840,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 1930,
											"end": 1939,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 1911,
											"end": 1940,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2422,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2452,
											"end": 2475,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2480,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2483,
											"end": 2495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 2445,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2506,
											"end": 2545,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2598,
											"end": 2600,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2596,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2601,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 2564,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2554,
											"end": 2602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2613,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 2613,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2815,
											"end": 2817,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2797,
											"end": 2818,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2852,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2827,
											"end": 2857,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2888,
											"end": 2890,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2873,
											"end": 2891,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2866,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2960,
											"end": 2962,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2945,
											"end": 2963,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2613,
											"end": 2969,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3381,
											"end": 3508,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3381,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3452,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3433,
											"end": 3453,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3454,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3463,
											"end": 3478,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3501,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3502,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3641,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3513,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3553,
											"end": 3556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3585,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3574,
											"end": 3587,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3571,
											"end": 3610,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 3590,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3626,
											"end": 3635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3513,
											"end": 3641,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3646,
											"end": 3771,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3646,
											"end": 3771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3686,
											"end": 3690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3716,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3705,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3705,
											"end": 3739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 3719,
											"end": 3737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3756,
											"end": 3765,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3646,
											"end": 3771,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3776,
											"end": 3944,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3776,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3816,
											"end": 3823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3878,
											"end": 3879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3880,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3884,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3864,
											"end": 3885,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3841,
											"end": 3886,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3909,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3838,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3838,
											"end": 3909,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3944,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3949,
											"end": 4166,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 3949,
											"end": 4166,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4015,
											"end": 4016,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4005,
											"end": 4137,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4069,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4050,
											"end": 4070,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4071,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4094,
											"end": 4098,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4091,
											"end": 4092,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4084,
											"end": 4099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4126,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4119,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4127,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4005,
											"end": 4137,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 4005,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4151,
											"end": 4160,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4151,
											"end": 4160,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3949,
											"end": 4166,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"FEE_PERCENT()": "eaf98d23",
							"PERCENTS_DIVIDER()": "01c234a8",
							"_BCTokenBalances(address)": "7711c596",
							"_allowed(address,address)": "ba0fb861",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setDevelopmentAddress(address)": "29b1c15c",
							"setMarketAddress(address)": "fae92612",
							"setPancakeAddress(address)": "a70b4607",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_developmentWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pancakeswap\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_BCTokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_developmentAddress\",\"type\":\"address\"}],\"name\":\"setDevelopmentAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_marketAddress\",\"type\":\"address\"}],\"name\":\"setMarketAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pancakeAddress\",\"type\":\"address\"}],\"name\":\"setPancakeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BillionCash.sol\":\"BillionCash\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"BillionCash.sol\":{\"keccak256\":\"0x55515ecdcdc25d1fd51ece166359da637a0ba38429199622ef5c47e2404fd7d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f0daacce06f06e4d37bb7aacc0b0e4030d9af66aca0ed6678366c092b744f97\",\"dweb:/ipfs/QmTGvkcHyfzMCQ2Lq2JcoNWoW28P63NF57KtZeFKwYLYc9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 451,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_BCTokenBalances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 457,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_allowed",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 476,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 478,
								"contract": "BillionCash.sol:BillionCash",
								"label": "pancakeswap",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 480,
								"contract": "BillionCash.sol:BillionCash",
								"label": "marketingwallet",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 482,
								"contract": "BillionCash.sol:BillionCash",
								"label": "adminAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 159,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															142
														],
														"declarations": [
															{
																"constant": false,
																"id": 142,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 159,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 148,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 154,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 140,
															"id": 153,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 156,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 140,
														"id": 158,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 438,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 187,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 180,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 172,
															"id": 179,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 182,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 183,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 185,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 172,
														"id": 186,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 438,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 229,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 208,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 207,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															210
														],
														"declarations": [
															{
																"constant": false,
																"id": 210,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 229,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 215,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 223,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 227,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 200,
														"id": 228,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 438,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 257,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 242,
															"id": 249,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 252,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 255,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 242,
														"id": 256,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 438,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 285,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 278,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 270,
															"id": 277,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 280,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 281,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 270,
														"id": 284,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 438,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 438,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 438,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 438,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 438,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 360,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 438,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 378,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 374,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 380,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 373,
														"id": 384,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 438,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 400,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 403,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 399,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 405,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 398,
														"id": 409,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 438,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 425,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 428,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 424,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 423,
														"id": 434,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 438,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 439,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"BillionCash.sol": {
				"ast": {
					"absolutePath": "BillionCash.sol",
					"exportedSymbols": {
						"BillionCash": [
							1097
						],
						"Context": [
							126
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							438
						]
					},
					"id": 1098,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:32:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 105,
							"src": "71:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1098,
							"sourceUnit": 439,
							"src": "125:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 443,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "210:7:3"
									},
									"id": 444,
									"nodeType": "InheritanceSpecifier",
									"src": "210:7:3"
								}
							],
							"canonicalName": "BillionCash",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1097,
							"linearizedBaseContracts": [
								1097,
								104,
								126
							],
							"name": "BillionCash",
							"nameLocation": "195:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 447,
									"libraryName": {
										"id": 445,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "231:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "225:27:3",
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "7711c596",
									"id": 451,
									"mutability": "mutable",
									"name": "_BCTokenBalances",
									"nameLocation": "293:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "258:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 450,
										"keyType": {
											"id": 448,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "266:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "258:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 449,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "277:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba0fb861",
									"id": 457,
									"mutability": "mutable",
									"name": "_allowed",
									"nameLocation": "371:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "316:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 456,
										"keyType": {
											"id": 452,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "324:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "316:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 455,
											"keyType": {
												"id": 453,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "343:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "335:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 454,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "354:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 460,
									"mutability": "constant",
									"name": "tokenName",
									"nameLocation": "402:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "386:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 458,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "386:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "42696c6c696f6e43617368",
										"id": 459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "414:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d92c2e30a02300d23660d3e424c03505002d0557b1e126a71208a8d09d06431",
											"typeString": "literal_string \"BillionCash\""
										},
										"value": "BillionCash"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 463,
									"mutability": "constant",
									"name": "tokenSymbol",
									"nameLocation": "450:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "434:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "434:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4243",
										"id": 462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "464:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cf64ed798cc730363dc3e4c9e3b0c8887625ef44cdc667fe8460dea13b34813e",
											"typeString": "literal_string \"BC\""
										},
										"value": "BC"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 466,
									"mutability": "constant",
									"name": "tokenDecimals",
									"nameLocation": "490:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "475:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 464,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "475:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "506:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 476,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "523:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "515:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530303030",
											"id": 468,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "538:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000_by_1",
												"typeString": "int_const 50000"
											},
											"value": "50000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 474,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "546:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [
													{
														"id": 472,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "558:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													],
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "550:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 470,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "550:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "550:22:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "546:26:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "538:34:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 478,
									"mutability": "mutable",
									"name": "pancakeswap",
									"nameLocation": "587:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "579:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "marketingwallet",
									"nameLocation": "613:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "605:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 479,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 482,
									"mutability": "mutable",
									"name": "adminAddress",
									"nameLocation": "643:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "635:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 481,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 485,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "686:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "662:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "662:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "705:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eaf98d23",
									"id": 488,
									"mutability": "constant",
									"name": "FEE_PERCENT",
									"nameLocation": "740:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1097,
									"src": "716:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 496,
									"name": "Transfer",
									"nameLocation": "771:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "796:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "780:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "818:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "802:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:57:3"
									},
									"src": "765:72:3"
								},
								{
									"anonymous": false,
									"id": 504,
									"name": "Approval",
									"nameLocation": "851:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "886:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "870:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "918:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "902:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:97:3"
									},
									"src": "845:112:3"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1087:181:3",
										"statements": [
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 513,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1098:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "_developmentWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1113:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1098:33:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "1098:33:3"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "marketingwallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "1142:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 518,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1160:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1142:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1142:34:3"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 521,
														"name": "pancakeswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "1187:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 522,
														"name": "_pancakeswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1201:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1187:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1187:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "1230:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "1247:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1224:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1224:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1224:36:3"
											}
										]
									},
									"id": 531,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_developmentWallet",
												"nameLocation": "995:18:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "987:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1032:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1024:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "_pancakeswap",
												"nameLocation": "1067:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1059:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:110:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1087:0:3"
									},
									"scope": 1097,
									"src": "965:303:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "1328:35:3",
										"statements": [
											{
												"expression": {
													"id": 536,
													"name": "tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "1346:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 537,
												"nodeType": "Return",
												"src": "1339:16:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1285:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:2:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1313:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1313:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1312:15:3"
									},
									"scope": 1097,
									"src": "1276:87:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1425:37:3",
										"statements": [
											{
												"expression": {
													"id": 544,
													"name": "tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "1443:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 543,
												"id": 545,
												"nodeType": "Return",
												"src": "1436:18:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1380:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1386:2:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1409:15:3"
									},
									"scope": 1097,
									"src": "1371:91:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1518:39:3",
										"statements": [
											{
												"expression": {
													"id": 552,
													"name": "tokenDecimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "1536:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "1529:20:3"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1479:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1487:2:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1511:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 549,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1511:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:7:3"
									},
									"scope": 1097,
									"src": "1470:87:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1618:38:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 476,
													"src": "1636:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 561,
												"nodeType": "Return",
												"src": "1629:19:3"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1574:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1585:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1609:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:9:3"
									},
									"scope": 1097,
									"src": "1565:91:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1728:49:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 570,
														"name": "_BCTokenBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1746:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 572,
													"indexExpression": {
														"id": 571,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1763:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1746:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "1739:30:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1673:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:15:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1719:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1718:9:3"
									},
									"scope": 1097,
									"src": "1664:113:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1852:1117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "1871:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 586,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "1880:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"expression": {
																		"id": 587,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1897:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1897:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1880:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1871:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1863:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1863:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1863:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "1928:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1942:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1934:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1934:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1934:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1928:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1920:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1920:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "1920:25:3"
											},
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "BCTokenForFee",
														"nameLocation": "1966:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "1958:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1958:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "PERCENTS_DIVIDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "2009:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 606,
																	"name": "FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1992:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 604,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "1982:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 332,
																"src": "1982:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1982:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "1982:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1982:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1958:68:3"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "tokensToTransfer",
														"nameLocation": "2045:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "2037:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2037:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"id": 622,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2154:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 619,
																	"name": "BCTokenForFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "2121:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 616,
																			"name": "BCTokenForFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "2088:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2064:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 317,
																		"src": "2064:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2064:38:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "2064:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2064:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "2064:89:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2064:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2037:131:3"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 625,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2181:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 628,
														"indexExpression": {
															"expression": {
																"id": 626,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2198:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2198:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2181:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 634,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2245:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 629,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2212:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 632,
																"indexExpression": {
																	"expression": {
																		"id": 630,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2229:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2229:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2212:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "2212:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2212:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2181:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "2181:70:3"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 638,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2262:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 640,
														"indexExpression": {
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2279:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2262:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 645,
																"name": "tokensToTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "2310:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 641,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2285:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 643,
																"indexExpression": {
																	"id": 642,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2302:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2285:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2285:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2285:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2262:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2262:65:3"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 649,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2338:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 651,
														"indexExpression": {
															"id": 650,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2355:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2338:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 656,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2420:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 652,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2371:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 654,
																"indexExpression": {
																	"id": 653,
																	"name": "adminAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2388:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2371:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2371:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2371:73:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2338:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "2338:106:3"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 660,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2455:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 662,
														"indexExpression": {
															"id": 661,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2472:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2455:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 667,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2543:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 663,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2491:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "marketingwallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "2508:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2491:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2491:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2491:76:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:112:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2455:112:3"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 671,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2578:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 673,
														"indexExpression": {
															"id": 672,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2595:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2578:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 678,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2658:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 674,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2610:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 676,
																"indexExpression": {
																	"id": 675,
																	"name": "pancakeswap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "2627:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2610:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2610:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2610:72:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2578:104:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "2578:104:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2709:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2709:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2721:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "tokensToTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2725:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2700:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2700:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "EmitStatement",
												"src": "2695:47:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2767:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2767:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2779:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2793:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2758:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "2753:54:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2832:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2832:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2844:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2861:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2823:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "EmitStatement",
												"src": "2818:57:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2900:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2900:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2912:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2925:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2891:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2891:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "EmitStatement",
												"src": "2886:53:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2957:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 583,
												"id": 711,
												"nodeType": "Return",
												"src": "2950:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1794:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1811:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1803:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1823:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1815:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:27:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1846:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1846:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1845:6:3"
									},
									"scope": 1097,
									"src": "1785:1184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3090:50:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 722,
															"name": "_allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3108:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 724,
														"indexExpression": {
															"id": 723,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3117:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3108:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 726,
													"indexExpression": {
														"id": 725,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "3124:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3108:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 721,
												"id": 727,
												"nodeType": "Return",
												"src": "3101:31:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2986:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3004:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2996:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3019:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3011:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3011:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3076:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3076:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3075:9:3"
									},
									"scope": 1097,
									"src": "2977:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "3219:171:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "3238:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3257:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 740,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3249:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3238:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3230:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3230:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "3230:30:3"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 747,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "3271:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 751,
															"indexExpression": {
																"expression": {
																	"id": 748,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3280:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3280:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3271:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3292:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3271:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3303:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3271:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "3271:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3333:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3333:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3345:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3354:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3324:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3324:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "3319:41:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3378:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 737,
												"id": 764,
												"nodeType": "Return",
												"src": "3371:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3157:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3173:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3165:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3190:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3182:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:32:3"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3213:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3213:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3212:6:3"
									},
									"scope": 1097,
									"src": "3148:242:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "3517:1177:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3536:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 779,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3545:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 781,
																"indexExpression": {
																	"id": 780,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3562:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3545:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3536:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3528:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3528:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3528:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3587:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 787,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "3596:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 789,
																	"indexExpression": {
																		"id": 788,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "3605:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3596:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 792,
																"indexExpression": {
																	"expression": {
																		"id": 790,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3611:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3611:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3596:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3587:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3579:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3579:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "3579:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "3642:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3656:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3648:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3648:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3648:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3642:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3634:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "3634:25:3"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 805,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3672:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 806,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "3689:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3672:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 812,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3724:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 808,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3697:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3714:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3697:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "3697:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3697:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3672:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "3672:58:3"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "BCTokenForFee",
														"nameLocation": "3751:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "3743:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3743:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 823,
															"name": "PERCENTS_DIVIDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3794:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 820,
																	"name": "FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "3777:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "3767:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 332,
																"src": "3767:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3767:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "3767:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3767:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3743:68:3"
											},
											{
												"assignments": [
													827
												],
												"declarations": [
													{
														"constant": false,
														"id": 827,
														"mutability": "mutable",
														"name": "tokensToTransfer",
														"nameLocation": "3830:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "3822:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3822:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [
														{
															"id": 836,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3939:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 833,
																	"name": "BCTokenForFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "3906:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 830,
																			"name": "BCTokenForFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "3873:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 828,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "3849:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 317,
																		"src": "3849:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3849:38:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "3849:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3849:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "3849:89:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3849:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3822:131:3"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 839,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3966:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3983:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3966:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 846,
																"name": "tokensToTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4014:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 842,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3989:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 844,
																"indexExpression": {
																	"id": 843,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "4006:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3989:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "3989:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3989:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3966:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3966:65:3"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 850,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4042:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4059:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4042:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 857,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4124:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 853,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4075:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"id": 854,
																	"name": "adminAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "4092:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4075:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4075:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4075:73:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4042:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "4042:106:3"
											},
											{
												"expression": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4159:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 863,
														"indexExpression": {
															"id": 862,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4176:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4159:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 868,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4247:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 864,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4195:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 866,
																"indexExpression": {
																	"id": 865,
																	"name": "marketingwallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "4212:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4195:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4195:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4195:76:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4159:112:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "4159:112:3"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 872,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4282:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 874,
														"indexExpression": {
															"id": 873,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4299:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4282:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 879,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4362:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 875,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4314:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 877,
																"indexExpression": {
																	"id": 876,
																	"name": "pancakeswap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "4331:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4314:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4314:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4314:72:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4282:104:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "4282:104:3"
											},
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 883,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "4397:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 887,
															"indexExpression": {
																"id": 884,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4406:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4397:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 888,
														"indexExpression": {
															"expression": {
																"id": 885,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4412:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4412:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4397:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 896,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4457:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 889,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "4426:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 891,
																	"indexExpression": {
																		"id": 890,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4435:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4426:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"expression": {
																		"id": 892,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4441:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4441:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4426:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "4426:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4426:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4397:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "4397:66:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4490:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4490:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4502:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4516:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4481:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4481:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "EmitStatement",
												"src": "4476:54:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 908,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4555:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4555:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4567:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4584:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4546:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4546:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "4541:57:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4623:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4623:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4635:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4648:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4614:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4614:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "EmitStatement",
												"src": "4609:53:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4682:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 776,
												"id": 922,
												"nodeType": "Return",
												"src": "4675:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3407:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3438:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3430:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3461:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3453:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3482:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3474:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3474:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3419:75:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3511:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3511:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:6:3"
									},
									"scope": 1097,
									"src": "3398:1296:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4811:261:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 934,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4830:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4849:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4841:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 935,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4841:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4841:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4830:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4822:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4822:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "4822:30:3"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 942,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "4863:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 946,
															"indexExpression": {
																"expression": {
																	"id": 943,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4872:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4872:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4863:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 945,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "4884:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4863:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 955,
																		"name": "addedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "4944:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 948,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "4910:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 951,
																			"indexExpression": {
																				"expression": {
																					"id": 949,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4919:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4919:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4910:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 953,
																		"indexExpression": {
																			"id": 952,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "4931:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4910:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "4910:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4910:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4895:71:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4863:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4863:103:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4991:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4991:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "5003:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 964,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "5012:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 967,
																"indexExpression": {
																	"expression": {
																		"id": 965,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5021:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5021:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5012:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 969,
															"indexExpression": {
																"id": 968,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "5033:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5012:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "4982:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4982:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "EmitStatement",
												"src": "4977:65:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5060:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 932,
												"id": 973,
												"nodeType": "Return",
												"src": "5053:11:3"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4711:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4737:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4729:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4729:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4754:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4746:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4746:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4728:37:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4800:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4800:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4799:6:3"
									},
									"scope": 1097,
									"src": "4702:370:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "5194:266:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 985,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "5213:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5232:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5224:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 986,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5224:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5213:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5205:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5205:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "5205:30:3"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 993,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5246:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 997,
															"indexExpression": {
																"expression": {
																	"id": 994,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5255:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5255:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5246:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5267:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5246:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 1006,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "5327:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 999,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "5293:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 1002,
																			"indexExpression": {
																				"expression": {
																					"id": 1000,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5302:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5302:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5293:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1004,
																		"indexExpression": {
																			"id": 1003,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "5314:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5293:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 317,
																	"src": "5293:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5293:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1008,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5278:76:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5246:108:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "5246:108:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1012,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5379:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5379:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5391:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1015,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "5400:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"expression": {
																		"id": 1016,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5409:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5409:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5400:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1019,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "5421:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5400:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5370:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5370:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "5365:65:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 983,
												"id": 1024,
												"nodeType": "Return",
												"src": "5441:11:3"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5089:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5115:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5107:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5132:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5124:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5124:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5106:42:3"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5183:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5183:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5182:6:3"
									},
									"scope": 1097,
									"src": "5080:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "5525:168:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "5544:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5554:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5544:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "5536:20:3"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5567:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5584:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5567:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1046,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "5625:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1042,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5595:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1044,
																"indexExpression": {
																	"id": 1043,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5612:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5595:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5595:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5595:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5567:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "5567:65:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5665:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5657:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5657:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5657:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5669:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "5678:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "5648:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5648:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "5643:42:3"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5477:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5491:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "5483:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5483:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5508:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "5500:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5500:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5482:33:3"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5525:0:3"
									},
									"scope": 1097,
									"src": "5468:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "5781:53:3",
										"statements": [
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5792:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1068,
														"name": "_developmentAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "5807:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5792:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "5792:34:3"
											}
										]
									},
									"functionSelector": "29b1c15c",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1064,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5771:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5771:9:3"
										}
									],
									"name": "setDevelopmentAddress",
									"nameLocation": "5710:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_developmentAddress",
												"nameLocation": "5741:19:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5732:28:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5731:30:3"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5781:0:3"
									},
									"scope": 1097,
									"src": "5701:133:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "5910:51:3",
										"statements": [
											{
												"expression": {
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1079,
														"name": "marketingwallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "5921:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1080,
														"name": "_marketAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "5939:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5921:32:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "5921:32:3"
											}
										]
									},
									"functionSelector": "fae92612",
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1077,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1076,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5900:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5900:9:3"
										}
									],
									"name": "setMarketAddress",
									"nameLocation": "5849:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "_marketAddress",
												"nameLocation": "5875:14:3",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "5866:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5866:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5865:25:3"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5910:0:3"
									},
									"scope": 1097,
									"src": "5840:121:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "6039:48:3",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1091,
														"name": "pancakeswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "6050:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1092,
														"name": "_pancakeAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "6064:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6050:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "6050:29:3"
											}
										]
									},
									"functionSelector": "a70b4607",
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "6029:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "6029:9:3"
										}
									],
									"name": "setPancakeAddress",
									"nameLocation": "5976:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_pancakeAddress",
												"nameLocation": "6003:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "5994:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:26:3"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6039:0:3"
									},
									"scope": 1097,
									"src": "5967:120:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1098,
							"src": "186:5904:3",
							"usedErrors": []
						}
					],
					"src": "35:6057:3"
				},
				"id": 3
			}
		}
	}
}