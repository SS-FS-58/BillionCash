{
	"id": "8692bf7447b5ce308626da3d262d119e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract BillionCashStaking is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 1000;\r\n    uint256 public constant PERCENTS_DAILY = 15;\r\n    uint256 public constant REFERRAL_PERCENTS = 120;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant STAKING_PERIOD = 180 days;\r\n\r\n    ERC20 BC;\r\n\r\n    uint256 public totalUsers;\r\n    uint256 public totalStaked;\r\n    uint256 public totalWithdrawn;\r\n    uint256 public totalDepositCount;\r\n\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        bool ended;\r\n    }\r\n\r\n    struct User {\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint256 bonus;\r\n        uint256 referralCount;\r\n        address referrer;\r\n    }\r\n\r\n    mapping(address => User) internal users;\r\n\r\n    modifier onlyhodler() {\r\n        require(getUserDividends(msg.sender) > 0, \"Not Holder\");\r\n        _;\r\n    }\r\n\r\n    event Newbie(address user);\r\n    event NewDeposit(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event onReinvestment(address indexed user, uint256 reinvestAmount);\r\n    event RefBonus(\r\n        address indexed referrer,\r\n        address indexed referral,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(ERC20 _token) {\r\n        //set initial state variables\r\n        BC = _token;\r\n    }\r\n\r\n    function stake(address referrer, uint256 amount) public {\r\n        BC.transferFrom(msg.sender, address(this), amount);\r\n\r\n        User storage user = users[msg.sender];\r\n\r\n        if (\r\n            user.referrer == address(0) &&\r\n            users[referrer].deposits.length > 0 &&\r\n            referrer != msg.sender\r\n        ) {\r\n            user.referrer = referrer;\r\n        }\r\n\r\n        if (user.referrer != address(0)) {\r\n            address upline = user.referrer;\r\n\r\n            if (upline != address(0)) {\r\n                uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(\r\n                    PERCENTS_DIVIDER\r\n                );\r\n                users[upline].bonus = users[upline].bonus.add(_amount);\r\n                emit RefBonus(upline, msg.sender, _amount);\r\n            }\r\n        }\r\n\r\n        if (user.deposits.length == 0) {\r\n            user.checkpoint = block.timestamp;\r\n            totalUsers = totalUsers.add(1);\r\n            emit Newbie(msg.sender);\r\n        }\r\n\r\n        user.deposits.push(\r\n            Deposit(\r\n                amount.sub(amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER)),\r\n                0,\r\n                block.timestamp,\r\n                block.timestamp + STAKING_PERIOD,\r\n                false\r\n            )\r\n        );\r\n\r\n        totalStaked = totalStaked.add(amount);\r\n        totalDepositCount = totalDepositCount.add(1);\r\n\r\n        emit NewDeposit(msg.sender, amount);\r\n    }\r\n\r\n    function claim() public {\r\n        User storage user = users[msg.sender];\r\n\r\n        uint256 totalAmount;\r\n        uint256 dividends;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(TIME_STEP);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(\r\n                                TIME_STEP\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(TIME_STEP);\r\n                        user.deposits[i].ended = true;\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(TIME_STEP);\r\n                        user.deposits[i].ended = true;\r\n                    }\r\n                }\r\n\r\n                user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(\r\n                    dividends\r\n                ); /// changing of storage data\r\n                totalAmount = totalAmount.add(dividends);\r\n            }\r\n        }\r\n\r\n        uint256 referralBonus = getUserReferralBonus(msg.sender);\r\n        if (referralBonus > 0) {\r\n            totalAmount = totalAmount.add(referralBonus);\r\n            user.bonus = 0;\r\n        }\r\n\r\n        require(totalAmount > 0, \"User has no dividends\");\r\n\r\n        uint256 contractBalance = BC.balanceOf(address(this));\r\n        if (contractBalance < totalAmount) {\r\n            totalAmount = contractBalance;\r\n        }\r\n\r\n        user.checkpoint = block.timestamp;\r\n\r\n        BC.transfer(msg.sender, totalAmount);\r\n\r\n        totalWithdrawn = totalWithdrawn.add(totalAmount);\r\n\r\n        emit Withdrawn(msg.sender, totalAmount);\r\n    }\r\n\r\n    function compound() public onlyhodler {\r\n        User storage user = users[msg.sender];\r\n        // fetch dividends\r\n        uint256 _dividends = getUserDividends(msg.sender); // retrieve ref. bonus later in the code\r\n        uint256 totalAmount;\r\n        uint256 dividends;\r\n\r\n        user.deposits.push(\r\n            Deposit(\r\n                _dividends,\r\n                0,\r\n                block.timestamp,\r\n                block.timestamp + STAKING_PERIOD,\r\n                false\r\n            )\r\n        );\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(TIME_STEP);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(\r\n                                TIME_STEP\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(TIME_STEP);\r\n                        user.deposits[i].ended = true;\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(TIME_STEP);\r\n                        user.deposits[i].ended = true;\r\n                    }\r\n                }\r\n\r\n                user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(\r\n                    dividends\r\n                ); /// changing of storage data\r\n                totalAmount = totalAmount.add(dividends);\r\n            }\r\n        }\r\n\r\n        user.checkpoint = block.timestamp;\r\n\r\n        totalStaked = totalStaked.add(_dividends);\r\n        totalDepositCount = totalDepositCount.add(1);\r\n        totalWithdrawn = totalWithdrawn.add(totalAmount);\r\n        // fire event\r\n        emit onReinvestment(msg.sender, _dividends);\r\n    }\r\n\r\n    function getUserDividends(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 totalDividends;\r\n        uint256 dividends;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(TIME_STEP);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(\r\n                                TIME_STEP\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(TIME_STEP);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(PERCENTS_DAILY).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(TIME_STEP);\r\n                    }\r\n                }\r\n                totalDividends = totalDividends.add(dividends);\r\n            }\r\n        }\r\n\r\n        return totalDividends;\r\n    }\r\n\r\n    function getUserReferralBonus(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].bonus;\r\n    }\r\n\r\n    function getUserReferralCount(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].referralCount;\r\n    }\r\n\r\n    function getUserReferrer(address userAddress)\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        return users[userAddress].referrer;\r\n    }\r\n\r\n    function getUserCheckpoint(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].checkpoint;\r\n    }\r\n\r\n    function getUserAvailable(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return\r\n            getUserReferralBonus(userAddress).add(\r\n                getUserDividends(userAddress)\r\n            );\r\n    }\r\n\r\n    function isActive(address userAddress) public view returns (bool) {\r\n        User storage user = users[userAddress];\r\n\r\n        if (user.deposits.length > 0) {\r\n            if (\r\n                user.deposits[user.deposits.length - 1].withdrawn <\r\n                user.deposits[user.deposits.length - 1].amount.mul(365).div(100)\r\n            ) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    function getUserDepositInfo(address userAddress, uint256 index)\r\n        public\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            bool\r\n        )\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        return (\r\n            user.deposits[index].amount,\r\n            user.deposits[index].withdrawn,\r\n            user.deposits[index].startTime,\r\n            user.deposits[index].endTime,\r\n            user.deposits[index].ended\r\n        );\r\n    }\r\n\r\n    function getUserAmountOfDeposits(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].deposits.length;\r\n    }\r\n\r\n    function getUserTotalDeposits(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 amount;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            amount = amount.add(user.deposits[i].amount);\r\n        }\r\n\r\n        return amount;\r\n    }\r\n\r\n    function getUserTotalWithdrawn(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 amount;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            amount = amount.add(user.deposits[i].withdrawn);\r\n        }\r\n\r\n        return amount;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10250:10269  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10328:10349  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10410  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10426  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10435  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11211  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7484:8135  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7610:7628  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7688:7704  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7804:7823  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7859:7880  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7975:7995  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7995  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8028  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8069:8071  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8063:8067  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8079  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8091:8128  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:7"
															},
															"nodeType": "YulIf",
															"src": "921:80:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:885:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:7"
															},
															"nodeType": "YulIf",
															"src": "1164:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:7"
															},
															"nodeType": "YulIf",
															"src": "1301:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:7"
															},
															"nodeType": "YulIf",
															"src": "1474:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:7",
														"type": ""
													}
												],
												"src": "1036:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:7"
															},
															"nodeType": "YulIf",
															"src": "1746:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:7"
															},
															"nodeType": "YulIf",
															"src": "1816:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:7",
														"type": ""
													}
												],
												"src": "1603:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFBALANCE JUMPI SWAP13 SWAP2 0x2B MUL 0xA6 CREATE DIFFICULTY SWAP4 0x49 0xCD 0xB3 SWAP2 0xD3 PUSH27 0x2747FEB565D1E0373A211C77403F8D64736F6C634300080A003300 ",
							"sourceMap": "1403:11223:1:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:1;;;-1:-1:-1;1403:11223:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:7:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:7;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1403:11223:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_689": {
									"entryPoint": null,
									"id": 689,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_624": {
									"entryPoint": 856,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_667": {
									"entryPoint": 1148,
									"id": 667,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_451": {
									"entryPoint": 1270,
									"id": 451,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_246": {
									"entryPoint": 813,
									"id": 246,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_271": {
									"entryPoint": 562,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_374": {
									"entryPoint": 671,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_333": {
									"entryPoint": 622,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_159": {
									"entryPoint": 416,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_169": {
									"entryPoint": 656,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_304": {
									"entryPoint": 586,
									"id": 304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_228": {
									"entryPoint": 799,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:7"
															},
															"nodeType": "YulIf",
															"src": "443:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:7"
															},
															"nodeType": "YulIf",
															"src": "713:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:7",
														"type": ""
													}
												],
												"src": "616:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:7"
															},
															"nodeType": "YulIf",
															"src": "891:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:7",
														"type": ""
													}
												],
												"src": "794:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:7",
														"type": ""
													}
												],
												"src": "1053:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:7",
														"type": ""
													}
												],
												"src": "1245:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:7"
															},
															"nodeType": "YulIf",
															"src": "1541:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1427:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:7",
														"type": ""
													}
												],
												"src": "1760:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:7"
															},
															"nodeType": "YulIf",
															"src": "2029:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:7",
														"type": ""
													}
												],
												"src": "1949:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:7"
															},
															"nodeType": "YulIf",
															"src": "2237:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:7",
														"type": ""
													}
												],
												"src": "2140:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:7"
															},
															"nodeType": "YulIf",
															"src": "2548:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:7"
															},
															"nodeType": "YulIf",
															"src": "2618:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:7",
														"type": ""
													}
												],
												"src": "2405:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:7"
															},
															"nodeType": "YulIf",
															"src": "2848:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"src": "2790:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:7",
														"type": ""
													}
												],
												"src": "3020:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:7",
														"type": ""
													}
												],
												"src": "3426:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:7",
														"type": ""
													}
												],
												"src": "3831:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:7",
														"type": ""
													}
												],
												"src": "4234:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:7",
														"type": ""
													}
												],
												"src": "4592:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:7",
														"type": ""
													}
												],
												"src": "4998:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:7",
														"type": ""
													}
												],
												"src": "5402:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFBALANCE JUMPI SWAP13 SWAP2 0x2B MUL 0xA6 CREATE DIFFICULTY SWAP4 0x49 0xCD 0xB3 SWAP2 0xD3 PUSH27 0x2747FEB565D1E0373A211C77403F8D64736F6C634300080A003300 ",
							"sourceMap": "1403:11223:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4433:197:1;1053:187:7;3244:106:1;3331:12;;3244:106;;;1391:25:7;;;1379:2;1364:18;3244:106:1;1245:177:7;5192:286:1;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:7;;1890:2;1875:18;3093:91:1;1760:184:7;5873:234:1;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;3222:2:7;6803:85:1;;;3204:21:7;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:7;;;3344:35;3396:19;;6803:85:1;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;3628:2:7;10242:68:1;;;3610:21:7;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:7;;;3750:34;3801:19;;10242:68:1;3426:400:7;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;4033:2:7;10320:68:1;;;4015:21:7;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:7;;;4155:32;4204:19;;10320:68:1;3831:398:7;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1391:25:7;;;10450:32:1;;1364:18:7;10450:32:1;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;4436:2:7;11019:68:1;;;4418:21:7;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11019:68:1;4234:353:7;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;4794:2:7;7602:68:1;;;4776:21:7;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:7;;;4916:35;4968:19;;7602:68:1;4592:401:7;7602:68:1;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;5200:2:7;7680:64:1;;;5182:21:7;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:7;;;5322:33;5372:19;;7680:64:1;4998:399:7;7680:64:1;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;5604:2:7;7851:72:1;;;5586:21:7;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:7;;;5726:36;5779:19;;7851:72:1;5402:402:7;7851:72:1;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;1391:25:7;;1379:2;1364:18;;1245:177;8054:26:1;;;;;;;;8091:37;11795:121;14:597:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:7:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:7;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking.sol": {
				"BillionCashStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NewDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Newbie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefBonus",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reinvestAmount",
									"type": "uint256"
								}
							],
							"name": "onReinvestment",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DAILY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL_PERCENTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STAKING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserAmountOfDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserAvailable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserCheckpoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getUserDepositInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferralBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferralCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferrer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserTotalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserTotalWithdrawn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "isActive",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDepositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWithdrawn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking.sol\":241:15028  contract BillionCashStaking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Staking.sol\":1590:1685  constructor(ERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"Staking.sol\":1666:1668  BC */\n  0x01\n    /* \"Staking.sol\":1666:1677  BC = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"Staking.sol\":241:15028  contract BillionCashStaking is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:317   */\ntag_3:\n    /* \"#utility.yul\":97:103   */\n  0x00\n    /* \"#utility.yul\":150:152   */\n  0x20\n    /* \"#utility.yul\":138:147   */\n  dup3\n    /* \"#utility.yul\":129:136   */\n  dup5\n    /* \"#utility.yul\":125:148   */\n  sub\n    /* \"#utility.yul\":121:153   */\n  slt\n    /* \"#utility.yul\":118:170   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":166:167   */\n  0x00\n    /* \"#utility.yul\":163:164   */\n  dup1\n    /* \"#utility.yul\":156:168   */\n  revert\n    /* \"#utility.yul\":118:170   */\ntag_17:\n    /* \"#utility.yul\":192:208   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":237:268   */\n  dup2\n  and\n    /* \"#utility.yul\":227:269   */\n  dup2\n  eq\n    /* \"#utility.yul\":217:287   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":283:284   */\n  0x00\n    /* \"#utility.yul\":280:281   */\n  dup1\n    /* \"#utility.yul\":273:285   */\n  revert\n    /* \"#utility.yul\":217:287   */\ntag_18:\n    /* \"#utility.yul\":306:311   */\n  swap4\n    /* \"#utility.yul\":14:317   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"Staking.sol\":241:15028  contract BillionCashStaking is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Staking.sol\":241:15028  contract BillionCashStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xc8a22eb4\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xe85abe09\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe85abe09\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf69e2046\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xfb4cb32b\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xc8a22eb4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd6343867\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd7ffca91\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9f8a13d7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa8aeb6c2\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc0806b03\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x36144c9a\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x4e71d92d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7e3abeea\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x817b1cd2\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x36144c9a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x44038f90\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4b319713\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x0104db1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01c234a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x040a772e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x141a2a3f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x153ab9df\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Staking.sol\":529:578  uint256 public constant STAKING_PERIOD = 180 days */\n    tag_3:\n      tag_34\n        /* \"Staking.sol\":570:578  180 days */\n      0xed4e00\n        /* \"Staking.sol\":529:578  uint256 public constant STAKING_PERIOD = 180 days */\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Staking.sol\":529:578  uint256 public constant STAKING_PERIOD = 180 days */\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":322:369  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_4:\n      tag_34\n        /* \"Staking.sol\":365:369  1000 */\n      0x03e8\n        /* \"Staking.sol\":322:369  uint256 public constant PERCENTS_DIVIDER = 1000 */\n      dup2\n      jump\n        /* \"Staking.sol\":9648:12098  function getUserDividends(address userAddress)... */\n    tag_5:\n      tag_34\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n        /* \"Staking.sol\":376:419  uint256 public constant PERCENTS_DAILY = 15 */\n    tag_6:\n      tag_34\n        /* \"Staking.sol\":417:419  15 */\n      0x0f\n        /* \"Staking.sol\":376:419  uint256 public constant PERCENTS_DAILY = 15 */\n      dup2\n      jump\n        /* \"Staking.sol\":12798:13046  function getUserAvailable(address userAddress)... */\n    tag_7:\n      tag_34\n      tag_50\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"Staking.sol\":480:522  uint256 public constant TIME_STEP = 1 days */\n    tag_8:\n      tag_34\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":480:522  uint256 public constant TIME_STEP = 1 days */\n      dup2\n      jump\n        /* \"Staking.sol\":12456:12617  function getUserReferrer(address userAddress)... */\n    tag_9:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":12582:12600  users[userAddress] */\n      swap1\n      dup2\n      and\n        /* \"Staking.sol\":12550:12557  address */\n      0x00\n        /* \"Staking.sol\":12582:12600  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12582:12587  users */\n      0x06\n        /* \"Staking.sol\":12582:12600  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12582:12609  users[userAddress].referrer */\n      0x04\n      add\n      sload\n      and\n      swap1\n        /* \"Staking.sol\":12456:12617  function getUserReferrer(address userAddress)... */\n      jump\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"Staking.sol\":12456:12617  function getUserReferrer(address userAddress)... */\n      tag_36\n        /* \"#utility.yul\":565:768   */\n      jump\n        /* \"Staking.sol\":426:473  uint256 public constant REFERRAL_PERCENTS = 120 */\n    tag_10:\n      tag_34\n        /* \"Staking.sol\":470:473  120 */\n      0x78\n        /* \"Staking.sol\":426:473  uint256 public constant REFERRAL_PERCENTS = 120 */\n      dup2\n      jump\n        /* \"Staking.sol\":669:698  uint256 public totalWithdrawn */\n    tag_11:\n      tag_34\n      sload(0x04)\n      dup2\n      jump\n        /* \"Staking.sol\":3138:6370  function claim() public {... */\n    tag_12:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_67\n      tag_70\n      jump\t// in\n        /* \"Staking.sol\":14299:14656  function getUserTotalDeposits(address userAddress)... */\n    tag_14:\n      tag_34\n      tag_72\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"Staking.sol\":636:662  uint256 public totalStaked */\n    tag_15:\n      tag_34\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_56)\n        /* \"Staking.sol\":13054:13560  function isActive(address userAddress) public view returns (bool) {... */\n    tag_17:\n      tag_81\n      tag_82\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n        /* \"#utility.yul\":938:952   */\n      swap1\n      iszero\n        /* \"#utility.yul\":931:953   */\n      iszero\n        /* \"#utility.yul\":913:954   */\n      dup2\n      mstore\n        /* \"#utility.yul\":901:903   */\n      0x20\n        /* \"#utility.yul\":886:904   */\n      add\n        /* \"Staking.sol\":13054:13560  function isActive(address userAddress) public view returns (bool) {... */\n      tag_36\n        /* \"#utility.yul\":773:960   */\n      jump\n        /* \"Staking.sol\":14115:14291  function getUserAmountOfDeposits(address userAddress)... */\n    tag_18:\n      tag_34\n      tag_87\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":14249:14267  users[userAddress] */\n      and\n        /* \"Staking.sol\":14217:14224  uint256 */\n      0x00\n        /* \"Staking.sol\":14249:14267  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":14249:14254  users */\n      0x06\n        /* \"Staking.sol\":14249:14267  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":14249:14283  users[userAddress].deposits.length */\n      sload\n      swap1\n        /* \"Staking.sol\":14115:14291  function getUserAmountOfDeposits(address userAddress)... */\n      jump\n        /* \"Staking.sol\":1693:3130  function stake(address referrer, uint256 amount) public {... */\n    tag_19:\n      tag_67\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"Staking.sol\":604:629  uint256 public totalUsers */\n    tag_20:\n      tag_34\n      sload(0x02)\n      dup2\n      jump\n        /* \"Staking.sol\":13568:14107  function getUserDepositInfo(address userAddress, uint256 index)... */\n    tag_21:\n      tag_97\n      tag_98\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1477:1502   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1533:1535   */\n      0x20\n        /* \"#utility.yul\":1518:1536   */\n      dup7\n      add\n        /* \"#utility.yul\":1511:1545   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1561:1579   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1554:1588   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1619:1621   */\n      0x60\n        /* \"#utility.yul\":1604:1622   */\n      dup4\n      add\n        /* \"#utility.yul\":1597:1631   */\n      mstore\n        /* \"#utility.yul\":1675:1689   */\n      iszero\n        /* \"#utility.yul\":1668:1690   */\n      iszero\n        /* \"#utility.yul\":1662:1665   */\n      0x80\n        /* \"#utility.yul\":1647:1666   */\n      dup3\n      add\n        /* \"#utility.yul\":1640:1691   */\n      mstore\n        /* \"#utility.yul\":1464:1467   */\n      0xa0\n        /* \"#utility.yul\":1449:1468   */\n      add\n        /* \"Staking.sol\":13568:14107  function getUserDepositInfo(address userAddress, uint256 index)... */\n      tag_36\n        /* \"#utility.yul\":1224:1697   */\n      jump\n        /* \"Staking.sol\":12277:12448  function getUserReferralCount(address userAddress)... */\n    tag_22:\n      tag_34\n      tag_103\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":12408:12426  users[userAddress] */\n      and\n        /* \"Staking.sol\":12376:12383  uint256 */\n      0x00\n        /* \"Staking.sol\":12408:12426  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12408:12413  users */\n      0x06\n        /* \"Staking.sol\":12408:12426  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12408:12440  users[userAddress].referralCount */\n      0x03\n      add\n      sload\n      swap1\n        /* \"Staking.sol\":12277:12448  function getUserReferralCount(address userAddress)... */\n      jump\n        /* \"Staking.sol\":705:737  uint256 public totalDepositCount */\n    tag_23:\n      tag_34\n      sload(0x05)\n      dup2\n      jump\n        /* \"Staking.sol\":12625:12790  function getUserCheckpoint(address userAddress)... */\n    tag_24:\n      tag_34\n      tag_110\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":12753:12771  users[userAddress] */\n      and\n        /* \"Staking.sol\":12721:12728  uint256 */\n      0x00\n        /* \"Staking.sol\":12753:12771  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12753:12758  users */\n      0x06\n        /* \"Staking.sol\":12753:12771  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12753:12782  users[userAddress].checkpoint */\n      0x01\n      add\n      sload\n      swap1\n        /* \"Staking.sol\":12625:12790  function getUserCheckpoint(address userAddress)... */\n      jump\n        /* \"Staking.sol\":12106:12269  function getUserReferralBonus(address userAddress)... */\n    tag_25:\n      tag_34\n      tag_114\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      and\n        /* \"Staking.sol\":12205:12212  uint256 */\n      0x00\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12237:12242  users */\n      0x06\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12237:12261  users[userAddress].bonus */\n      0x02\n      add\n      sload\n      swap1\n        /* \"Staking.sol\":12106:12269  function getUserReferralBonus(address userAddress)... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_26:\n      tag_67\n      tag_118\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"Staking.sol\":6378:9640  function compound() public onlyhodler {... */\n    tag_27:\n      tag_67\n      tag_121\n      jump\t// in\n        /* \"Staking.sol\":14664:15025  function getUserTotalWithdrawn(address userAddress)... */\n    tag_28:\n      tag_34\n      tag_123\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n        /* \"Staking.sol\":9648:12098  function getUserDividends(address userAddress)... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":9788:9806  users[userAddress] */\n      dup2\n      and\n        /* \"Staking.sol\":9743:9750  uint256 */\n      0x00\n        /* \"Staking.sol\":9788:9806  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":9788:9793  users */\n      0x06\n        /* \"Staking.sol\":9788:9806  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Staking.sol\":9743:9750  uint256 */\n      dup2\n      dup1\n      dup1\n        /* \"Staking.sol\":9882:12057  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_127:\n        /* \"Staking.sol\":9906:9926  user.deposits.length */\n      dup4\n      sload\n        /* \"Staking.sol\":9902:9926  i < user.deposits.length */\n      dup2\n      lt\n        /* \"Staking.sol\":9882:12057  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"Staking.sol\":9952:9956  user */\n      dup4\n        /* \"Staking.sol\":9952:9965  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":9966:9967  i */\n      dup2\n        /* \"Staking.sol\":9952:9968  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Staking.sol\":9952:9974  user.deposits[i].ended */\n      0x04\n        /* \"Staking.sol\":9952:9968  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"Staking.sol\":9952:9974  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"Staking.sol\":9948:12046  if (user.deposits[i].ended == false) {... */\n      tag_134\n      jumpi\n        /* \"Staking.sol\":10035:10050  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":10008:10012  user */\n      dup5\n        /* \"Staking.sol\":10008:10021  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":10022:10023  i */\n      dup3\n        /* \"Staking.sol\":10008:10024  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_136\n      jumpi\n      tag_136\n      tag_132\n      jump\t// in\n    tag_136:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":10008:10032  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":10008:10050  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"Staking.sol\":10004:11966  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_138\n      jumpi\n        /* \"Staking.sol\":10108:10112  user */\n      dup4\n        /* \"Staking.sol\":10108:10123  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":10079:10083  user */\n      dup5\n        /* \"Staking.sol\":10079:10092  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":10093:10094  i */\n      dup3\n        /* \"Staking.sol\":10079:10095  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_140\n      tag_132\n      jump\t// in\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":10079:10105  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":10079:10123  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":10075:10944  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"Staking.sol\":10164:10543  (... */\n      tag_143\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":10164:10498  (... */\n      tag_151\n        /* \"Staking.sol\":10420:10467  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_145\n        /* \"Staking.sol\":10440:10444  user */\n      dup8\n        /* \"Staking.sol\":10440:10453  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":10454:10455  i */\n      dup6\n        /* \"Staking.sol\":10440:10456  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_132\n      jump\t// in\n    tag_147:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":10440:10466  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":10420:10435  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":10420:10439  block.timestamp.sub */\n      tag_149\n      swap1\n        /* \"Staking.sol\":10420:10467  block.timestamp.sub(user.deposits[i].startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"Staking.sol\":10195:10324  user.deposits[i].amount.mul(PERCENTS_DAILY).div(... */\n      tag_150\n        /* \"Staking.sol\":365:369  1000 */\n      0x03e8\n        /* \"Staking.sol\":10195:10238  user.deposits[i].amount.mul(PERCENTS_DAILY) */\n      tag_151\n        /* \"Staking.sol\":417:419  15 */\n      0x0f\n        /* \"Staking.sol\":10195:10199  user */\n      dup12\n        /* \"Staking.sol\":10195:10208  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":10209:10210  i */\n      dup10\n        /* \"Staking.sol\":10195:10211  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_132\n      jump\t// in\n    tag_153:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":10195:10218  user.deposits[i].amount */\n      sload\n      swap1\n        /* \"Staking.sol\":10195:10222  user.deposits[i].amount.mul */\n      tag_155\n        /* \"Staking.sol\":10195:10238  user.deposits[i].amount.mul(PERCENTS_DAILY) */\n      jump\t// in\n    tag_151:\n        /* \"Staking.sol\":10195:10242  user.deposits[i].amount.mul(PERCENTS_DAILY).div */\n      swap1\n      tag_156\n        /* \"Staking.sol\":10195:10324  user.deposits[i].amount.mul(PERCENTS_DAILY).div(... */\n      jump\t// in\n    tag_150:\n        /* \"Staking.sol\":10164:10385  (... */\n      swap1\n      tag_155\n        /* \"Staking.sol\":10164:10498  (... */\n      jump\t// in\n        /* \"Staking.sol\":10164:10543  (... */\n    tag_143:\n        /* \"Staking.sol\":10152:10543  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":10004:11966  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_185)\n        /* \"Staking.sol\":10075:10944  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_142:\n        /* \"Staking.sol\":10612:10920  (... */\n      tag_143\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":10612:10841  (... */\n      tag_151\n        /* \"Staking.sol\":10804:10840  block.timestamp.sub(user.checkpoint) */\n      tag_145\n        /* \"Staking.sol\":10824:10828  user */\n      dup8\n        /* \"Staking.sol\":10824:10839  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":10804:10819  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":10804:10823  block.timestamp.sub */\n      tag_149\n      swap1\n        /* \"Staking.sol\":10804:10840  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Staking.sol\":10004:11966  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_138:\n        /* \"Staking.sol\":11025:11029  user */\n      dup4\n        /* \"Staking.sol\":11025:11040  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":10996:11000  user */\n      dup5\n        /* \"Staking.sol\":10996:11009  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":11010:11011  i */\n      dup3\n        /* \"Staking.sol\":10996:11012  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_132\n      jump\t// in\n    tag_168:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":10996:11022  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":10996:11040  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":10992:11947  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"Staking.sol\":11081:11541  (... */\n      tag_143\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":11081:11496  (... */\n      tag_151\n        /* \"Staking.sol\":11337:11465  user.deposits[i].endTime.sub(... */\n      tag_145\n        /* \"Staking.sol\":11404:11408  user */\n      dup8\n        /* \"Staking.sol\":11404:11417  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":11418:11419  i */\n      dup6\n        /* \"Staking.sol\":11404:11420  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_132\n      jump\t// in\n    tag_175:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":11404:11430  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":11337:11341  user */\n      dup9\n        /* \"Staking.sol\":11337:11350  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":11351:11352  i */\n      dup7\n        /* \"Staking.sol\":11337:11353  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_132\n      jump\t// in\n    tag_178:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":11337:11361  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":11337:11365  user.deposits[i].endTime.sub */\n      tag_149\n      swap1\n        /* \"Staking.sol\":11337:11465  user.deposits[i].endTime.sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Staking.sol\":10992:11947  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_170:\n        /* \"Staking.sol\":11610:11923  (... */\n      tag_186\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":11610:11878  (... */\n      tag_151\n        /* \"Staking.sol\":11832:11877  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_145\n        /* \"Staking.sol\":11861:11865  user */\n      dup8\n        /* \"Staking.sol\":11861:11876  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":11832:11836  user */\n      dup9\n        /* \"Staking.sol\":11832:11845  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":11846:11847  i */\n      dup7\n        /* \"Staking.sol\":11832:11848  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":11610:11923  (... */\n    tag_186:\n        /* \"Staking.sol\":11598:11923  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":10992:11947  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_185:\n        /* \"Staking.sol\":12001:12030  totalDividends.add(dividends) */\n      tag_197\n        /* \"Staking.sol\":12001:12015  totalDividends */\n      dup4\n        /* \"Staking.sol\":12020:12029  dividends */\n      dup4\n        /* \"Staking.sol\":12001:12019  totalDividends.add */\n      tag_198\n        /* \"Staking.sol\":12001:12030  totalDividends.add(dividends) */\n      jump\t// in\n    tag_197:\n        /* \"Staking.sol\":11984:12030  totalDividends = totalDividends.add(dividends) */\n      swap3\n      pop\n        /* \"Staking.sol\":9948:12046  if (user.deposits[i].ended == false) {... */\n    tag_134:\n        /* \"Staking.sol\":9928:9931  i++ */\n      dup1\n      tag_199\n      dup2\n      tag_200\n      jump\t// in\n    tag_199:\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":9882:12057  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"Staking.sol\":12076:12090  totalDividends */\n      swap1\n      swap5\n        /* \"Staking.sol\":9648:12098  function getUserDividends(address userAddress)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":12798:13046  function getUserAvailable(address userAddress)... */\n    tag_51:\n        /* \"Staking.sol\":12893:12900  uint256 */\n      0x00\n        /* \"Staking.sol\":12938:13038  getUserReferralBonus(userAddress).add(... */\n      tag_202\n        /* \"Staking.sol\":12994:13023  getUserDividends(userAddress) */\n      tag_203\n        /* \"Staking.sol\":13011:13022  userAddress */\n      dup4\n        /* \"Staking.sol\":12994:13010  getUserDividends */\n      tag_44\n        /* \"Staking.sol\":12994:13023  getUserDividends(userAddress) */\n      jump\t// in\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      dup5\n      and\n        /* \"Staking.sol\":12205:12212  uint256 */\n      0x00\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12237:12242  users */\n      0x06\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12237:12261  users[userAddress].bonus */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":12938:12975  getUserReferralBonus(userAddress).add */\n      swap1\n      tag_198\n        /* \"Staking.sol\":12938:13038  getUserReferralBonus(userAddress).add(... */\n      jump\t// in\n    tag_202:\n        /* \"Staking.sol\":12918:13038  return... */\n      swap3\n        /* \"Staking.sol\":12798:13046  function getUserAvailable(address userAddress)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":3138:6370  function claim() public {... */\n    tag_68:\n        /* \"Staking.sol\":3199:3209  msg.sender */\n      caller\n        /* \"Staking.sol\":3173:3190  User storage user */\n      0x00\n        /* \"Staking.sol\":3193:3210  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":3193:3198  users */\n      0x06\n        /* \"Staking.sol\":3193:3210  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Staking.sol\":3173:3190  User storage user */\n      dup1\n      dup1\n        /* \"Staking.sol\":3283:5724  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_207:\n        /* \"Staking.sol\":3307:3327  user.deposits.length */\n      dup4\n      sload\n        /* \"Staking.sol\":3303:3327  i < user.deposits.length */\n      dup2\n      lt\n        /* \"Staking.sol\":3283:5724  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"Staking.sol\":3353:3357  user */\n      dup4\n        /* \"Staking.sol\":3353:3366  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":3367:3368  i */\n      dup2\n        /* \"Staking.sol\":3353:3369  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_132\n      jump\t// in\n    tag_211:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Staking.sol\":3353:3375  user.deposits[i].ended */\n      0x04\n        /* \"Staking.sol\":3353:3369  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"Staking.sol\":3353:3375  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"Staking.sol\":3349:5713  if (user.deposits[i].ended == false) {... */\n      tag_213\n      jumpi\n        /* \"Staking.sol\":3436:3451  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3409:3413  user */\n      dup5\n        /* \"Staking.sol\":3409:3422  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":3423:3424  i */\n      dup3\n        /* \"Staking.sol\":3409:3425  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_215\n      jumpi\n      tag_215\n      tag_132\n      jump\t// in\n    tag_215:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":3409:3433  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":3409:3451  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"Staking.sol\":3405:5479  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"Staking.sol\":3509:3513  user */\n      dup4\n        /* \"Staking.sol\":3509:3524  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":3480:3484  user */\n      dup5\n        /* \"Staking.sol\":3480:3493  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":3494:3495  i */\n      dup3\n        /* \"Staking.sol\":3480:3496  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_219\n      jumpi\n      tag_219\n      tag_132\n      jump\t// in\n    tag_219:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":3480:3506  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":3480:3524  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":3476:4345  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \"Staking.sol\":3565:3944  (... */\n      tag_222\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":3565:3899  (... */\n      tag_151\n        /* \"Staking.sol\":3821:3868  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_145\n        /* \"Staking.sol\":3841:3845  user */\n      dup8\n        /* \"Staking.sol\":3841:3854  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":3855:3856  i */\n      dup6\n        /* \"Staking.sol\":3841:3857  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":3565:3944  (... */\n    tag_222:\n        /* \"Staking.sol\":3553:3944  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":3405:5479  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_264)\n        /* \"Staking.sol\":3476:4345  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_221:\n        /* \"Staking.sol\":4013:4321  (... */\n      tag_222\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":4013:4242  (... */\n      tag_151\n        /* \"Staking.sol\":4205:4241  block.timestamp.sub(user.checkpoint) */\n      tag_145\n        /* \"Staking.sol\":4225:4229  user */\n      dup8\n        /* \"Staking.sol\":4225:4240  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":4205:4220  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":4205:4224  block.timestamp.sub */\n      tag_149\n      swap1\n        /* \"Staking.sol\":4205:4241  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Staking.sol\":3405:5479  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_217:\n        /* \"Staking.sol\":4426:4430  user */\n      dup4\n        /* \"Staking.sol\":4426:4441  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":4397:4401  user */\n      dup5\n        /* \"Staking.sol\":4397:4410  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":4411:4412  i */\n      dup3\n        /* \"Staking.sol\":4397:4413  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_244\n      jumpi\n      tag_244\n      tag_132\n      jump\t// in\n    tag_244:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4397:4423  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":4397:4441  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":4393:5460  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_246\n      jumpi\n        /* \"Staking.sol\":4482:4942  (... */\n      tag_247\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":4482:4897  (... */\n      tag_151\n        /* \"Staking.sol\":4738:4866  user.deposits[i].endTime.sub(... */\n      tag_145\n        /* \"Staking.sol\":4805:4809  user */\n      dup8\n        /* \"Staking.sol\":4805:4818  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":4819:4820  i */\n      dup6\n        /* \"Staking.sol\":4805:4821  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      tag_175\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":4482:4942  (... */\n    tag_247:\n        /* \"Staking.sol\":4470:4942  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":4994:4998  true */\n      0x01\n        /* \"Staking.sol\":4969:4973  user */\n      dup5\n        /* \"Staking.sol\":4969:4982  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":4983:4984  i */\n      dup3\n        /* \"Staking.sol\":4969:4985  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_132\n      jump\t// in\n    tag_262:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":4969:4991  user.deposits[i].ended */\n      0x04\n      add\n        /* \"Staking.sol\":4969:4998  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":4393:5460  if (user.deposits[i].startTime > user.checkpoint) {... */\n      jump(tag_264)\n    tag_246:\n        /* \"Staking.sol\":5067:5380  (... */\n      tag_265\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":5067:5335  (... */\n      tag_151\n        /* \"Staking.sol\":5289:5334  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_145\n        /* \"Staking.sol\":5318:5322  user */\n      dup8\n        /* \"Staking.sol\":5318:5333  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":5289:5293  user */\n      dup9\n        /* \"Staking.sol\":5289:5302  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":5303:5304  i */\n      dup7\n        /* \"Staking.sol\":5289:5305  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":5067:5380  (... */\n    tag_265:\n        /* \"Staking.sol\":5055:5380  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":5432:5436  true */\n      0x01\n        /* \"Staking.sol\":5407:5411  user */\n      dup5\n        /* \"Staking.sol\":5407:5420  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":5421:5422  i */\n      dup3\n        /* \"Staking.sol\":5407:5423  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_277\n      jumpi\n      tag_277\n      tag_132\n      jump\t// in\n    tag_277:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":5407:5429  user.deposits[i].ended */\n      0x04\n      add\n        /* \"Staking.sol\":5407:5436  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":4393:5460  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_264:\n        /* \"Staking.sol\":5528:5609  user.deposits[i].withdrawn.add(... */\n      tag_279\n        /* \"Staking.sol\":5581:5590  dividends */\n      dup3\n        /* \"Staking.sol\":5528:5532  user */\n      dup6\n        /* \"Staking.sol\":5528:5541  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":5542:5543  i */\n      dup4\n        /* \"Staking.sol\":5528:5544  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      tag_281\n      tag_132\n      jump\t// in\n    tag_281:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":5528:5554  user.deposits[i].withdrawn */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":5528:5558  user.deposits[i].withdrawn.add */\n      tag_198\n      swap1\n        /* \"Staking.sol\":5528:5609  user.deposits[i].withdrawn.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"Staking.sol\":5499:5503  user */\n      dup5\n        /* \"Staking.sol\":5499:5512  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":5513:5514  i */\n      dup3\n        /* \"Staking.sol\":5499:5515  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_284\n      tag_132\n      jump\t// in\n    tag_284:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Staking.sol\":5499:5525  user.deposits[i].withdrawn */\n      0x01\n        /* \"Staking.sol\":5499:5515  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"Staking.sol\":5499:5525  user.deposits[i].withdrawn */\n      add\n        /* \"Staking.sol\":5499:5609  user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(... */\n      sstore\n        /* \"Staking.sol\":5671:5697  totalAmount.add(dividends) */\n      tag_286\n        /* \"Staking.sol\":5671:5682  totalAmount */\n      dup4\n        /* \"Staking.sol\":5687:5696  dividends */\n      dup4\n        /* \"Staking.sol\":5671:5686  totalAmount.add */\n      tag_198\n        /* \"Staking.sol\":5671:5697  totalAmount.add(dividends) */\n      jump\t// in\n    tag_286:\n        /* \"Staking.sol\":5657:5697  totalAmount = totalAmount.add(dividends) */\n      swap3\n      pop\n        /* \"Staking.sol\":3349:5713  if (user.deposits[i].ended == false) {... */\n    tag_213:\n        /* \"Staking.sol\":3329:3332  i++ */\n      dup1\n      tag_287\n      dup2\n      tag_200\n      jump\t// in\n    tag_287:\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":3283:5724  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_207)\n    tag_208:\n      pop\n        /* \"Staking.sol\":5781:5791  msg.sender */\n      caller\n        /* \"Staking.sol\":5736:5757  uint256 referralBonus */\n      0x00\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":12237:12242  users */\n      0x06\n        /* \"Staking.sol\":12237:12255  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":12237:12261  users[userAddress].bonus */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":5807:5824  referralBonus > 0 */\n      dup1\n      iszero\n        /* \"Staking.sol\":5803:5926  if (referralBonus > 0) {... */\n      tag_289\n      jumpi\n        /* \"Staking.sol\":5855:5885  totalAmount.add(referralBonus) */\n      tag_290\n        /* \"Staking.sol\":5855:5866  totalAmount */\n      dup4\n        /* \"Staking.sol\":5871:5884  referralBonus */\n      dup3\n        /* \"Staking.sol\":5855:5870  totalAmount.add */\n      tag_198\n        /* \"Staking.sol\":5855:5885  totalAmount.add(referralBonus) */\n      jump\t// in\n    tag_290:\n        /* \"Staking.sol\":5913:5914  0 */\n      0x00\n        /* \"Staking.sol\":5900:5910  user.bonus */\n      0x02\n      dup7\n      add\n        /* \"Staking.sol\":5900:5914  user.bonus = 0 */\n      sstore\n        /* \"Staking.sol\":5841:5885  totalAmount = totalAmount.add(referralBonus) */\n      swap3\n      pop\n        /* \"Staking.sol\":5803:5926  if (referralBonus > 0) {... */\n    tag_289:\n        /* \"Staking.sol\":5960:5961  0 */\n      0x00\n        /* \"Staking.sol\":5946:5957  totalAmount */\n      dup4\n        /* \"Staking.sol\":5946:5961  totalAmount > 0 */\n      gt\n        /* \"Staking.sol\":5938:5987  require(totalAmount > 0, \"User has no dividends\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"Staking.sol\":5938:5987  require(totalAmount > 0, \"User has no dividends\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2290:2311   */\n      mstore\n        /* \"#utility.yul\":2347:2349   */\n      0x15\n        /* \"#utility.yul\":2327:2345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2320:2350   */\n      mstore\n      shl(0x58, 0x5573657220686173206e6f206469766964656e6473)\n        /* \"#utility.yul\":2366:2384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2359:2410   */\n      mstore\n        /* \"#utility.yul\":2427:2445   */\n      0x64\n      add\n        /* \"Staking.sol\":5938:5987  require(totalAmount > 0, \"User has no dividends\") */\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_291:\n        /* \"Staking.sol\":6026:6028  BC */\n      sload(0x01)\n        /* \"Staking.sol\":6026:6053  BC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"Staking.sol\":6047:6051  this */\n      address\n        /* \"Staking.sol\":6026:6053  BC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":711:762   */\n      mstore\n        /* \"Staking.sol\":6000:6023  uint256 contractBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":6026:6028  BC */\n      and\n      swap1\n        /* \"Staking.sol\":6026:6038  BC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":684:702   */\n      0x24\n      add\n        /* \"Staking.sol\":6026:6053  BC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"Staking.sol\":6000:6053  uint256 contractBalance = BC.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Staking.sol\":6086:6097  totalAmount */\n      dup4\n        /* \"Staking.sol\":6068:6083  contractBalance */\n      dup2\n        /* \"Staking.sol\":6068:6097  contractBalance < totalAmount */\n      lt\n        /* \"Staking.sol\":6064:6155  if (contractBalance < totalAmount) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"Staking.sol\":6128:6143  contractBalance */\n      dup1\n        /* \"Staking.sol\":6114:6143  totalAmount = contractBalance */\n      swap4\n      pop\n        /* \"Staking.sol\":6064:6155  if (contractBalance < totalAmount) {... */\n    tag_299:\n        /* \"Staking.sol\":6185:6200  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":6167:6182  user.checkpoint */\n      0x01\n      dup7\n      dup2\n      add\n        /* \"Staking.sol\":6167:6200  user.checkpoint = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Staking.sol\":6213:6215  BC */\n      sload\n        /* \"Staking.sol\":6213:6249  BC.transfer(msg.sender, totalAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"Staking.sol\":6225:6235  msg.sender */\n      caller\n        /* \"Staking.sol\":6213:6249  BC.transfer(msg.sender, totalAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2819:2870   */\n      mstore\n        /* \"#utility.yul\":2886:2904   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":2879:2913   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":6213:6215  BC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Staking.sol\":6213:6224  BC.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":2792:2810   */\n      0x44\n      add\n        /* \"Staking.sol\":6213:6249  BC.transfer(msg.sender, totalAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_303\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_303:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_304\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_304:\n      pop\n        /* \"Staking.sol\":6279:6293  totalWithdrawn */\n      sload(0x04)\n        /* \"Staking.sol\":6279:6310  totalWithdrawn.add(totalAmount) */\n      tag_306\n      swap1\n        /* \"Staking.sol\":6298:6309  totalAmount */\n      dup6\n        /* \"Staking.sol\":6279:6297  totalWithdrawn.add */\n      tag_198\n        /* \"Staking.sol\":6279:6310  totalWithdrawn.add(totalAmount) */\n      jump\t// in\n    tag_306:\n        /* \"Staking.sol\":6262:6276  totalWithdrawn */\n      0x04\n        /* \"Staking.sol\":6262:6310  totalWithdrawn = totalWithdrawn.add(totalAmount) */\n      sstore\n        /* \"Staking.sol\":6328:6362  Withdrawn(msg.sender, totalAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"Staking.sol\":6338:6348  msg.sender */\n      caller\n      swap1\n        /* \"Staking.sol\":6328:6362  Withdrawn(msg.sender, totalAmount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Staking.sol\":6328:6362  Withdrawn(msg.sender, totalAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":3162:6370  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":3138:6370  function claim() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3390:3411   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3427:3445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3420:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3520   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3466:3484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3459:3521   */\n      mstore\n        /* \"#utility.yul\":3538:3556   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_292\n        /* \"#utility.yul\":3206:3562   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_312:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_316\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Staking.sol\":14299:14656  function getUserTotalDeposits(address userAddress)... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":14443:14461  users[userAddress] */\n      dup2\n      and\n        /* \"Staking.sol\":14398:14405  uint256 */\n      0x00\n        /* \"Staking.sol\":14443:14461  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":14443:14448  users */\n      0x06\n        /* \"Staking.sol\":14443:14461  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Staking.sol\":14398:14405  uint256 */\n      dup2\n      dup1\n        /* \"Staking.sol\":14501:14623  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_319:\n        /* \"Staking.sol\":14525:14545  user.deposits.length */\n      dup3\n      sload\n        /* \"Staking.sol\":14521:14545  i < user.deposits.length */\n      dup2\n      lt\n        /* \"Staking.sol\":14501:14623  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"Staking.sol\":14576:14611  amount.add(user.deposits[i].amount) */\n      tag_322\n        /* \"Staking.sol\":14587:14591  user */\n      dup4\n        /* \"Staking.sol\":14587:14600  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":14601:14602  i */\n      dup3\n        /* \"Staking.sol\":14587:14603  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_324\n      jumpi\n      tag_324\n      tag_132\n      jump\t// in\n    tag_324:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":14587:14610  user.deposits[i].amount */\n      sload\n        /* \"Staking.sol\":14576:14582  amount */\n      dup4\n      swap1\n        /* \"Staking.sol\":14576:14586  amount.add */\n      tag_198\n        /* \"Staking.sol\":14576:14611  amount.add(user.deposits[i].amount) */\n      jump\t// in\n    tag_322:\n        /* \"Staking.sol\":14567:14611  amount = amount.add(user.deposits[i].amount) */\n      swap2\n      pop\n        /* \"Staking.sol\":14547:14550  i++ */\n      dup1\n      tag_326\n      dup2\n      tag_200\n      jump\t// in\n    tag_326:\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":14501:14623  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_319)\n    tag_320:\n      pop\n        /* \"Staking.sol\":14642:14648  amount */\n      swap4\n        /* \"Staking.sol\":14299:14656  function getUserTotalDeposits(address userAddress)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":13054:13560  function isActive(address userAddress) public view returns (bool) {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":13151:13169  users[userAddress] */\n      dup2\n      and\n        /* \"Staking.sol\":13114:13118  bool */\n      0x00\n        /* \"Staking.sol\":13151:13169  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":13151:13156  users */\n      0x06\n        /* \"Staking.sol\":13151:13169  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Staking.sol\":13186:13206  user.deposits.length */\n      dup1\n      sload\n        /* \"Staking.sol\":13186:13210  user.deposits.length > 0 */\n      iszero\n        /* \"Staking.sol\":13182:13553  if (user.deposits.length > 0) {... */\n      tag_341\n      jumpi\n        /* \"Staking.sol\":13332:13352  user.deposits.length */\n      dup1\n      sload\n        /* \"Staking.sol\":13318:13382  user.deposits[user.deposits.length - 1].amount.mul(365).div(100) */\n      tag_330\n      swap1\n        /* \"Staking.sol\":13378:13381  100 */\n      0x64\n      swap1\n        /* \"Staking.sol\":13318:13373  user.deposits[user.deposits.length - 1].amount.mul(365) */\n      tag_151\n      swap1\n        /* \"Staking.sol\":13369:13372  365 */\n      0x016d\n      swap1\n        /* \"Staking.sol\":13318:13322  user */\n      dup6\n      swap1\n        /* \"Staking.sol\":13332:13356  user.deposits.length - 1 */\n      tag_332\n      swap1\n        /* \"Staking.sol\":13355:13356  1 */\n      0x01\n      swap1\n        /* \"Staking.sol\":13332:13356  user.deposits.length - 1 */\n      tag_333\n      jump\t// in\n    tag_332:\n        /* \"Staking.sol\":13318:13357  user.deposits[user.deposits.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":13318:13382  user.deposits[user.deposits.length - 1].amount.mul(365).div(100) */\n    tag_330:\n        /* \"Staking.sol\":13263:13283  user.deposits.length */\n      dup2\n      sload\n        /* \"Staking.sol\":13249:13253  user */\n      dup3\n      swap1\n        /* \"Staking.sol\":13263:13287  user.deposits.length - 1 */\n      tag_337\n      swap1\n        /* \"Staking.sol\":13286:13287  1 */\n      0x01\n      swap1\n        /* \"Staking.sol\":13263:13287  user.deposits.length - 1 */\n      tag_333\n      jump\t// in\n    tag_337:\n        /* \"Staking.sol\":13249:13288  user.deposits[user.deposits.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_339\n      tag_132\n      jump\t// in\n    tag_339:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":13249:13298  user.deposits[user.deposits.length - 1].withdrawn */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":13249:13382  user.deposits[user.deposits.length - 1].withdrawn <... */\n      lt\n        /* \"Staking.sol\":13227:13497  if (... */\n      iszero\n      tag_341\n      jumpi\n      pop\n        /* \"Staking.sol\":13424:13428  true */\n      0x01\n      swap3\n        /* \"Staking.sol\":13054:13560  function isActive(address userAddress) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":13227:13497  if (... */\n    tag_341:\n      pop\n        /* \"Staking.sol\":13476:13481  false */\n      0x00\n      swap3\n        /* \"Staking.sol\":13054:13560  function isActive(address userAddress) public view returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":1693:3130  function stake(address referrer, uint256 amount) public {... */\n    tag_93:\n        /* \"Staking.sol\":1760:1762  BC */\n      sload(0x01)\n        /* \"Staking.sol\":1760:1810  BC.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"Staking.sol\":1776:1786  msg.sender */\n      caller\n        /* \"Staking.sol\":1760:1810  BC.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3937:3971   */\n      mstore\n        /* \"Staking.sol\":1796:1800  this */\n      address\n        /* \"#utility.yul\":3987:4005   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3980:4023   */\n      mstore\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4032:4066   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":1760:1762  BC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"Staking.sol\":1760:1775  BC.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":3872:3890   */\n      0x64\n      add\n        /* \"Staking.sol\":1760:1810  BC.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_305\n      jump\t// in\n    tag_350:\n      pop\n        /* \"Staking.sol\":1849:1859  msg.sender */\n      caller\n        /* \"Staking.sol\":1823:1840  User storage user */\n      0x00\n        /* \"Staking.sol\":1843:1860  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":1843:1848  users */\n      0x06\n        /* \"Staking.sol\":1843:1860  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":1891:1904  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Staking.sol\":1891:1918  user.referrer == address(0) */\n      iszero\n        /* \"Staking.sol\":1891:1970  user.referrer == address(0) &&... */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":1935:1950  users[referrer] */\n      dup4\n      and\n        /* \"Staking.sol\":1969:1970  0 */\n      0x00\n        /* \"Staking.sol\":1935:1950  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":1935:1940  users */\n      0x06\n        /* \"Staking.sol\":1935:1950  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":1935:1966  users[referrer].deposits.length */\n      sload\n        /* \"Staking.sol\":1935:1970  users[referrer].deposits.length > 0 */\n      iszero\n      iszero\n        /* \"Staking.sol\":1891:1970  user.referrer == address(0) &&... */\n    tag_351:\n        /* \"Staking.sol\":1891:2009  user.referrer == address(0) &&... */\n      dup1\n      iszero\n      tag_352\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":1987:2009  referrer != msg.sender */\n      dup4\n      and\n        /* \"Staking.sol\":1999:2009  msg.sender */\n      caller\n        /* \"Staking.sol\":1987:2009  referrer != msg.sender */\n      eq\n      iszero\n        /* \"Staking.sol\":1891:2009  user.referrer == address(0) &&... */\n    tag_352:\n        /* \"Staking.sol\":1873:2072  if (... */\n      iszero\n      tag_353\n      jumpi\n        /* \"Staking.sol\":2036:2049  user.referrer */\n      0x04\n      dup2\n      add\n        /* \"Staking.sol\":2036:2060  user.referrer = referrer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":1873:2072  if (... */\n    tag_353:\n        /* \"Staking.sol\":2088:2101  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Staking.sol\":2088:2115  user.referrer != address(0) */\n      iszero\n        /* \"Staking.sol\":2084:2494  if (user.referrer != address(0)) {... */\n      tag_354\n      jumpi\n        /* \"Staking.sol\":2149:2162  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"Staking.sol\":2183:2203  upline != address(0) */\n      dup1\n      iszero\n        /* \"Staking.sol\":2179:2483  if (upline != address(0)) {... */\n      tag_355\n      jumpi\n        /* \"Staking.sol\":2224:2239  uint256 _amount */\n      0x00\n        /* \"Staking.sol\":2242:2333  amount.mul(REFERRAL_PERCENTS).div(... */\n      tag_356\n        /* \"Staking.sol\":365:369  1000 */\n      0x03e8\n        /* \"Staking.sol\":2242:2271  amount.mul(REFERRAL_PERCENTS) */\n      tag_151\n        /* \"Staking.sol\":2242:2248  amount */\n      dup7\n        /* \"Staking.sol\":470:473  120 */\n      0x78\n        /* \"Staking.sol\":2242:2252  amount.mul */\n      tag_155\n        /* \"Staking.sol\":2242:2271  amount.mul(REFERRAL_PERCENTS) */\n      jump\t// in\n        /* \"Staking.sol\":2242:2333  amount.mul(REFERRAL_PERCENTS).div(... */\n    tag_356:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":2374:2387  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":2374:2379  users */\n      0x06\n        /* \"Staking.sol\":2374:2387  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Staking.sol\":2374:2393  users[upline].bonus */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":2224:2333  uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(... */\n      swap1\n      swap2\n      pop\n        /* \"Staking.sol\":2374:2406  users[upline].bonus.add(_amount) */\n      tag_358\n      swap1\n        /* \"Staking.sol\":2224:2333  uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(... */\n      dup3\n        /* \"Staking.sol\":2374:2397  users[upline].bonus.add */\n      tag_198\n        /* \"Staking.sol\":2374:2406  users[upline].bonus.add(_amount) */\n      jump\t// in\n    tag_358:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":2352:2365  users[upline] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Staking.sol\":2352:2357  users */\n      0x06\n        /* \"Staking.sol\":2352:2365  users[upline] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Staking.sol\":2352:2371  users[upline].bonus */\n      0x02\n      add\n        /* \"Staking.sol\":2352:2406  users[upline].bonus = users[upline].bonus.add(_amount) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Staking.sol\":2430:2467  RefBonus(upline, msg.sender, _amount) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"Staking.sol\":2447:2457  msg.sender */\n      caller\n      swap3\n        /* \"Staking.sol\":2430:2467  RefBonus(upline, msg.sender, _amount) */\n      0x328838ddfc48ad5ae5531b1ad95dfb22b42ff1866853e474375ffef2c63d8e50\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Staking.sol\":2430:2467  RefBonus(upline, msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Staking.sol\":2205:2483  {... */\n      pop\n        /* \"Staking.sol\":2179:2483  if (upline != address(0)) {... */\n    tag_355:\n        /* \"Staking.sol\":2117:2494  {... */\n      pop\n        /* \"Staking.sol\":2084:2494  if (user.referrer != address(0)) {... */\n    tag_354:\n        /* \"Staking.sol\":2510:2530  user.deposits.length */\n      dup1\n      sload\n        /* \"Staking.sol\":2506:2680  if (user.deposits.length == 0) {... */\n      tag_360\n      jumpi\n        /* \"Staking.sol\":2570:2585  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2552:2567  user.checkpoint */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"Staking.sol\":2552:2585  user.checkpoint = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Staking.sol\":2613:2623  totalUsers */\n      sload(0x02)\n        /* \"Staking.sol\":2613:2630  totalUsers.add(1) */\n      tag_361\n      swap2\n        /* \"Staking.sol\":2613:2627  totalUsers.add */\n      tag_198\n        /* \"Staking.sol\":2613:2630  totalUsers.add(1) */\n      jump\t// in\n    tag_361:\n        /* \"Staking.sol\":2600:2610  totalUsers */\n      0x02\n        /* \"Staking.sol\":2600:2630  totalUsers = totalUsers.add(1) */\n      sstore\n        /* \"Staking.sol\":2650:2668  Newbie(msg.sender) */\n      mload(0x40)\n        /* \"Staking.sol\":2657:2667  msg.sender */\n      caller\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"Staking.sol\":2650:2668  Newbie(msg.sender) */\n      0x9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a\n      swap1\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"Staking.sol\":2650:2668  Newbie(msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking.sol\":2506:2680  if (user.deposits.length == 0) {... */\n    tag_360:\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"Staking.sol\":2692:2696  user */\n      dup2\n      swap1\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      dup1\n        /* \"Staking.sol\":2751:2814  amount.sub(amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER)) */\n      tag_363\n        /* \"Staking.sol\":2762:2813  amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER) */\n      tag_364\n        /* \"Staking.sol\":365:369  1000 */\n      0x03e8\n        /* \"Staking.sol\":2762:2791  amount.mul(REFERRAL_PERCENTS) */\n      tag_151\n        /* \"Staking.sol\":2762:2768  amount */\n      dup9\n        /* \"Staking.sol\":470:473  120 */\n      0x78\n        /* \"Staking.sol\":2762:2772  amount.mul */\n      tag_155\n        /* \"Staking.sol\":2762:2791  amount.mul(REFERRAL_PERCENTS) */\n      jump\t// in\n        /* \"Staking.sol\":2762:2813  amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER) */\n    tag_364:\n        /* \"Staking.sol\":2751:2757  amount */\n      dup7\n      swap1\n        /* \"Staking.sol\":2751:2761  amount.sub */\n      tag_149\n        /* \"Staking.sol\":2751:2814  amount.sub(amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER)) */\n      jump\t// in\n    tag_363:\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2833:2834  0 */\n      0x00\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":2853:2868  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":570:578  180 days */\n      0xed4e00\n        /* \"Staking.sol\":2887:2902  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":2887:2919  block.timestamp + STAKING_PERIOD */\n      tag_366\n      swap2\n      swap1\n      tag_367\n      jump\t// in\n    tag_366:\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      dup2\n      mstore\n        /* \"Staking.sol\":2938:2943  false */\n      0x00\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Staking.sol\":2692:2969  user.deposits.push(... */\n      dup4\n      sload\n        /* \"Staking.sol\":2725:2958  Deposit(... */\n      0x01\n        /* \"Staking.sol\":2692:2969  user.deposits.push(... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x05\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Staking.sol\":2996:3007  totalStaked */\n      sload\n        /* \"Staking.sol\":2996:3019  totalStaked.add(amount) */\n      tag_369\n      swap1\n        /* \"Staking.sol\":3012:3018  amount */\n      dup4\n        /* \"Staking.sol\":2996:3011  totalStaked.add */\n      tag_198\n        /* \"Staking.sol\":2996:3019  totalStaked.add(amount) */\n      jump\t// in\n    tag_369:\n        /* \"Staking.sol\":2982:2993  totalStaked */\n      0x03\n        /* \"Staking.sol\":2982:3019  totalStaked = totalStaked.add(amount) */\n      sstore\n        /* \"Staking.sol\":3050:3067  totalDepositCount */\n      sload(0x05)\n        /* \"Staking.sol\":3050:3074  totalDepositCount.add(1) */\n      tag_370\n      swap1\n        /* \"Staking.sol\":3072:3073  1 */\n      0x01\n        /* \"Staking.sol\":3050:3071  totalDepositCount.add */\n      tag_198\n        /* \"Staking.sol\":3050:3074  totalDepositCount.add(1) */\n      jump\t// in\n    tag_370:\n        /* \"Staking.sol\":3030:3047  totalDepositCount */\n      0x05\n        /* \"Staking.sol\":3030:3074  totalDepositCount = totalDepositCount.add(1) */\n      sstore\n        /* \"Staking.sol\":3092:3122  NewDeposit(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup3\n      dup2\n      mstore\n        /* \"Staking.sol\":3103:3113  msg.sender */\n      caller\n      swap1\n        /* \"Staking.sol\":3092:3122  NewDeposit(msg.sender, amount) */\n      0x2cb77763bc1e8490c1a904905c4d74b4269919aca114464f4bb4d911e60de364\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Staking.sol\":3092:3122  NewDeposit(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":1749:3130  {... */\n      pop\n        /* \"Staking.sol\":1693:3130  function stake(address referrer, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":13568:14107  function getUserDepositInfo(address userAddress, uint256 index)... */\n    tag_99:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":13834:13852  users[userAddress] */\n      dup3\n      and\n        /* \"Staking.sol\":13694:13701  uint256 */\n      0x00\n        /* \"Staking.sol\":13834:13852  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":13834:13839  users */\n      0x06\n        /* \"Staking.sol\":13834:13852  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Staking.sol\":13887:13907  user.deposits[index] */\n      dup1\n      sload\n        /* \"Staking.sol\":13694:13701  uint256 */\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"Staking.sol\":13834:13852  users[userAddress] */\n      dup2\n      swap1\n        /* \"Staking.sol\":13901:13906  index */\n      dup9\n      swap1\n        /* \"Staking.sol\":13887:13907  user.deposits[index] */\n      dup2\n      lt\n      tag_374\n      jumpi\n      tag_374\n      tag_132\n      jump\t// in\n    tag_374:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":13887:13914  user.deposits[index].amount */\n      0x00\n      add\n      sload\n        /* \"Staking.sol\":13929:13933  user */\n      dup2\n        /* \"Staking.sol\":13929:13942  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":13943:13948  index */\n      dup9\n        /* \"Staking.sol\":13929:13949  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_377\n      jumpi\n      tag_377\n      tag_132\n      jump\t// in\n    tag_377:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":13929:13959  user.deposits[index].withdrawn */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":13974:13978  user */\n      dup3\n        /* \"Staking.sol\":13974:13987  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":13988:13993  index */\n      dup10\n        /* \"Staking.sol\":13974:13994  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_380\n      jumpi\n      tag_380\n      tag_132\n      jump\t// in\n    tag_380:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":13974:14004  user.deposits[index].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":14019:14023  user */\n      dup4\n        /* \"Staking.sol\":14019:14032  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":14033:14038  index */\n      dup11\n        /* \"Staking.sol\":14019:14039  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_383\n      jumpi\n      tag_383\n      tag_132\n      jump\t// in\n    tag_383:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":14019:14047  user.deposits[index].endTime */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":14062:14066  user */\n      dup5\n        /* \"Staking.sol\":14062:14075  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":14076:14081  index */\n      dup12\n        /* \"Staking.sol\":14062:14082  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_386\n      jumpi\n      tag_386\n      tag_132\n      jump\t// in\n    tag_386:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":14062:14088  user.deposits[index].ended */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":13865:14099  return (... */\n      swap4\n      swap13\n      swap3\n      swap12\n      pop\n      swap1\n      swap10\n      pop\n      swap8\n      pop\n        /* \"Staking.sol\":14062:14088  user.deposits[index].ended */\n      0xff\n      swap1\n      swap2\n      and\n      swap6\n      pop\n        /* \"Staking.sol\":13568:14107  function getUserDepositInfo(address userAddress, uint256 index)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_394\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3408:3410   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3390:3411   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3427:3445   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3420:3450   */\n      mstore\n        /* \"#utility.yul\":3486:3520   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3466:3484   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3459:3521   */\n      mstore\n        /* \"#utility.yul\":3538:3556   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_292\n        /* \"#utility.yul\":3206:3562   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n    tag_394:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_397\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4412:4414   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4394:4415   */\n      mstore\n        /* \"#utility.yul\":4451:4453   */\n      0x26\n        /* \"#utility.yul\":4431:4449   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4424:4454   */\n      mstore\n        /* \"#utility.yul\":4490:4524   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4470:4488   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4463:4525   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4541:4559   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4534:4570   */\n      mstore\n        /* \"#utility.yul\":4587:4606   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_292\n        /* \"#utility.yul\":4210:4612   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_397:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_400\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_317\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_400:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":6378:9640  function compound() public onlyhodler {... */\n    tag_121:\n        /* \"Staking.sol\":1194:1195  0 */\n      0x00\n        /* \"Staking.sol\":1163:1191  getUserDividends(msg.sender) */\n      tag_402\n        /* \"Staking.sol\":1180:1190  msg.sender */\n      caller\n        /* \"Staking.sol\":1163:1179  getUserDividends */\n      tag_44\n        /* \"Staking.sol\":1163:1191  getUserDividends(msg.sender) */\n      jump\t// in\n    tag_402:\n        /* \"Staking.sol\":1163:1195  getUserDividends(msg.sender) > 0 */\n      gt\n        /* \"Staking.sol\":1155:1210  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4819:4821   */\n      0x20\n        /* \"Staking.sol\":1155:1210  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4801:4822   */\n      mstore\n        /* \"#utility.yul\":4858:4860   */\n      0x0a\n        /* \"#utility.yul\":4838:4856   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4831:4861   */\n      mstore\n      shl(0xb1, 0x2737ba102437b63232b9)\n        /* \"#utility.yul\":4877:4895   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4870:4910   */\n      mstore\n        /* \"#utility.yul\":4927:4945   */\n      0x64\n      add\n        /* \"Staking.sol\":1155:1210  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      tag_292\n        /* \"#utility.yul\":4617:4951   */\n      jump\n        /* \"Staking.sol\":1155:1210  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n    tag_403:\n        /* \"Staking.sol\":6453:6463  msg.sender */\n      caller\n        /* \"Staking.sol\":6427:6444  User storage user */\n      0x00\n        /* \"Staking.sol\":6447:6464  users[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"Staking.sol\":6447:6452  users */\n      0x06\n        /* \"Staking.sol\":6447:6464  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap2\n        /* \"Staking.sol\":6524:6552  getUserDividends(msg.sender) */\n      tag_407\n      swap1\n        /* \"Staking.sol\":6524:6540  getUserDividends */\n      tag_44\n        /* \"Staking.sol\":6524:6552  getUserDividends(msg.sender) */\n      jump\t// in\n    tag_407:\n        /* \"Staking.sol\":6503:6552  uint256 _dividends = getUserDividends(msg.sender) */\n      swap1\n      pop\n        /* \"Staking.sol\":6604:6623  uint256 totalAmount */\n      0x00\n        /* \"Staking.sol\":6634:6651  uint256 dividends */\n      dup1\n        /* \"Staking.sol\":6664:6668  user */\n      dup4\n        /* \"Staking.sol\":6664:6677  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":6723:6733  _dividends */\n      dup6\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":6752:6753  0 */\n      0x00\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":6772:6787  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":570:578  180 days */\n      0xed4e00\n        /* \"Staking.sol\":6806:6821  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":6806:6838  block.timestamp + STAKING_PERIOD */\n      tag_408\n      swap2\n      swap1\n      tag_367\n      jump\t// in\n    tag_408:\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      dup2\n      mstore\n        /* \"Staking.sol\":6857:6862  false */\n      0x00\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"Staking.sol\":6664:6888  user.deposits.push(... */\n      dup4\n      sload\n        /* \"Staking.sol\":6697:6877  Deposit(... */\n      0x01\n        /* \"Staking.sol\":6664:6888  user.deposits.push(... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      dup5\n      mload\n      0x05\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":6901:9342  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_410:\n        /* \"Staking.sol\":6925:6945  user.deposits.length */\n      dup5\n      sload\n        /* \"Staking.sol\":6921:6945  i < user.deposits.length */\n      dup2\n      lt\n        /* \"Staking.sol\":6901:9342  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"Staking.sol\":6971:6975  user */\n      dup5\n        /* \"Staking.sol\":6971:6984  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":6985:6986  i */\n      dup2\n        /* \"Staking.sol\":6971:6987  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_414\n      jumpi\n      tag_414\n      tag_132\n      jump\t// in\n    tag_414:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Staking.sol\":6971:6993  user.deposits[i].ended */\n      0x04\n        /* \"Staking.sol\":6971:6987  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"Staking.sol\":6971:6993  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"Staking.sol\":6967:9331  if (user.deposits[i].ended == false) {... */\n      tag_416\n      jumpi\n        /* \"Staking.sol\":7054:7069  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7027:7031  user */\n      dup6\n        /* \"Staking.sol\":7027:7040  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":7041:7042  i */\n      dup3\n        /* \"Staking.sol\":7027:7043  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_418\n      jumpi\n      tag_418\n      tag_132\n      jump\t// in\n    tag_418:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":7027:7051  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"Staking.sol\":7027:7069  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"Staking.sol\":7023:9097  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"Staking.sol\":7127:7131  user */\n      dup5\n        /* \"Staking.sol\":7127:7142  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":7098:7102  user */\n      dup6\n        /* \"Staking.sol\":7098:7111  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":7112:7113  i */\n      dup3\n        /* \"Staking.sol\":7098:7114  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_422\n      jumpi\n      tag_422\n      tag_132\n      jump\t// in\n    tag_422:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":7098:7124  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":7098:7142  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":7094:7963  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_424\n      jumpi\n        /* \"Staking.sol\":7183:7562  (... */\n      tag_425\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":7183:7517  (... */\n      tag_151\n        /* \"Staking.sol\":7439:7486  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_427\n        /* \"Staking.sol\":7459:7463  user */\n      dup9\n        /* \"Staking.sol\":7459:7472  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":7473:7474  i */\n      dup6\n        /* \"Staking.sol\":7459:7475  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_147\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":7439:7486  block.timestamp.sub(user.deposits[i].startTime) */\n    tag_427:\n        /* \"Staking.sol\":7214:7343  user.deposits[i].amount.mul(PERCENTS_DAILY).div(... */\n      tag_150\n        /* \"Staking.sol\":365:369  1000 */\n      0x03e8\n        /* \"Staking.sol\":7214:7257  user.deposits[i].amount.mul(PERCENTS_DAILY) */\n      tag_151\n        /* \"Staking.sol\":417:419  15 */\n      0x0f\n        /* \"Staking.sol\":7214:7218  user */\n      dup13\n        /* \"Staking.sol\":7214:7227  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":7228:7229  i */\n      dup10\n        /* \"Staking.sol\":7214:7230  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_153\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":7183:7562  (... */\n    tag_425:\n        /* \"Staking.sol\":7171:7562  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":7023:9097  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_467)\n        /* \"Staking.sol\":7094:7963  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_424:\n        /* \"Staking.sol\":7631:7939  (... */\n      tag_425\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":7631:7860  (... */\n      tag_151\n        /* \"Staking.sol\":7823:7859  block.timestamp.sub(user.checkpoint) */\n      tag_427\n        /* \"Staking.sol\":7843:7847  user */\n      dup9\n        /* \"Staking.sol\":7843:7858  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":7823:7838  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7823:7842  block.timestamp.sub */\n      tag_149\n      swap1\n        /* \"Staking.sol\":7823:7859  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"Staking.sol\":7023:9097  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_420:\n        /* \"Staking.sol\":8044:8048  user */\n      dup5\n        /* \"Staking.sol\":8044:8059  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":8015:8019  user */\n      dup6\n        /* \"Staking.sol\":8015:8028  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":8029:8030  i */\n      dup3\n        /* \"Staking.sol\":8015:8031  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_447\n      jumpi\n      tag_447\n      tag_132\n      jump\t// in\n    tag_447:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":8015:8041  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":8015:8059  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"Staking.sol\":8011:9078  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_449\n      jumpi\n        /* \"Staking.sol\":8100:8560  (... */\n      tag_450\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":8100:8515  (... */\n      tag_151\n        /* \"Staking.sol\":8356:8484  user.deposits[i].endTime.sub(... */\n      tag_427\n        /* \"Staking.sol\":8423:8427  user */\n      dup9\n        /* \"Staking.sol\":8423:8436  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":8437:8438  i */\n      dup6\n        /* \"Staking.sol\":8423:8439  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_454\n      jumpi\n      tag_454\n      tag_132\n      jump\t// in\n    tag_454:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":8423:8449  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":8356:8360  user */\n      dup10\n        /* \"Staking.sol\":8356:8369  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":8370:8371  i */\n      dup7\n        /* \"Staking.sol\":8356:8372  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":8100:8560  (... */\n    tag_450:\n        /* \"Staking.sol\":8088:8560  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":8612:8616  true */\n      0x01\n        /* \"Staking.sol\":8587:8591  user */\n      dup6\n        /* \"Staking.sol\":8587:8600  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":8601:8602  i */\n      dup3\n        /* \"Staking.sol\":8587:8603  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_465\n      jumpi\n      tag_465\n      tag_132\n      jump\t// in\n    tag_465:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":8587:8609  user.deposits[i].ended */\n      0x04\n      add\n        /* \"Staking.sol\":8587:8616  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":8011:9078  if (user.deposits[i].startTime > user.checkpoint) {... */\n      jump(tag_467)\n    tag_449:\n        /* \"Staking.sol\":8685:8998  (... */\n      tag_468\n        /* \"Staking.sol\":516:522  1 days */\n      0x015180\n        /* \"Staking.sol\":8685:8953  (... */\n      tag_151\n        /* \"Staking.sol\":8907:8952  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_427\n        /* \"Staking.sol\":8936:8940  user */\n      dup9\n        /* \"Staking.sol\":8936:8951  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":8907:8911  user */\n      dup10\n        /* \"Staking.sol\":8907:8920  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":8921:8922  i */\n      dup7\n        /* \"Staking.sol\":8907:8923  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_178\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":8685:8998  (... */\n    tag_468:\n        /* \"Staking.sol\":8673:8998  dividends = (... */\n      swap2\n      pop\n        /* \"Staking.sol\":9050:9054  true */\n      0x01\n        /* \"Staking.sol\":9025:9029  user */\n      dup6\n        /* \"Staking.sol\":9025:9038  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":9039:9040  i */\n      dup3\n        /* \"Staking.sol\":9025:9041  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_480\n      jumpi\n      tag_480\n      tag_132\n      jump\t// in\n    tag_480:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"Staking.sol\":9025:9047  user.deposits[i].ended */\n      0x04\n      add\n        /* \"Staking.sol\":9025:9054  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"Staking.sol\":8011:9078  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_467:\n        /* \"Staking.sol\":9146:9227  user.deposits[i].withdrawn.add(... */\n      tag_482\n        /* \"Staking.sol\":9199:9208  dividends */\n      dup3\n        /* \"Staking.sol\":9146:9150  user */\n      dup7\n        /* \"Staking.sol\":9146:9159  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":9160:9161  i */\n      dup4\n        /* \"Staking.sol\":9146:9162  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_281\n      jumpi\n      tag_281\n      tag_132\n      jump\t// in\n        /* \"Staking.sol\":9146:9227  user.deposits[i].withdrawn.add(... */\n    tag_482:\n        /* \"Staking.sol\":9117:9121  user */\n      dup6\n        /* \"Staking.sol\":9117:9130  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":9131:9132  i */\n      dup3\n        /* \"Staking.sol\":9117:9133  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_487\n      jumpi\n      tag_487\n      tag_132\n      jump\t// in\n    tag_487:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"Staking.sol\":9117:9143  user.deposits[i].withdrawn */\n      0x01\n        /* \"Staking.sol\":9117:9133  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"Staking.sol\":9117:9143  user.deposits[i].withdrawn */\n      add\n        /* \"Staking.sol\":9117:9227  user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(... */\n      sstore\n        /* \"Staking.sol\":9289:9315  totalAmount.add(dividends) */\n      tag_489\n        /* \"Staking.sol\":9289:9300  totalAmount */\n      dup4\n        /* \"Staking.sol\":9305:9314  dividends */\n      dup4\n        /* \"Staking.sol\":9289:9304  totalAmount.add */\n      tag_198\n        /* \"Staking.sol\":9289:9315  totalAmount.add(dividends) */\n      jump\t// in\n    tag_489:\n        /* \"Staking.sol\":9275:9315  totalAmount = totalAmount.add(dividends) */\n      swap3\n      pop\n        /* \"Staking.sol\":6967:9331  if (user.deposits[i].ended == false) {... */\n    tag_416:\n        /* \"Staking.sol\":6947:6950  i++ */\n      dup1\n      tag_490\n      dup2\n      tag_200\n      jump\t// in\n    tag_490:\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":6901:9342  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_410)\n    tag_411:\n      pop\n        /* \"Staking.sol\":9372:9387  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":9354:9369  user.checkpoint */\n      0x01\n      dup6\n      add\n        /* \"Staking.sol\":9354:9387  user.checkpoint = block.timestamp */\n      sstore\n        /* \"Staking.sol\":9414:9425  totalStaked */\n      sload(0x03)\n        /* \"Staking.sol\":9414:9441  totalStaked.add(_dividends) */\n      tag_491\n      swap1\n        /* \"Staking.sol\":9430:9440  _dividends */\n      dup5\n        /* \"Staking.sol\":9414:9429  totalStaked.add */\n      tag_198\n        /* \"Staking.sol\":9414:9441  totalStaked.add(_dividends) */\n      jump\t// in\n    tag_491:\n        /* \"Staking.sol\":9400:9411  totalStaked */\n      0x03\n        /* \"Staking.sol\":9400:9441  totalStaked = totalStaked.add(_dividends) */\n      sstore\n        /* \"Staking.sol\":9472:9489  totalDepositCount */\n      sload(0x05)\n        /* \"Staking.sol\":9472:9496  totalDepositCount.add(1) */\n      tag_492\n      swap1\n        /* \"Staking.sol\":9494:9495  1 */\n      0x01\n        /* \"Staking.sol\":9472:9493  totalDepositCount.add */\n      tag_198\n        /* \"Staking.sol\":9472:9496  totalDepositCount.add(1) */\n      jump\t// in\n    tag_492:\n        /* \"Staking.sol\":9452:9469  totalDepositCount */\n      0x05\n        /* \"Staking.sol\":9452:9496  totalDepositCount = totalDepositCount.add(1) */\n      sstore\n        /* \"Staking.sol\":9524:9538  totalWithdrawn */\n      sload(0x04)\n        /* \"Staking.sol\":9524:9555  totalWithdrawn.add(totalAmount) */\n      tag_493\n      swap1\n        /* \"Staking.sol\":9543:9554  totalAmount */\n      dup4\n        /* \"Staking.sol\":9524:9542  totalWithdrawn.add */\n      tag_198\n        /* \"Staking.sol\":9524:9555  totalWithdrawn.add(totalAmount) */\n      jump\t// in\n    tag_493:\n        /* \"Staking.sol\":9507:9521  totalWithdrawn */\n      0x04\n        /* \"Staking.sol\":9507:9555  totalWithdrawn = totalWithdrawn.add(totalAmount) */\n      sstore\n        /* \"Staking.sol\":9594:9632  onReinvestment(msg.sender, _dividends) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"Staking.sol\":9609:9619  msg.sender */\n      caller\n      swap1\n        /* \"Staking.sol\":9594:9632  onReinvestment(msg.sender, _dividends) */\n      0x5d511c2070e5a2dbcc6fbfbb3fd6704a11ab5fa74b793b81aacece2c7cc29405\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"Staking.sol\":9594:9632  onReinvestment(msg.sender, _dividends) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":6416:9640  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":6378:9640  function compound() public onlyhodler {... */\n      jump\t// out\n        /* \"Staking.sol\":14664:15025  function getUserTotalWithdrawn(address userAddress)... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Staking.sol\":14809:14827  users[userAddress] */\n      dup2\n      and\n        /* \"Staking.sol\":14764:14771  uint256 */\n      0x00\n        /* \"Staking.sol\":14809:14827  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"Staking.sol\":14809:14814  users */\n      0x06\n        /* \"Staking.sol\":14809:14827  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Staking.sol\":14764:14771  uint256 */\n      dup2\n      dup1\n        /* \"Staking.sol\":14867:14992  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_496:\n        /* \"Staking.sol\":14891:14911  user.deposits.length */\n      dup3\n      sload\n        /* \"Staking.sol\":14887:14911  i < user.deposits.length */\n      dup2\n      lt\n        /* \"Staking.sol\":14867:14992  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_320\n      jumpi\n        /* \"Staking.sol\":14942:14980  amount.add(user.deposits[i].withdrawn) */\n      tag_499\n        /* \"Staking.sol\":14953:14957  user */\n      dup4\n        /* \"Staking.sol\":14953:14966  user.deposits */\n      0x00\n      add\n        /* \"Staking.sol\":14967:14968  i */\n      dup3\n        /* \"Staking.sol\":14953:14969  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_501\n      jumpi\n      tag_501\n      tag_132\n      jump\t// in\n    tag_501:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":14953:14979  user.deposits[i].withdrawn */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":14942:14948  amount */\n      dup4\n        /* \"Staking.sol\":14942:14952  amount.add */\n      tag_198\n      swap1\n        /* \"Staking.sol\":14942:14980  amount.add(user.deposits[i].withdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_499:\n        /* \"Staking.sol\":14933:14980  amount = amount.add(user.deposits[i].withdrawn) */\n      swap2\n      pop\n        /* \"Staking.sol\":14913:14916  i++ */\n      dup1\n      tag_503\n      dup2\n      tag_200\n      jump\t// in\n    tag_503:\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":14867:14992  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_496)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_333\n      jump\t// in\n    tag_505:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_508\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_511\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_505\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_367\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_317:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:369   */\n    tag_516:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_521\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_521:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_43:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_523:\n        /* \"#utility.yul\":525:554   */\n      tag_505\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_516\n      jump\t// in\n        /* \"#utility.yul\":965:1219   */\n    tag_92:\n        /* \"#utility.yul\":1033:1039   */\n      0x00\n        /* \"#utility.yul\":1041:1047   */\n      dup1\n        /* \"#utility.yul\":1094:1096   */\n      0x40\n        /* \"#utility.yul\":1082:1091   */\n      dup4\n        /* \"#utility.yul\":1073:1080   */\n      dup6\n        /* \"#utility.yul\":1069:1092   */\n      sub\n        /* \"#utility.yul\":1065:1097   */\n      slt\n        /* \"#utility.yul\":1062:1114   */\n      iszero\n      tag_528\n      jumpi\n        /* \"#utility.yul\":1110:1111   */\n      0x00\n        /* \"#utility.yul\":1107:1108   */\n      dup1\n        /* \"#utility.yul\":1100:1112   */\n      revert\n        /* \"#utility.yul\":1062:1114   */\n    tag_528:\n        /* \"#utility.yul\":1133:1162   */\n      tag_529\n        /* \"#utility.yul\":1152:1161   */\n      dup4\n        /* \"#utility.yul\":1133:1162   */\n      tag_516\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":1123:1162   */\n      swap5\n        /* \"#utility.yul\":1209:1211   */\n      0x20\n        /* \"#utility.yul\":1194:1212   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1181:1213   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":965:1219   */\n      jump\t// out\n        /* \"#utility.yul\":1702:1829   */\n    tag_132:\n        /* \"#utility.yul\":1763:1773   */\n      0x4e487b71\n        /* \"#utility.yul\":1758:1761   */\n      0xe0\n        /* \"#utility.yul\":1754:1774   */\n      shl\n        /* \"#utility.yul\":1751:1752   */\n      0x00\n        /* \"#utility.yul\":1744:1775   */\n      mstore\n        /* \"#utility.yul\":1794:1798   */\n      0x32\n        /* \"#utility.yul\":1791:1792   */\n      0x04\n        /* \"#utility.yul\":1784:1799   */\n      mstore\n        /* \"#utility.yul\":1818:1822   */\n      0x24\n        /* \"#utility.yul\":1815:1816   */\n      0x00\n        /* \"#utility.yul\":1808:1823   */\n      revert\n        /* \"#utility.yul\":1834:1961   */\n    tag_517:\n        /* \"#utility.yul\":1895:1905   */\n      0x4e487b71\n        /* \"#utility.yul\":1890:1893   */\n      0xe0\n        /* \"#utility.yul\":1886:1906   */\n      shl\n        /* \"#utility.yul\":1883:1884   */\n      0x00\n        /* \"#utility.yul\":1876:1907   */\n      mstore\n        /* \"#utility.yul\":1926:1930   */\n      0x11\n        /* \"#utility.yul\":1923:1924   */\n      0x04\n        /* \"#utility.yul\":1916:1931   */\n      mstore\n        /* \"#utility.yul\":1950:1954   */\n      0x24\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1940:1955   */\n      revert\n        /* \"#utility.yul\":1966:2101   */\n    tag_200:\n        /* \"#utility.yul\":2005:2008   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":2026:2043   */\n      dup3\n      eq\n        /* \"#utility.yul\":2023:2066   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":2046:2064   */\n      tag_535\n      tag_517\n      jump\t// in\n    tag_535:\n      pop\n        /* \"#utility.yul\":2093:2094   */\n      0x01\n        /* \"#utility.yul\":2082:2095   */\n      add\n      swap1\n        /* \"#utility.yul\":1966:2101   */\n      jump\t// out\n        /* \"#utility.yul\":2456:2640   */\n    tag_298:\n        /* \"#utility.yul\":2526:2532   */\n      0x00\n        /* \"#utility.yul\":2579:2581   */\n      0x20\n        /* \"#utility.yul\":2567:2576   */\n      dup3\n        /* \"#utility.yul\":2558:2565   */\n      dup5\n        /* \"#utility.yul\":2554:2577   */\n      sub\n        /* \"#utility.yul\":2550:2582   */\n      slt\n        /* \"#utility.yul\":2547:2599   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":2595:2596   */\n      0x00\n        /* \"#utility.yul\":2592:2593   */\n      dup1\n        /* \"#utility.yul\":2585:2597   */\n      revert\n        /* \"#utility.yul\":2547:2599   */\n    tag_538:\n      pop\n        /* \"#utility.yul\":2618:2634   */\n      mload\n      swap2\n        /* \"#utility.yul\":2456:2640   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2924:3201   */\n    tag_305:\n        /* \"#utility.yul\":2991:2997   */\n      0x00\n        /* \"#utility.yul\":3044:3046   */\n      0x20\n        /* \"#utility.yul\":3032:3041   */\n      dup3\n        /* \"#utility.yul\":3023:3030   */\n      dup5\n        /* \"#utility.yul\":3019:3042   */\n      sub\n        /* \"#utility.yul\":3015:3047   */\n      slt\n        /* \"#utility.yul\":3012:3064   */\n      iszero\n      tag_541\n      jumpi\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3057:3058   */\n      dup1\n        /* \"#utility.yul\":3050:3062   */\n      revert\n        /* \"#utility.yul\":3012:3064   */\n    tag_541:\n        /* \"#utility.yul\":3092:3101   */\n      dup2\n        /* \"#utility.yul\":3086:3102   */\n      mload\n        /* \"#utility.yul\":3145:3150   */\n      dup1\n        /* \"#utility.yul\":3138:3151   */\n      iszero\n        /* \"#utility.yul\":3131:3152   */\n      iszero\n        /* \"#utility.yul\":3124:3129   */\n      dup2\n        /* \"#utility.yul\":3121:3153   */\n      eq\n        /* \"#utility.yul\":3111:3171   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":3167:3168   */\n      0x00\n        /* \"#utility.yul\":3164:3165   */\n      dup1\n        /* \"#utility.yul\":3157:3169   */\n      revert\n        /* \"#utility.yul\":3567:3692   */\n    tag_333:\n        /* \"#utility.yul\":3607:3611   */\n      0x00\n        /* \"#utility.yul\":3635:3636   */\n      dup3\n        /* \"#utility.yul\":3632:3633   */\n      dup3\n        /* \"#utility.yul\":3629:3637   */\n      lt\n        /* \"#utility.yul\":3626:3660   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":3640:3658   */\n      tag_546\n      tag_517\n      jump\t// in\n    tag_546:\n      pop\n        /* \"#utility.yul\":3677:3686   */\n      sub\n      swap1\n        /* \"#utility.yul\":3567:3692   */\n      jump\t// out\n        /* \"#utility.yul\":4077:4205   */\n    tag_367:\n        /* \"#utility.yul\":4117:4120   */\n      0x00\n        /* \"#utility.yul\":4148:4149   */\n      dup3\n        /* \"#utility.yul\":4144:4150   */\n      not\n        /* \"#utility.yul\":4141:4142   */\n      dup3\n        /* \"#utility.yul\":4138:4151   */\n      gt\n        /* \"#utility.yul\":4135:4174   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":4154:4172   */\n      tag_550\n      tag_517\n      jump\t// in\n    tag_550:\n      pop\n        /* \"#utility.yul\":4190:4199   */\n      add\n      swap1\n        /* \"#utility.yul\":4077:4205   */\n      jump\t// out\n        /* \"#utility.yul\":4956:5124   */\n    tag_508:\n        /* \"#utility.yul\":4996:5003   */\n      0x00\n        /* \"#utility.yul\":5062:5063   */\n      dup2\n        /* \"#utility.yul\":5058:5059   */\n      0x00\n        /* \"#utility.yul\":5054:5060   */\n      not\n        /* \"#utility.yul\":5050:5064   */\n      div\n        /* \"#utility.yul\":5047:5048   */\n      dup4\n        /* \"#utility.yul\":5044:5065   */\n      gt\n        /* \"#utility.yul\":5039:5040   */\n      dup3\n        /* \"#utility.yul\":5032:5041   */\n      iszero\n        /* \"#utility.yul\":5025:5042   */\n      iszero\n        /* \"#utility.yul\":5021:5066   */\n      and\n        /* \"#utility.yul\":5018:5089   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":5069:5087   */\n      tag_555\n      tag_517\n      jump\t// in\n    tag_555:\n      pop\n        /* \"#utility.yul\":5109:5118   */\n      mul\n      swap1\n        /* \"#utility.yul\":4956:5124   */\n      jump\t// out\n        /* \"#utility.yul\":5129:5346   */\n    tag_511:\n        /* \"#utility.yul\":5169:5170   */\n      0x00\n        /* \"#utility.yul\":5195:5196   */\n      dup3\n        /* \"#utility.yul\":5185:5317   */\n      tag_557\n      jumpi\n        /* \"#utility.yul\":5239:5249   */\n      0x4e487b71\n        /* \"#utility.yul\":5234:5237   */\n      0xe0\n        /* \"#utility.yul\":5230:5250   */\n      shl\n        /* \"#utility.yul\":5227:5228   */\n      0x00\n        /* \"#utility.yul\":5220:5251   */\n      mstore\n        /* \"#utility.yul\":5274:5278   */\n      0x12\n        /* \"#utility.yul\":5271:5272   */\n      0x04\n        /* \"#utility.yul\":5264:5279   */\n      mstore\n        /* \"#utility.yul\":5302:5306   */\n      0x24\n        /* \"#utility.yul\":5299:5300   */\n      0x00\n        /* \"#utility.yul\":5292:5307   */\n      revert\n        /* \"#utility.yul\":5185:5317   */\n    tag_557:\n      pop\n        /* \"#utility.yul\":5331:5340   */\n      div\n      swap1\n        /* \"#utility.yul\":5129:5346   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204a501c743942ebc3c52ef32a53f950339d647de5269cfafea43d131cc1a7c7e464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1247": {
									"entryPoint": null,
									"id": 1247,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 93,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_ERC20_$690_fromMemory": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:319:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "108:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "154:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "163:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "156:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "156:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "156:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "129:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "150:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "121:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:32:7"
															},
															"nodeType": "YulIf",
															"src": "118:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "179:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "192:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "192:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "183:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "271:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "280:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "256:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "261:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "252:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "252:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "265:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "237:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "227:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:50:7"
															},
															"nodeType": "YulIf",
															"src": "217:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "296:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "306:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$690_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "74:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "85:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "97:6:7",
														"type": ""
													}
												],
												"src": "14:303:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$690_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161183338038061183383398101604081905261002f916100ad565b6100383361005d565b600180546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b611747806100ec6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80638da5cb5b116100de578063c8a22eb411610097578063e85abe0911610071578063e85abe091461038e578063f2fde38b146103ba578063f69e2046146103cd578063fb4cb32b146103d557600080fd5b8063c8a22eb41461032d578063d634386714610359578063d7ffca911461036257600080fd5b80638da5cb5b146102775780639f8a13d714610288578063a8aeb6c2146102ab578063adc9772e146102d4578063bff1f9e1146102e7578063c0806b03146102f057600080fd5b806336144c9a1161014b5780634e71d92d116101255780634e71d92d14610249578063715018a6146102535780637e3abeea1461025b578063817b1cd21461026e57600080fd5b806336144c9a146101f157806344038f90146102385780634b3197131461024057600080fd5b80630104db1b1461019357806301c234a8146101b0578063040a772e146101b9578063141a2a3f146101cc578063153ab9df146101d457806332bc298c146101e7575b600080fd5b61019d62ed4e0081565b6040519081526020015b60405180910390f35b61019d6103e881565b61019d6101c73660046115da565b6103e8565b61019d600f81565b61019d6101e23660046115da565b610639565b61019d6201518081565b6102206101ff3660046115da565b6001600160a01b039081166000908152600660205260409020600401541690565b6040516001600160a01b0390911681526020016101a7565b61019d607881565b61019d60045481565b61025161066f565b005b610251610a9d565b61019d6102693660046115da565b610b03565b61019d60035481565b6000546001600160a01b0316610220565b61029b6102963660046115da565b610b73565b60405190151581526020016101a7565b61019d6102b93660046115da565b6001600160a01b031660009081526006602052604090205490565b6102516102e23660046115f5565b610c0b565b61019d60025481565b6103036102fe3660046115f5565b610f16565b6040805195865260208601949094529284019190915260608301521515608082015260a0016101a7565b61019d61033b3660046115da565b6001600160a01b031660009081526006602052604090206003015490565b61019d60055481565b61019d6103703660046115da565b6001600160a01b031660009081526006602052604090206001015490565b61019d61039c3660046115da565b6001600160a01b031660009081526006602052604090206002015490565b6102516103c83660046115da565b611012565b6102516110dd565b61019d6103e33660046115da565b6114c6565b6001600160a01b03811660009081526006602052604081208180805b835481101561062f578360000181815481106104225761042261161f565b600091825260209091206004600590920201015460ff1661061d57428460000182815481106104535761045361161f565b906000526020600020906005020160030154111561054b5783600101548460000182815481106104855761048561161f565b906000526020600020906005020160020154111561052a57610523620151806105176104e08760000185815481106104bf576104bf61161f565b9060005260206000209060050201600201544261153790919063ffffffff16565b61051d6103e8610517600f8b60000189815481106105005761050061161f565b60009182526020909120600590910201549061154a565b90611556565b9061154a565b9150610610565b610523620151806105176104e087600101544261153790919063ffffffff16565b83600101548460000182815481106105655761056561161f565b90600052602060002090600502016002015411156105e657610523620151806105176104e087600001858154811061059f5761059f61161f565b9060005260206000209060050201600201548860000186815481106105c6576105c661161f565b90600052602060002090600502016003015461153790919063ffffffff16565b61060d620151806105176104e087600101548860000186815481106105c6576105c661161f565b91505b61061a8383611562565b92505b806106278161164b565b915050610404565b5090949350505050565b6000610669610647836103e8565b6001600160a01b03841660009081526006602052604090206002015490611562565b92915050565b3360009081526006602052604081209080805b83548110156108dd578360000181815481106106a0576106a061161f565b600091825260209091206004600590920201015460ff166108cb57428460000182815481106106d1576106d161161f565b90600052602060002090600502016003015411156107655783600101548460000182815481106107035761070361161f565b90600052602060002090600502016002015411156107445761073d620151806105176104e08760000185815481106104bf576104bf61161f565b915061085c565b61073d620151806105176104e087600101544261153790919063ffffffff16565b836001015484600001828154811061077f5761077f61161f565b90600052602060002090600502016002015411156107f9576107b9620151806105176104e087600001858154811061059f5761059f61161f565b915060018460000182815481106107d2576107d261161f565b60009182526020909120600590910201600401805460ff191691151591909117905561085c565b610820620151806105176104e087600101548860000186815481106105c6576105c661161f565b915060018460000182815481106108395761083961161f565b60009182526020909120600590910201600401805460ff19169115159190911790555b610895828560000183815481106108755761087561161f565b90600052602060002090600502016001015461156290919063ffffffff16565b8460000182815481106108aa576108aa61161f565b60009182526020909120600160059092020101556108c88383611562565b92505b806108d58161164b565b915050610682565b5033600090815260066020526040902060020154801561090b576109018382611562565b6000600286015592505b600083116109585760405162461bcd60e51b81526020600482015260156024820152745573657220686173206e6f206469766964656e647360581b60448201526064015b60405180910390fd5b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190611666565b9050838110156109d3578093505b426001868101919091555460405163a9059cbb60e01b8152336004820152602481018690526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610a2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a50919061167f565b50600454610a5e9085611562565b60045560405184815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a25050505050565b6000546001600160a01b03163314610af75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161094f565b610b01600061156e565b565b6001600160a01b038116600090815260066020526040812081805b8254811015610b6b57610b57836000018281548110610b3f57610b3f61161f565b60009182526020909120600590910201548390611562565b915080610b638161164b565b915050610b1e565b509392505050565b6001600160a01b0381166000908152600660205260408120805415610c02578054610bc1906064906105179061016d908590610bb1906001906116a1565b815481106105005761050061161f565b81548290610bd1906001906116a1565b81548110610be157610be161161f565b9060005260206000209060050201600101541015610c025750600192915050565b50600092915050565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610c62573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c86919061167f565b5033600090815260066020526040902060048101546001600160a01b0316158015610cc857506001600160a01b03831660009081526006602052604090205415155b8015610cdd57506001600160a01b0383163314155b15610d00576004810180546001600160a01b0319166001600160a01b0385161790555b60048101546001600160a01b031615610dbb5760048101546001600160a01b03168015610db9576000610d3a6103e861051786607861154a565b6001600160a01b038316600090815260066020526040902060020154909150610d639082611562565b6001600160a01b038316600081815260066020908152604091829020600201939093555183815233927f328838ddfc48ad5ae5531b1ad95dfb22b42ff1866853e474375ffef2c63d8e50910160405180910390a3505b505b8054610e0e5742600180830191909155600254610dd791611562565b6002556040513381527f9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a9060200160405180910390a15b6040805160a08101909152819080610e37610e306103e861051788607861154a565b8690611537565b81526020016000815260200142815260200162ed4e0042610e5891906116b8565b81526000602091820181905283546001808201865594825290829020835160059092020190815590820151928101929092556040810151600283015560608101516003808401919091556080909101516004909201805460ff19169215159290921790915554610ec89083611562565b600355600554610ed9906001611562565b60055560405182815233907f2cb77763bc1e8490c1a904905c4d74b4269919aca114464f4bb4d911e60de3649060200160405180910390a2505050565b6001600160a01b038216600090815260066020526040812080548291829182918291819088908110610f4a57610f4a61161f565b906000526020600020906005020160000154816000018881548110610f7157610f7161161f565b906000526020600020906005020160010154826000018981548110610f9857610f9861161f565b906000526020600020906005020160020154836000018a81548110610fbf57610fbf61161f565b906000526020600020906005020160030154846000018b81548110610fe657610fe661161f565b6000918252602090912060059091020160040154939c929b50909950975060ff90911695509350505050565b6000546001600160a01b0316331461106c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161094f565b6001600160a01b0381166110d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161094f565b6110da8161156e565b50565b60006110e8336103e8565b116111225760405162461bcd60e51b815260206004820152600a6024820152692737ba102437b63232b960b11b604482015260640161094f565b3360008181526006602052604081209161113b906103e8565b9050600080836000016040518060a001604052808581526020016000815260200142815260200162ed4e004261117191906116b8565b8152600060209182018190528354600180820186559482528282208451600590920201908155918301519382019390935560408201516002820155606082015160038201556080909101516004909101805460ff19169115159190911790555b8454811015611453578460000181815481106111ef576111ef61161f565b600091825260209091206004600590920201015460ff1661144157428560000182815481106112205761122061161f565b90600052602060002090600502016003015411156112d45784600101548560000182815481106112525761125261161f565b90600052602060002090600502016002015411156112b3576112ac6201518061051761128c8860000185815481106104bf576104bf61161f565b61051d6103e8610517600f8c60000189815481106105005761050061161f565b91506113f2565b6112ac6201518061051761128c88600101544261153790919063ffffffff16565b84600101548560000182815481106112ee576112ee61161f565b906000526020600020906005020160020154111561138f5761134f6201518061051761128c8860000185815481106113285761132861161f565b9060005260206000209060050201600201548960000186815481106105c6576105c661161f565b915060018560000182815481106113685761136861161f565b60009182526020909120600590910201600401805460ff19169115159190911790556113f2565b6113b66201518061051761128c88600101548960000186815481106105c6576105c661161f565b915060018560000182815481106113cf576113cf61161f565b60009182526020909120600590910201600401805460ff19169115159190911790555b61140b828660000183815481106108755761087561161f565b8560000182815481106114205761142061161f565b600091825260209091206001600590920201015561143e8383611562565b92505b8061144b8161164b565b9150506111d1565b504260018501556003546114679084611562565b600355600554611478906001611562565b6005556004546114889083611562565b60045560405183815233907f5d511c2070e5a2dbcc6fbfbb3fd6704a11ab5fa74b793b81aacece2c7cc294059060200160405180910390a250505050565b6001600160a01b038116600090815260066020526040812081805b8254811015610b6b576115238360000182815481106115025761150261161f565b9060005260206000209060050201600101548361156290919063ffffffff16565b91508061152f8161164b565b9150506114e1565b600061154382846116a1565b9392505050565b600061154382846116d0565b600061154382846116ef565b600061154382846116b8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146115d557600080fd5b919050565b6000602082840312156115ec57600080fd5b611543826115be565b6000806040838503121561160857600080fd5b611611836115be565b946020939093013593505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561165f5761165f611635565b5060010190565b60006020828403121561167857600080fd5b5051919050565b60006020828403121561169157600080fd5b8151801515811461154357600080fd5b6000828210156116b3576116b3611635565b500390565b600082198211156116cb576116cb611635565b500190565b60008160001904831182151516156116ea576116ea611635565b500290565b60008261170c57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212204a501c743942ebc3c52ef32a53f950339d647de5269cfafea43d131cc1a7c7e464736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1833 CODESIZE SUB DUP1 PUSH2 0x1833 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xAD JUMP JUMPDEST PUSH2 0x38 CALLER PUSH2 0x5D JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xDD JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1747 DUP1 PUSH2 0xEC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC8A22EB4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE85ABE09 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xFB4CB32B EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8A22EB4 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD6343867 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4E71D92D GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x44038F90 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x4B319713 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x104DB1B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x141A2A3F EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x19D PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH2 0x19D PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x19D PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x19D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x19D PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x62F JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x61D JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x453 JUMPI PUSH2 0x453 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x54B JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x485 JUMPI PUSH2 0x485 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x51D PUSH2 0x3E8 PUSH2 0x517 PUSH1 0xF DUP12 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP2 POP PUSH2 0x610 JUMP JUMPDEST PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x565 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x60D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x61A DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x627 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x404 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 PUSH2 0x647 DUP4 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6A0 JUMPI PUSH2 0x6A0 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x8CB JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D1 JUMPI PUSH2 0x6D1 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x765 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x703 JUMPI PUSH2 0x703 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x744 JUMPI PUSH2 0x73D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH2 0x85C JUMP JUMPDEST PUSH2 0x73D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x7F9 JUMPI PUSH2 0x7B9 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7D2 JUMPI PUSH2 0x7D2 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x85C JUMP JUMPDEST PUSH2 0x820 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x839 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x895 DUP3 DUP6 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1562 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x8C8 DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x8D5 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x682 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH2 0x901 DUP4 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 ADD SSTORE SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xA5E SWAP1 DUP6 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST PUSH2 0xB01 PUSH1 0x0 PUSH2 0x156E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB57 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB3F JUMPI PUSH2 0xB3F PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP4 SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xB63 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB1E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xC02 JUMPI DUP1 SLOAD PUSH2 0xBC1 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x517 SWAP1 PUSH2 0x16D SWAP1 DUP6 SWAP1 PUSH2 0xBB1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 PUSH2 0xBD1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBE1 JUMPI PUSH2 0xBE1 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xC02 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xD00 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xDBB JUMPI PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x0 PUSH2 0xD3A PUSH2 0x3E8 PUSH2 0x517 DUP7 PUSH1 0x78 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xD63 SWAP1 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 PUSH32 0x328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0xE0E JUMPI TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xDD7 SWAP2 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP1 PUSH2 0xE37 PUSH2 0xE30 PUSH2 0x3E8 PUSH2 0x517 DUP9 PUSH1 0x78 PUSH2 0x154A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1537 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0xEC8 SWAP1 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0xED9 SWAP1 PUSH1 0x1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0xF4A JUMPI PUSH2 0xF4A PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xF71 JUMPI PUSH2 0xF71 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP11 DUP2 SLOAD DUP2 LT PUSH2 0xFBF JUMPI PUSH2 0xFBF PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0xFE6 JUMPI PUSH2 0xFE6 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD SLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x10DA DUP2 PUSH2 0x156E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E8 CALLER PUSH2 0x3E8 JUMP JUMPDEST GT PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102437B63232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x113B SWAP1 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE DUP3 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x1453 JUMPI DUP5 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11EF JUMPI PUSH2 0x11EF PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x1441 JUMPI TIMESTAMP DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1220 JUMPI PUSH2 0x1220 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x12D4 JUMPI DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1252 JUMPI PUSH2 0x1252 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12AC PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST PUSH2 0x51D PUSH2 0x3E8 PUSH2 0x517 PUSH1 0xF DUP13 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x12AC PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12EE JUMPI PUSH2 0x12EE PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x138F JUMPI PUSH2 0x134F PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1328 JUMPI PUSH2 0x1328 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP10 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1368 JUMPI PUSH2 0x1368 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x13B6 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x1 ADD SLOAD DUP10 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13CF JUMPI PUSH2 0x13CF PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x140B DUP3 DUP7 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x161F JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1420 JUMPI PUSH2 0x1420 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x143E DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x144B DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11D1 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x1467 SWAP1 DUP5 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1478 SWAP1 PUSH1 0x1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1488 SWAP1 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0x1523 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1502 JUMPI PUSH2 0x1502 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x1562 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x152F DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1543 DUP3 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1611 DUP4 PUSH2 0x15BE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x165F JUMPI PUSH2 0x165F PUSH2 0x1635 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x1635 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CB PUSH2 0x1635 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16EA PUSH2 0x1635 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x170C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A POP SHR PUSH21 0x3942EBC3C52EF32A53F950339D647DE5269CFAFEA4 RETURNDATASIZE SGT SHR 0xC1 0xA7 0xC7 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "241:14787:6:-:0;;;1590:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;1666:2:6;:11;;-1:-1:-1;;;;;;1666:11:6;-1:-1:-1;;;;;1666:11:6;;;;;;;;;;241:14787;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:303:7:-;97:6;150:2;138:9;129:7;125:23;121:32;118:52;;;166:1;163;156:12;118:52;192:16;;-1:-1:-1;;;;;237:31:7;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;14:303;-1:-1:-1;;;14:303:7:o;:::-;241:14787:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PERCENTS_DAILY_1143": {
									"entryPoint": null,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PERCENTS_DIVIDER_1140": {
									"entryPoint": null,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REFERRAL_PERCENTS_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STAKING_PERIOD_1152": {
									"entryPoint": null,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TIME_STEP_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 5486,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_991": {
									"entryPoint": 5474,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_1738": {
									"entryPoint": 1647,
									"id": 1738,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@compound_2030": {
									"entryPoint": 4317,
									"id": 2030,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1036": {
									"entryPoint": 5462,
									"id": 1036,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserAmountOfDeposits_2424": {
									"entryPoint": null,
									"id": 2424,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserAvailable_2301": {
									"entryPoint": 1593,
									"id": 2301,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserCheckpoint_2284": {
									"entryPoint": null,
									"id": 2284,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserDepositInfo_2410": {
									"entryPoint": 3862,
									"id": 2410,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"@getUserDividends_2232": {
									"entryPoint": 1000,
									"id": 2232,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferralBonus_2245": {
									"entryPoint": null,
									"id": 2245,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferralCount_2258": {
									"entryPoint": null,
									"id": 2258,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferrer_2271": {
									"entryPoint": null,
									"id": 2271,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserTotalDeposits_2469": {
									"entryPoint": 2819,
									"id": 2469,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserTotalWithdrawn_2514": {
									"entryPoint": 5318,
									"id": 2514,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isActive_2358": {
									"entryPoint": 2931,
									"id": 2358,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1021": {
									"entryPoint": 5450,
									"id": 1021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2717,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1428": {
									"entryPoint": 3083,
									"id": 1428,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1006": {
									"entryPoint": 5431,
									"id": 1006,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalDepositCount_1163": {
									"entryPoint": null,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalUsers_1157": {
									"entryPoint": null,
									"id": 1157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalWithdrawn_1161": {
									"entryPoint": null,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4114,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5871,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5663,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5348:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "347:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "356:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "359:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "332:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "337:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "341:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "296:50:7"
															},
															"nodeType": "YulIf",
															"src": "293:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "224:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "235:5:7",
														"type": ""
													}
												],
												"src": "196:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "490:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "486:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:32:7"
															},
															"nodeType": "YulIf",
															"src": "454:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "515:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "410:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "421:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "433:6:7",
														"type": ""
													}
												],
												"src": "374:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "688:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "699:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "676:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "749:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "754:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "745:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "745:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "711:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "635:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "646:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "657:4:7",
														"type": ""
													}
												],
												"src": "565:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "868:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "878:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "890:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "886:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "886:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "878:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "945:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "938:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "938:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "931:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "931:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "913:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "913:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "837:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "848:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "859:4:7",
														"type": ""
													}
												],
												"src": "773:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1052:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1098:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1107:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1110:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1100:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1100:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1100:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1073:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1082:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1069:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1065:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1065:32:7"
															},
															"nodeType": "YulIf",
															"src": "1062:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1123:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1152:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1133:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1123:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1171:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1198:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1209:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1194:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1194:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1181:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1171:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1010:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1021:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1033:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1041:6:7",
														"type": ""
													}
												],
												"src": "965:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1431:266:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1441:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1453:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1449:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1449:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1441:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1484:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1522:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1533:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1518:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1538:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1565:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1576:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1561:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1561:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1581:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1554:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1554:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1619:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1624:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1597:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1597:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1662:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1647:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1675:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1675:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1668:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1668:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1640:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1368:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1379:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1387:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1395:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1403:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1411:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1422:4:7",
														"type": ""
													}
												],
												"src": "1224:473:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1734:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1751:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1758:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1763:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1754:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1744:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1784:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1808:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1702:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1866:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1890:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1895:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1886:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1886:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1876:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1876:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1923:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1926:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1916:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1947:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1950:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1940:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1940:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1940:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1834:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2013:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2044:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2046:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2046:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2046:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2029:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2040:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2026:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:17:7"
															},
															"nodeType": "YulIf",
															"src": "2023:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2075:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2086:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2093:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2082:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2082:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1995:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2005:3:7",
														"type": ""
													}
												],
												"src": "1966:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2280:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2297:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2308:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2290:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2290:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2290:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2331:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2342:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2327:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2327:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2347:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2320:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2370:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2381:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2366:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2366:18:7"
																	},
																	{
																		"hexValue": "5573657220686173206e6f206469766964656e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2386:23:7",
																		"type": "",
																		"value": "User has no dividends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:51:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2419:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2431:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2442:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2427:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2427:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2419:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2257:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2271:4:7",
														"type": ""
													}
												],
												"src": "2106:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2537:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2592:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2595:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2585:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2558:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2567:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2554:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2554:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2579:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2550:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:32:7"
															},
															"nodeType": "YulIf",
															"src": "2547:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2608:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2624:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2618:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2608:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2503:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2514:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2526:6:7",
														"type": ""
													}
												],
												"src": "2456:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2774:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2784:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2796:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2807:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2792:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2792:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2784:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2826:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2841:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2857:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2862:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2853:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2853:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2866:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2849:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2849:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2837:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2837:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2819:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2819:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2890:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2901:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2886:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2886:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2906:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2879:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2879:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2879:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2735:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2746:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2754:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2765:4:7",
														"type": ""
													}
												],
												"src": "2645:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3002:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3048:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3050:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3050:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3023:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3032:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3044:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3015:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3015:32:7"
															},
															"nodeType": "YulIf",
															"src": "3012:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3073:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3092:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3086:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3077:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3155:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3164:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3167:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3157:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3157:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3157:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3145:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3138:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3138:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3131:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3131:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3114:40:7"
															},
															"nodeType": "YulIf",
															"src": "3111:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3180:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3190:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3180:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2968:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2979:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2991:6:7",
														"type": ""
													}
												],
												"src": "2924:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3380:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3390:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3390:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3431:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3442:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3427:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3427:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3420:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3420:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3420:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3470:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3481:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3466:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3466:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3486:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3459:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3459:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3459:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3530:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3542:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3553:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3538:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3530:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3357:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3371:4:7",
														"type": ""
													}
												],
												"src": "3206:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3616:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3638:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3640:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3640:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3640:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3632:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3635:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3629:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3629:8:7"
															},
															"nodeType": "YulIf",
															"src": "3626:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3669:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3681:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3684:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3677:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3677:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3669:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3598:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3601:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3607:4:7",
														"type": ""
													}
												],
												"src": "3567:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3854:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3864:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3876:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3872:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3872:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3864:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3899:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3917:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3922:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3913:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3913:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3909:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3903:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3944:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3959:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3967:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3955:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3955:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3937:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3937:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3937:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3991:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4002:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3987:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3987:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4011:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4019:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3980:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3980:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3980:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4059:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3807:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3818:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3826:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3834:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3845:4:7",
														"type": ""
													}
												],
												"src": "3697:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4152:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4154:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4154:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4154:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4141:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4148:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4144:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4144:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4138:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:13:7"
															},
															"nodeType": "YulIf",
															"src": "4135:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4183:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4194:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4197:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4190:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4190:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4108:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4111:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4117:3:7",
														"type": ""
													}
												],
												"src": "4077:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4384:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4401:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4394:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4394:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4435:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4446:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4431:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4431:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4451:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4424:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4424:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4474:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4485:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4470:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4470:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4490:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4463:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4463:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4463:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4545:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4556:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4541:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4561:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4534:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4534:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4534:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4579:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4591:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4602:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4579:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4361:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4375:4:7",
														"type": ""
													}
												],
												"src": "4210:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4791:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4808:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4819:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4853:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4838:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4838:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4858:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4831:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4831:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4831:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4881:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4892:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4877:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4877:18:7"
																	},
																	{
																		"hexValue": "4e6f7420486f6c646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4897:12:7",
																		"type": "",
																		"value": "Not Holder"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4870:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4870:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4919:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4931:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4927:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4919:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4768:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4782:4:7",
														"type": ""
													}
												],
												"src": "4617:334:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5008:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5067:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5069:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5069:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5069:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5039:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5032:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5032:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5025:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5025:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5047:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5058:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "5054:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5054:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5062:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "5050:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5050:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5044:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5044:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5021:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5021:45:7"
															},
															"nodeType": "YulIf",
															"src": "5018:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5098:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5113:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5116:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5109:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5098:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4987:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4990:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4996:7:7",
														"type": ""
													}
												],
												"src": "4956:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5175:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5206:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5227:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5234:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5239:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "5230:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5230:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5220:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5220:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5220:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5271:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5274:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5264:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5264:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5264:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5299:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5302:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5292:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5292:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5292:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5195:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5188:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:9:7"
															},
															"nodeType": "YulIf",
															"src": "5185:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5326:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5335:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5338:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5331:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5326:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5160:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5163:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5169:1:7",
														"type": ""
													}
												],
												"src": "5129:217:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"User has no dividends\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not Holder\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x18E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC8A22EB4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE85ABE09 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0xFB4CB32B EQ PUSH2 0x3D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8A22EB4 EQ PUSH2 0x32D JUMPI DUP1 PUSH4 0xD6343867 EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x9F8A13D7 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x4E71D92D GT PUSH2 0x125 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x44038F90 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x4B319713 EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x104DB1B EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x141A2A3F EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19D PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x3E8 JUMP JUMPDEST PUSH2 0x19D PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH2 0x19D PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x220 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x66F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0xA9D JUMP JUMPDEST PUSH2 0x19D PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x2B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x2E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xC0B JUMP JUMPDEST PUSH2 0x19D PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x303 PUSH2 0x2FE CALLDATASIZE PUSH1 0x4 PUSH2 0x15F5 JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1A7 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x39C CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x3C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x1012 JUMP JUMPDEST PUSH2 0x251 PUSH2 0x10DD JUMP JUMPDEST PUSH2 0x19D PUSH2 0x3E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DA JUMP JUMPDEST PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x62F JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x422 JUMPI PUSH2 0x422 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x61D JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x453 JUMPI PUSH2 0x453 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x54B JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x485 JUMPI PUSH2 0x485 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x51D PUSH2 0x3E8 PUSH2 0x517 PUSH1 0xF DUP12 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP1 PUSH2 0x1556 JUMP JUMPDEST SWAP1 PUSH2 0x154A JUMP JUMPDEST SWAP2 POP PUSH2 0x610 JUMP JUMPDEST PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x565 JUMPI PUSH2 0x565 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x5E6 JUMPI PUSH2 0x523 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x60D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x61A DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x627 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x404 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x669 PUSH2 0x647 DUP4 PUSH2 0x3E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6A0 JUMPI PUSH2 0x6A0 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x8CB JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x6D1 JUMPI PUSH2 0x6D1 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x765 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x703 JUMPI PUSH2 0x703 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x744 JUMPI PUSH2 0x73D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH2 0x85C JUMP JUMPDEST PUSH2 0x73D PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH2 0x77F PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x7F9 JUMPI PUSH2 0x7B9 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7D2 JUMPI PUSH2 0x7D2 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x85C JUMP JUMPDEST PUSH2 0x820 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x4E0 DUP8 PUSH1 0x1 ADD SLOAD DUP9 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x839 JUMPI PUSH2 0x839 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x895 DUP3 DUP6 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1562 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8AA JUMPI PUSH2 0x8AA PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x8C8 DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x8D5 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x682 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x90B JUMPI PUSH2 0x901 DUP4 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 ADD SSTORE SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x958 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x1666 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x9D3 JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA50 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST POP PUSH1 0x4 SLOAD PUSH2 0xA5E SWAP1 DUP6 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAF7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST PUSH2 0xB01 PUSH1 0x0 PUSH2 0x156E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0xB57 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB3F JUMPI PUSH2 0xB3F PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP4 SWAP1 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xB63 DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB1E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xC02 JUMPI DUP1 SLOAD PUSH2 0xBC1 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x517 SWAP1 PUSH2 0x16D SWAP1 DUP6 SWAP1 PUSH2 0xBB1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST DUP2 SLOAD DUP3 SWAP1 PUSH2 0xBD1 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x16A1 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xBE1 JUMPI PUSH2 0xBE1 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD LT ISZERO PUSH2 0xC02 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC62 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC86 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xCDD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xD00 JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xDBB JUMPI PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xDB9 JUMPI PUSH1 0x0 PUSH2 0xD3A PUSH2 0x3E8 PUSH2 0x517 DUP7 PUSH1 0x78 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xD63 SWAP1 DUP3 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 PUSH32 0x328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0xE0E JUMPI TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xDD7 SWAP2 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP1 PUSH2 0xE37 PUSH2 0xE30 PUSH2 0x3E8 PUSH2 0x517 DUP9 PUSH1 0x78 PUSH2 0x154A JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x1537 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SLOAD PUSH2 0xEC8 SWAP1 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0xED9 SWAP1 PUSH1 0x1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0xF4A JUMPI PUSH2 0xF4A PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0xF71 JUMPI PUSH2 0xF71 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF98 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP11 DUP2 SLOAD DUP2 LT PUSH2 0xFBF JUMPI PUSH2 0xFBF PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0xFE6 JUMPI PUSH2 0xFE6 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD SLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x10D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x94F JUMP JUMPDEST PUSH2 0x10DA DUP2 PUSH2 0x156E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E8 CALLER PUSH2 0x3E8 JUMP JUMPDEST GT PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102437B63232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x94F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x113B SWAP1 PUSH2 0x3E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x1171 SWAP2 SWAP1 PUSH2 0x16B8 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE DUP3 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x1453 JUMPI DUP5 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x11EF JUMPI PUSH2 0x11EF PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x1441 JUMPI TIMESTAMP DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1220 JUMPI PUSH2 0x1220 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x12D4 JUMPI DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1252 JUMPI PUSH2 0x1252 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x12B3 JUMPI PUSH2 0x12AC PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x4BF JUMPI PUSH2 0x4BF PUSH2 0x161F JUMP JUMPDEST PUSH2 0x51D PUSH2 0x3E8 PUSH2 0x517 PUSH1 0xF DUP13 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x500 JUMPI PUSH2 0x500 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x12AC PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x1537 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x12EE JUMPI PUSH2 0x12EE PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x138F JUMPI PUSH2 0x134F PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x0 ADD DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1328 JUMPI PUSH2 0x1328 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP10 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1368 JUMPI PUSH2 0x1368 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x13F2 JUMP JUMPDEST PUSH2 0x13B6 PUSH3 0x15180 PUSH2 0x517 PUSH2 0x128C DUP9 PUSH1 0x1 ADD SLOAD DUP10 PUSH1 0x0 ADD DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x5C6 JUMPI PUSH2 0x5C6 PUSH2 0x161F JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13CF JUMPI PUSH2 0x13CF PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x140B DUP3 DUP7 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x161F JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1420 JUMPI PUSH2 0x1420 PUSH2 0x161F JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x143E DUP4 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x144B DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11D1 JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x1467 SWAP1 DUP5 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1478 SWAP1 PUSH1 0x1 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x4 SLOAD PUSH2 0x1488 SWAP1 DUP4 PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xB6B JUMPI PUSH2 0x1523 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1502 JUMPI PUSH2 0x1502 PUSH2 0x161F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x1562 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x152F DUP2 PUSH2 0x164B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14E1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16A1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16D0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16EF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1543 DUP3 DUP5 PUSH2 0x16B8 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1543 DUP3 PUSH2 0x15BE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1611 DUP4 PUSH2 0x15BE JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x165F JUMPI PUSH2 0x165F PUSH2 0x1635 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1678 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1691 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16B3 JUMPI PUSH2 0x16B3 PUSH2 0x1635 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x16CB JUMPI PUSH2 0x16CB PUSH2 0x1635 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x16EA JUMPI PUSH2 0x16EA PUSH2 0x1635 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x170C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4A POP SHR PUSH21 0x3942EBC3C52EF32A53F950339D647DE5269CFAFEA4 RETURNDATASIZE SGT SHR 0xC1 0xA7 0xC7 0xE4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "241:14787:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:49;;570:8;529:49;;;;;160:25:7;;;148:2;133:18;529:49:6;;;;;;;;322:47;;365:4;322:47;;9648:2450;;;;;;:::i;:::-;;:::i;376:43::-;;417:2;376:43;;12798:248;;;;;;:::i;:::-;;:::i;480:42::-;;516:6;480:42;;12456:161;;;;;;:::i;:::-;-1:-1:-1;;;;;12582:18:6;;;12550:7;12582:18;;;:5;:18;;;;;:27;;;;;12456:161;;;;-1:-1:-1;;;;;729:32:7;;;711:51;;699:2;684:18;12456:161:6;565:203:7;426:47:6;;470:3;426:47;;669:29;;;;;;3138:3232;;;:::i;:::-;;1668:101:0;;;:::i;14299:357:6:-;;;;;;:::i;:::-;;:::i;636:26::-;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;13054:506:6;;;;;;:::i;:::-;;:::i;:::-;;;938:14:7;;931:22;913:41;;901:2;886:18;13054:506:6;773:187:7;14115:176:6;;;;;;:::i;:::-;-1:-1:-1;;;;;14249:18:6;14217:7;14249:18;;;:5;:18;;;;;:34;;14115:176;1693:1437;;;;;;:::i;:::-;;:::i;604:25::-;;;;;;13568:539;;;;;;:::i;:::-;;:::i;:::-;;;;1477:25:7;;;1533:2;1518:18;;1511:34;;;;1561:18;;;1554:34;;;;1619:2;1604:18;;1597:34;1675:14;1668:22;1662:3;1647:19;;1640:51;1464:3;1449:19;13568:539:6;1224:473:7;12277:171:6;;;;;;:::i;:::-;-1:-1:-1;;;;;12408:18:6;12376:7;12408:18;;;:5;:18;;;;;:32;;;;12277:171;705:32;;;;;;12625:165;;;;;;:::i;:::-;-1:-1:-1;;;;;12753:18:6;12721:7;12753:18;;;:5;:18;;;;;:29;;;;12625:165;12106:163;;;;;;:::i;:::-;-1:-1:-1;;;;;12237:18:6;12205:7;12237:18;;;:5;:18;;;;;:24;;;;12106:163;1918:198:0;;;;;;:::i;:::-;;:::i;6378:3262:6:-;;;:::i;14664:361::-;;;;;;:::i;:::-;;:::i;9648:2450::-;-1:-1:-1;;;;;9788:18:6;;9743:7;9788:18;;;:5;:18;;;;;9743:7;;;9882:2175;9906:20;;9902:24;;9882:2175;;;9952:4;:13;;9966:1;9952:16;;;;;;;;:::i;:::-;;;;;;;;;:22;:16;;;;;:22;;;;9948:2098;;10035:15;10008:4;:13;;10022:1;10008:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;10004:1962;;;10108:4;:15;;;10079:4;:13;;10093:1;10079:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;10075:869;;;10164:379;516:6;10164:334;10420:47;10440:4;:13;;10454:1;10440:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;10420:15;:19;;:47;;;;:::i;:::-;10195:129;365:4;10195:43;417:2;10195:4;:13;;10209:1;10195:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;;:27;:43::i;:::-;:47;;:129::i;:::-;10164:221;;:334::i;:379::-;10152:391;;10004:1962;;10075:869;10612:308;516:6;10612:229;10804:36;10824:4;:15;;;10804;:19;;:36;;;;:::i;10004:1962::-;11025:4;:15;;;10996:4;:13;;11010:1;10996:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;10992:955;;;11081:460;516:6;11081:415;11337:128;11404:4;:13;;11418:1;11404:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;11337:4;:13;;11351:1;11337:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:28;;:128;;;;:::i;10992:955::-;11610:313;516:6;11610:268;11832:45;11861:4;:15;;;11832:4;:13;;11846:1;11832:16;;;;;;;;:::i;11610:313::-;11598:325;;10992:955;12001:29;:14;12020:9;12001:18;:29::i;:::-;11984:46;;9948:2098;9928:3;;;;:::i;:::-;;;;9882:2175;;;-1:-1:-1;12076:14:6;;9648:2450;-1:-1:-1;;;;9648:2450:6:o;12798:248::-;12893:7;12938:100;12994:29;13011:11;12994:16;:29::i;:::-;-1:-1:-1;;;;;12237:18:6;;12205:7;12237:18;;;:5;:18;;;;;:24;;;12938:37;;:100::i;:::-;12918:120;12798:248;-1:-1:-1;;12798:248:6:o;3138:3232::-;3199:10;3173:17;3193;;;:5;:17;;;;;;3173;;3283:2441;3307:20;;3303:24;;3283:2441;;;3353:4;:13;;3367:1;3353:16;;;;;;;;:::i;:::-;;;;;;;;;:22;:16;;;;;:22;;;;3349:2364;;3436:15;3409:4;:13;;3423:1;3409:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;3405:2074;;;3509:4;:15;;;3480:4;:13;;3494:1;3480:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;3476:869;;;3565:379;516:6;3565:334;3821:47;3841:4;:13;;3855:1;3841:16;;;;;;;;:::i;3565:379::-;3553:391;;3405:2074;;3476:869;4013:308;516:6;4013:229;4205:36;4225:4;:15;;;4205;:19;;:36;;;;:::i;3405:2074::-;4426:4;:15;;;4397:4;:13;;4411:1;4397:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;4393:1067;;;4482:460;516:6;4482:415;4738:128;4805:4;:13;;4819:1;4805:16;;;;;;;;:::i;4482:460::-;4470:472;;4994:4;4969;:13;;4983:1;4969:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;:29;;-1:-1:-1;;4969:29:6;;;;;;;;;;4393:1067;;;5067:313;516:6;5067:268;5289:45;5318:4;:15;;;5289:4;:13;;5303:1;5289:16;;;;;;;;:::i;5067:313::-;5055:325;;5432:4;5407;:13;;5421:1;5407:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;:29;;-1:-1:-1;;5407:29:6;;;;;;;;;;4393:1067;5528:81;5581:9;5528:4;:13;;5542:1;5528:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:30;;:81;;;;:::i;:::-;5499:4;:13;;5513:1;5499:16;;;;;;;;:::i;:::-;;;;;;;;;:26;:16;;;;;:26;:110;5671:26;:11;5687:9;5671:15;:26::i;:::-;5657:40;;3349:2364;3329:3;;;;:::i;:::-;;;;3283:2441;;;-1:-1:-1;5781:10:6;5736:21;12237:18;;;:5;:18;;;;;:24;;;5807:17;;5803:123;;5855:30;:11;5871:13;5855:15;:30::i;:::-;5913:1;5900:10;;;:14;5841:44;-1:-1:-1;5803:123:6;5960:1;5946:11;:15;5938:49;;;;-1:-1:-1;;;5938:49:6;;2308:2:7;5938:49:6;;;2290:21:7;2347:2;2327:18;;;2320:30;-1:-1:-1;;;2366:18:7;;;2359:51;2427:18;;5938:49:6;;;;;;;;;6026:2;;:27;;-1:-1:-1;;;6026:27:6;;6047:4;6026:27;;;711:51:7;6000:23:6;;-1:-1:-1;;;;;6026:2:6;;:12;;684:18:7;;6026:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6000:53;;6086:11;6068:15;:29;6064:91;;;6128:15;6114:29;;6064:91;6185:15;6167;;;;:33;;;;6213:2;:36;;-1:-1:-1;;;6213:36:6;;6225:10;6213:36;;;2819:51:7;2886:18;;;2879:34;;;-1:-1:-1;;;;;6213:2:6;;;;:11;;2792:18:7;;6213:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6279:14:6;;:31;;6298:11;6279:18;:31::i;:::-;6262:14;:48;6328:34;;160:25:7;;;6338:10:6;;6328:34;;148:2:7;133:18;6328:34:6;;;;;;;3162:3208;;;;;3138:3232::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;3408:2:7;1240:68:0;;;3390:21:7;;;3427:18;;;3420:30;3486:34;3466:18;;;3459:62;3538:18;;1240:68:0;3206:356:7;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;14299:357:6:-;-1:-1:-1;;;;;14443:18:6;;14398:7;14443:18;;;:5;:18;;;;;14398:7;;14501:122;14525:20;;14521:24;;14501:122;;;14576:35;14587:4;:13;;14601:1;14587:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;14576:6;;:10;:35::i;:::-;14567:44;-1:-1:-1;14547:3:6;;;;:::i;:::-;;;;14501:122;;;-1:-1:-1;14642:6:6;14299:357;-1:-1:-1;;;14299:357:6:o;13054:506::-;-1:-1:-1;;;;;13151:18:6;;13114:4;13151:18;;;:5;:18;;;;;13186:20;;:24;13182:371;;13332:20;;13318:64;;13378:3;;13318:55;;13369:3;;13318:4;;13332:24;;13355:1;;13332:24;:::i;:::-;13318:39;;;;;;;;:::i;:64::-;13263:20;;13249:4;;13263:24;;13286:1;;13263:24;:::i;:::-;13249:39;;;;;;;;:::i;:::-;;;;;;;;;;;:49;;;:133;13227:270;;;-1:-1:-1;13424:4:6;;13054:506;-1:-1:-1;;13054:506:6:o;13227:270::-;-1:-1:-1;13476:5:6;;13054:506;-1:-1:-1;;13054:506:6:o;1693:1437::-;1760:2;;:50;;-1:-1:-1;;;1760:50:6;;1776:10;1760:50;;;3937:34:7;1796:4:6;3987:18:7;;;3980:43;4039:18;;;4032:34;;;-1:-1:-1;;;;;1760:2:6;;;;:15;;3872:18:7;;1760:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1849:10:6;1823:17;1843;;;:5;:17;;;;;1891:13;;;;-1:-1:-1;;;;;1891:13:6;:27;:79;;;;-1:-1:-1;;;;;;1935:15:6;;1969:1;1935:15;;;:5;:15;;;;;:31;:35;;1891:79;:118;;;;-1:-1:-1;;;;;;1987:22:6;;1999:10;1987:22;;1891:118;1873:199;;;2036:13;;;:24;;-1:-1:-1;;;;;;2036:24:6;-1:-1:-1;;;;;2036:24:6;;;;;1873:199;2088:13;;;;-1:-1:-1;;;;;2088:13:6;:27;2084:410;;2149:13;;;;-1:-1:-1;;;;;2149:13:6;2183:20;;2179:304;;2224:15;2242:91;365:4;2242:29;:6;470:3;2242:10;:29::i;:91::-;-1:-1:-1;;;;;2374:13:6;;;;;;:5;:13;;;;;:19;;;2224:109;;-1:-1:-1;2374:32:6;;2224:109;2374:23;:32::i;:::-;-1:-1:-1;;;;;2352:13:6;;;;;;:5;:13;;;;;;;;;:19;;:54;;;;2430:37;160:25:7;;;2447:10:6;;2430:37;;133:18:7;2430:37:6;;;;;;;2205:278;2179:304;2117:377;2084:410;2510:20;;2506:174;;2570:15;2552;;;;:33;;;;2613:10;;:17;;:14;:17::i;:::-;2600:10;:30;2650:18;;2657:10;711:51:7;;2650:18:6;;699:2:7;684:18;2650::6;;;;;;;2506:174;2725:233;;;;;;;;;2692:4;;2725:233;2751:63;2762:51;365:4;2762:29;:6;470:3;2762:10;:29::i;:51::-;2751:6;;:10;:63::i;:::-;2725:233;;;;2833:1;2725:233;;;;2853:15;2725:233;;;;570:8;2887:15;:32;;;;:::i;:::-;2725:233;;2938:5;2725:233;;;;;;;2692:277;;2725:233;2692:277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2692:277:6;;;;;;;;;;;2996:11;:23;;3012:6;2996:15;:23::i;:::-;2982:11;:37;3050:17;;:24;;3072:1;3050:21;:24::i;:::-;3030:17;:44;3092:30;;160:25:7;;;3103:10:6;;3092:30;;148:2:7;133:18;3092:30:6;;;;;;;1749:1381;1693:1437;;:::o;13568:539::-;-1:-1:-1;;;;;13834:18:6;;13694:7;13834:18;;;:5;:18;;;;;13887:20;;13694:7;;;;;;;;13834:18;;13901:5;;13887:20;;;;;;:::i;:::-;;;;;;;;;;;:27;;;13929:4;:13;;13943:5;13929:20;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;13974:4;:13;;13988:5;13974:20;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;14019:4;:13;;14033:5;14019:20;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;14062:4;:13;;14076:5;14062:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;;;13865:234;;;;-1:-1:-1;13865:234:6;;-1:-1:-1;13865:234:6;-1:-1:-1;14062:26:6;;;;;-1:-1:-1;13568:539:6;-1:-1:-1;;;;13568:539:6:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;3408:2:7;1240:68:0;;;3390:21:7;;;3427:18;;;3420:30;3486:34;3466:18;;;3459:62;3538:18;;1240:68:0;3206:356:7;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;4412:2:7;1998:73:0::1;::::0;::::1;4394:21:7::0;4451:2;4431:18;;;4424:30;4490:34;4470:18;;;4463:62;-1:-1:-1;;;4541:18:7;;;4534:36;4587:19;;1998:73:0::1;4210:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;6378:3262:6:-;1194:1;1163:28;1180:10;1163:16;:28::i;:::-;:32;1155:55;;;;-1:-1:-1;;;1155:55:6;;4819:2:7;1155:55:6;;;4801:21:7;4858:2;4838:18;;;4831:30;-1:-1:-1;;;4877:18:7;;;4870:40;4927:18;;1155:55:6;4617:334:7;1155:55:6;6453:10:::1;6427:17;6447::::0;;;:5:::1;:17;::::0;;;;;6524:28:::1;::::0;:16:::1;:28::i;:::-;6503:49;;6604:19;6634:17:::0;6664:4:::1;:13;;6697:180;;;;;;;;6723:10;6697:180;;;;6752:1;6697:180;;;;6772:15;6697:180;;;;570:8;6806:15;:32;;;;:::i;:::-;6697:180:::0;;6857:5:::1;6697:180;::::0;;::::1;::::0;;;6664:224;;6697:180;6664:224;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;6664:224:6::1;::::0;::::1;;::::0;;;::::1;::::0;;6901:2441:::1;6925:20:::0;;6921:24;::::1;6901:2441;;;6971:4;:13;;6985:1;6971:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;::::1;;6967:2364;;7054:15;7027:4;:13;;7041:1;7027:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;7023:2074;;;7127:4;:15;;;7098:4;:13;;7112:1;7098:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;7094:869;;;7183:379;516:6;7183:334;7439:47;7459:4;:13;;7473:1;7459:16;;;;;;;;:::i;7439:47::-;7214:129;365:4;7214:43;417:2;7214:4;:13;;7228:1;7214:16;;;;;;;;:::i;7183:379::-;7171:391;;7023:2074;;7094:869;7631:308;516:6;7631:229;7823:36;7843:4;:15;;;7823;:19;;:36;;;;:::i;7023:2074::-;8044:4;:15;;;8015:4;:13;;8029:1;8015:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;8011:1067;;;8100:460;516:6;8100:415;8356:128;8423:4;:13;;8437:1;8423:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;8356:4;:13;;8370:1;8356:16;;;;;;;;:::i;8100:460::-;8088:472;;8612:4;8587;:13;;8601:1;8587:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22;;:29:::0;;-1:-1:-1;;8587:29:6::1;::::0;::::1;;::::0;;;::::1;::::0;;8011:1067:::1;;;8685:313;516:6;8685:268;8907:45;8936:4;:15;;;8907:4;:13;;8921:1;8907:16;;;;;;;;:::i;8685:313::-;8673:325;;9050:4;9025;:13;;9039:1;9025:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22;;:29:::0;;-1:-1:-1;;9025:29:6::1;::::0;::::1;;::::0;;;::::1;::::0;;8011:1067:::1;9146:81;9199:9;9146:4;:13;;9160:1;9146:16;;;;;;;;:::i;:81::-;9117:4;:13;;9131:1;9117:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:26:::1;:16;::::0;;::::1;;:26;:110:::0;9289:26:::1;:11:::0;9305:9;9289:15:::1;:26::i;:::-;9275:40;;6967:2364;6947:3:::0;::::1;::::0;::::1;:::i;:::-;;;;6901:2441;;;-1:-1:-1::0;9372:15:6::1;9354;::::0;::::1;:33:::0;9414:11:::1;::::0;:27:::1;::::0;9430:10;9414:15:::1;:27::i;:::-;9400:11;:41:::0;9472:17:::1;::::0;:24:::1;::::0;9494:1:::1;9472:21;:24::i;:::-;9452:17;:44:::0;9524:14:::1;::::0;:31:::1;::::0;9543:11;9524:18:::1;:31::i;:::-;9507:14;:48:::0;9594:38:::1;::::0;160:25:7;;;9609:10:6::1;::::0;9594:38:::1;::::0;148:2:7;133:18;9594:38:6::1;;;;;;;6416:3224;;;;6378:3262::o:0;14664:361::-;-1:-1:-1;;;;;14809:18:6;;14764:7;14809:18;;;:5;:18;;;;;14764:7;;14867:125;14891:20;;14887:24;;14867:125;;;14942:38;14953:4;:13;;14967:1;14953:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;14942:6;:10;;:38;;;;:::i;:::-;14933:47;-1:-1:-1;14913:3:6;;;;:::i;:::-;;;;14867:125;;3122:96:5;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:5:o;3465:::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:173:7:-;264:20;;-1:-1:-1;;;;;313:31:7;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;965:254::-;1033:6;1041;1094:2;1082:9;1073:7;1069:23;1065:32;1062:52;;;1110:1;1107;1100:12;1062:52;1133:29;1152:9;1133:29;:::i;:::-;1123:39;1209:2;1194:18;;;;1181:32;;-1:-1:-1;;;965:254:7:o;1702:127::-;1763:10;1758:3;1754:20;1751:1;1744:31;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1834:127;1895:10;1890:3;1886:20;1883:1;1876:31;1926:4;1923:1;1916:15;1950:4;1947:1;1940:15;1966:135;2005:3;-1:-1:-1;;2026:17:7;;2023:43;;;2046:18;;:::i;:::-;-1:-1:-1;2093:1:7;2082:13;;1966:135::o;2456:184::-;2526:6;2579:2;2567:9;2558:7;2554:23;2550:32;2547:52;;;2595:1;2592;2585:12;2547:52;-1:-1:-1;2618:16:7;;2456:184;-1:-1:-1;2456:184:7:o;2924:277::-;2991:6;3044:2;3032:9;3023:7;3019:23;3015:32;3012:52;;;3060:1;3057;3050:12;3012:52;3092:9;3086:16;3145:5;3138:13;3131:21;3124:5;3121:32;3111:60;;3167:1;3164;3157:12;3567:125;3607:4;3635:1;3632;3629:8;3626:34;;;3640:18;;:::i;:::-;-1:-1:-1;3677:9:7;;3567:125::o;4077:128::-;4117:3;4148:1;4144:6;4141:1;4138:13;4135:39;;;4154:18;;:::i;:::-;-1:-1:-1;4190:9:7;;4077:128::o;4956:168::-;4996:7;5062:1;5058;5054:6;5050:14;5047:1;5044:21;5039:1;5032:9;5025:17;5021:45;5018:71;;;5069:18;;:::i;:::-;-1:-1:-1;5109:9:7;;4956:168::o;5129:217::-;5169:1;5195;5185:132;;5239:10;5234:3;5230:20;5227:1;5220:31;5274:4;5271:1;5264:15;5302:4;5299:1;5292:15;5185:132;-1:-1:-1;5331:9:7;;5129:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1191800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PERCENTS_DAILY()": "274",
								"PERCENTS_DIVIDER()": "230",
								"REFERRAL_PERCENTS()": "252",
								"STAKING_PERIOD()": "208",
								"TIME_STEP()": "318",
								"claim()": "infinite",
								"compound()": "infinite",
								"getUserAmountOfDeposits(address)": "2593",
								"getUserAvailable(address)": "infinite",
								"getUserCheckpoint(address)": "2621",
								"getUserDepositInfo(address,uint256)": "22308",
								"getUserDividends(address)": "infinite",
								"getUserReferralBonus(address)": "2576",
								"getUserReferralCount(address)": "2577",
								"getUserReferrer(address)": "2619",
								"getUserTotalDeposits(address)": "infinite",
								"getUserTotalWithdrawn(address)": "infinite",
								"isActive(address)": "infinite",
								"owner()": "2354",
								"renounceOwnership()": "28181",
								"stake(address,uint256)": "infinite",
								"totalDepositCount()": "2351",
								"totalStaked()": "2395",
								"totalUsers()": "2395",
								"totalWithdrawn()": "2374",
								"transferOwnership(address)": "28375"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1590,
									"end": 1685,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1666,
									"end": 1668,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1666,
									"end": 1677,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 97,
									"end": 103,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 129,
									"end": 136,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 125,
									"end": 148,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 121,
									"end": 153,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 166,
									"end": 167,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 164,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 156,
									"end": 168,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 192,
									"end": 208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 192,
									"end": 208,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 237,
									"end": 268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 237,
									"end": 268,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 227,
									"end": 269,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 227,
									"end": 269,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 217,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 283,
									"end": 284,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 281,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 273,
									"end": 285,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 217,
									"end": 287,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 306,
									"end": 311,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 317,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 15028,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204a501c743942ebc3c52ef32a53f950339d647de5269cfafea43d131cc1a7c7e464736f6c634300080a0033",
									".code": [
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "C8A22EB4"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "E85ABE09"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "E85ABE09"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "F69E2046"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "FB4CB32B"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "C8A22EB4"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "D6343867"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "D7FFCA91"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "9F8A13D7"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "A8AEB6C2"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "ADC9772E"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "BFF1F9E1"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "C0806B03"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "36144C9A"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "7E3ABEEA"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "817B1CD2"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "36144C9A"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "44038F90"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "4B319713"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "104DB1B"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "1C234A8"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "40A772E"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "141A2A3F"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "153AB9DF"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "32BC298C"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 15028,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 570,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 529,
											"end": 578,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 529,
											"end": 578,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 322,
											"end": 369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 376,
											"end": 419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 419,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 480,
											"end": 522,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 480,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 480,
											"end": 522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 522,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12550,
											"end": 12557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12587,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12600,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12609,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12582,
											"end": 12609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12609,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12582,
											"end": 12609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12456,
											"end": 12617,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 565,
											"end": 768,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 426,
											"end": 473,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 426,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 470,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 426,
											"end": 473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 426,
											"end": 473,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 669,
											"end": 698,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 669,
											"end": 698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 669,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 669,
											"end": 698,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 669,
											"end": 698,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 669,
											"end": 698,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 669,
											"end": 698,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 636,
											"end": 662,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 636,
											"end": 662,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 636,
											"end": 662,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 938,
											"end": 952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 938,
											"end": 952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 931,
											"end": 953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 913,
											"end": 954,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 913,
											"end": 954,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 901,
											"end": 903,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 773,
											"end": 960,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14217,
											"end": 14224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14254,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14267,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14283,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14249,
											"end": 14283,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14115,
											"end": 14291,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 604,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 604,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 604,
											"end": 629,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 604,
											"end": 629,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 604,
											"end": 629,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 604,
											"end": 629,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1533,
											"end": 1535,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1536,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1545,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1545,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1545,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1545,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1621,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1604,
											"end": 1622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1675,
											"end": 1689,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1690,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1662,
											"end": 1665,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1647,
											"end": 1666,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1647,
											"end": 1666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1691,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1464,
											"end": 1467,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1449,
											"end": 1468,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1224,
											"end": 1697,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12376,
											"end": 12383,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12413,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12426,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12440,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 12408,
											"end": 12440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12440,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12408,
											"end": 12440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12277,
											"end": 12448,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 705,
											"end": 737,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 705,
											"end": 737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 705,
											"end": 737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 705,
											"end": 737,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 705,
											"end": 737,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 705,
											"end": 737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 705,
											"end": 737,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12721,
											"end": 12728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12758,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12771,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12782,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12753,
											"end": 12782,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12782,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12753,
											"end": 12782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12625,
											"end": 12790,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12106,
											"end": 12269,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9793,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9788,
											"end": 9806,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9743,
											"end": 9750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9926,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9906,
											"end": 9926,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9902,
											"end": 9926,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9956,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9974,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9974,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9952,
											"end": 9974,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 9952,
											"end": 9974,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9948,
											"end": 12046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 9948,
											"end": 12046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10050,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10012,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10022,
											"end": 10023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10032,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10008,
											"end": 10032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10032,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10050,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10108,
											"end": 10112,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10108,
											"end": 10123,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10108,
											"end": 10123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10108,
											"end": 10123,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10083,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10093,
											"end": 10094,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10095,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10105,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10079,
											"end": 10105,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10105,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10079,
											"end": 10123,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10944,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10075,
											"end": 10944,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10543,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 10164,
											"end": 10498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10440,
											"end": 10444,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10453,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10454,
											"end": 10455,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10456,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10466,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10440,
											"end": 10466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10440,
											"end": 10466,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10435,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10420,
											"end": 10439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10420,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 10195,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 10195,
											"end": 10199,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10208,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10218,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10195,
											"end": 10238,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10195,
											"end": 10238,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10195,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10195,
											"end": 10242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10195,
											"end": 10324,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10195,
											"end": 10324,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 10195,
											"end": 10324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10164,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10164,
											"end": 10498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10164,
											"end": 10543,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 10164,
											"end": 10543,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10543,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10152,
											"end": 10543,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10944,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10075,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10612,
											"end": 10920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 10612,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 10824,
											"end": 10828,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10824,
											"end": 10839,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10819,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10804,
											"end": 10823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10804,
											"end": 10840,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 10004,
											"end": 11966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11025,
											"end": 11029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11025,
											"end": 11040,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11025,
											"end": 11040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11025,
											"end": 11040,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11000,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11009,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11010,
											"end": 11011,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11012,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11022,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10996,
											"end": 11022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11022,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10996,
											"end": 11040,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 11081,
											"end": 11496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 11404,
											"end": 11408,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11417,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11419,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11430,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11404,
											"end": 11430,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11404,
											"end": 11430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11341,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11350,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11351,
											"end": 11352,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11361,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11337,
											"end": 11361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11361,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 11337,
											"end": 11365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11337,
											"end": 11465,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11610,
											"end": 11923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 11610,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 11832,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 11861,
											"end": 11865,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11861,
											"end": 11876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11836,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11845,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11832,
											"end": 11845,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11846,
											"end": 11847,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11832,
											"end": 11848,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11610,
											"end": 11923,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 11610,
											"end": 11923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11598,
											"end": 11923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10992,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12001,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 12001,
											"end": 12015,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12020,
											"end": 12029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12001,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 12001,
											"end": 12030,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12001,
											"end": 12030,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 12001,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11984,
											"end": 12030,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11984,
											"end": 12030,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9948,
											"end": 12046,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 9948,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9928,
											"end": 9931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 9882,
											"end": 12057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12076,
											"end": 12090,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12076,
											"end": 12090,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9648,
											"end": 12098,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12893,
											"end": 12900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 12994,
											"end": 13023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 13011,
											"end": 13022,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12994,
											"end": 13010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 12994,
											"end": 13023,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12994,
											"end": 13023,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 12994,
											"end": 13023,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12205,
											"end": 12212,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12938,
											"end": 12975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12938,
											"end": 12975,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 12938,
											"end": 13038,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12918,
											"end": 13038,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12798,
											"end": 13046,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3209,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3190,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3198,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3327,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3307,
											"end": 3327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3327,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3357,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3366,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3353,
											"end": 3375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3349,
											"end": 5713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3451,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3413,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3425,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3433,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3409,
											"end": 3433,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3433,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3451,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3524,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3493,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3493,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3496,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3506,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3480,
											"end": 3506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3506,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3524,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 4345,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3476,
											"end": 4345,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 3565,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3821,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3841,
											"end": 3845,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3841,
											"end": 3854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3855,
											"end": 3856,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3841,
											"end": 3857,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3565,
											"end": 3944,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3565,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3944,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3553,
											"end": 3944,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3476,
											"end": 4345,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3476,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4013,
											"end": 4321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 4013,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4225,
											"end": 4240,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4225,
											"end": 4240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4225,
											"end": 4240,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4220,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4205,
											"end": 4224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4241,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3405,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4430,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4413,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4423,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4397,
											"end": 4441,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4482,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 4482,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 4738,
											"end": 4866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4805,
											"end": 4809,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4820,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4805,
											"end": 4821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4942,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4482,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4942,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4470,
											"end": 4942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4994,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4969,
											"end": 4973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4982,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4984,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4985,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4991,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 4991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4969,
											"end": 4998,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5067,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 5067,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5289,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5318,
											"end": 5322,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5318,
											"end": 5333,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5289,
											"end": 5302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5304,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5289,
											"end": 5305,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5380,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 5067,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5055,
											"end": 5380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5432,
											"end": 5436,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5420,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5407,
											"end": 5429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5407,
											"end": 5436,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 4393,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5581,
											"end": 5590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5541,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5541,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5542,
											"end": 5543,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5544,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5554,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5528,
											"end": 5554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5554,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5528,
											"end": 5558,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5528,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5515,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5609,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5671,
											"end": 5682,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5687,
											"end": 5696,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5671,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5697,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5657,
											"end": 5697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3349,
											"end": 5713,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3349,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3329,
											"end": 3332,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3283,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5781,
											"end": 5791,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5757,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12242,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12237,
											"end": 12261,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5807,
											"end": 5824,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5803,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5803,
											"end": 5926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5855,
											"end": 5866,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 5884,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5855,
											"end": 5870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 5855,
											"end": 5885,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5913,
											"end": 5914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5910,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5900,
											"end": 5910,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5910,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5914,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5841,
											"end": 5885,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5803,
											"end": 5926,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 5803,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5946,
											"end": 5957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5961,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2290,
											"end": 2311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2347,
											"end": 2349,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2350,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5573657220686173206E6F206469766964656E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2366,
											"end": 2384,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2410,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2427,
											"end": 2445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 5938,
											"end": 5987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6051,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6023,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6026,
											"end": 6038,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6026,
											"end": 6053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6053,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6000,
											"end": 6053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6086,
											"end": 6097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6068,
											"end": 6097,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6155,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6064,
											"end": 6155,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6143,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6143,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6114,
											"end": 6143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6064,
											"end": 6155,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 6064,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6185,
											"end": 6200,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6182,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6167,
											"end": 6182,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6182,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6167,
											"end": 6200,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6225,
											"end": 6235,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2819,
											"end": 2870,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2886,
											"end": 2904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2913,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2879,
											"end": 2913,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6224,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 6213,
											"end": 6224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 6213,
											"end": 6249,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6279,
											"end": 6293,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6279,
											"end": 6293,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6310,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6279,
											"end": 6310,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6298,
											"end": 6309,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 6279,
											"end": 6310,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6279,
											"end": 6310,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 6279,
											"end": 6310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6262,
											"end": 6276,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6262,
											"end": 6310,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6348,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6338,
											"end": 6348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "PUSH",
											"source": 6,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6328,
											"end": 6362,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 6370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 6370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 6370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 6370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3162,
											"end": 6370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3138,
											"end": 6370,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3520,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3206,
											"end": 3562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14398,
											"end": 14405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14448,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14443,
											"end": 14461,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14398,
											"end": 14405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14398,
											"end": 14405,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14525,
											"end": 14545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14525,
											"end": 14545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14521,
											"end": 14545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14521,
											"end": 14545,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 14587,
											"end": 14591,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14601,
											"end": 14602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14587,
											"end": 14610,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14582,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14576,
											"end": 14586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 14576,
											"end": 14611,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14576,
											"end": 14611,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 14576,
											"end": 14611,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14567,
											"end": 14611,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14547,
											"end": 14550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14501,
											"end": 14623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14642,
											"end": 14648,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14299,
											"end": 14656,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13114,
											"end": 13118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13156,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13151,
											"end": 13169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13186,
											"end": 13206,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13186,
											"end": 13206,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13186,
											"end": 13210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13182,
											"end": 13553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 13182,
											"end": 13553,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13352,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13318,
											"end": 13382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13378,
											"end": 13381,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 13378,
											"end": 13381,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 13318,
											"end": 13373,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13369,
											"end": 13372,
											"name": "PUSH",
											"source": 6,
											"value": "16D"
										},
										{
											"begin": 13369,
											"end": 13372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13355,
											"end": 13356,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13355,
											"end": 13356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 13332,
											"end": 13356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 13318,
											"end": 13357,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13318,
											"end": 13382,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 13318,
											"end": 13382,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13283,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13253,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13286,
											"end": 13287,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13286,
											"end": 13287,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 13263,
											"end": 13287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13298,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13249,
											"end": 13382,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13227,
											"end": 13497,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13227,
											"end": 13497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 13227,
											"end": 13497,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13424,
											"end": 13428,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13227,
											"end": 13497,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 13227,
											"end": 13497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13476,
											"end": 13481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13476,
											"end": 13481,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13054,
											"end": 13560,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1776,
											"end": 1786,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3937,
											"end": 3971,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1800,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3987,
											"end": 4005,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3980,
											"end": 4023,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4066,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4066,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4032,
											"end": 4066,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1775,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1760,
											"end": 1775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3872,
											"end": 3890,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 1760,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1849,
											"end": 1859,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1823,
											"end": 1840,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1860,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1918,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1940,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1950,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1970,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1891,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1987,
											"end": 2009,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2009,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2009,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2009,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 1891,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2072,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 1873,
											"end": 2072,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2049,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1873,
											"end": 2072,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 1873,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2101,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2115,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 2084,
											"end": 2494,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2162,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2149,
											"end": 2162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2162,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2149,
											"end": 2162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2203,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 2179,
											"end": 2483,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 470,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2242,
											"end": 2271,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2242,
											"end": 2333,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 2242,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2379,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2387,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2393,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2374,
											"end": 2393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2393,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2333,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2374,
											"end": 2397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2357,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2365,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2352,
											"end": 2371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2406,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2406,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2406,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2352,
											"end": 2406,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2447,
											"end": 2457,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50"
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2467,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2205,
											"end": 2483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2179,
											"end": 2483,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 2179,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2494,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2494,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 2084,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 2506,
											"end": 2680,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2570,
											"end": 2585,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2567,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2552,
											"end": 2567,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2567,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2567,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2585,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2585,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2585,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2613,
											"end": 2623,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2613,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 2613,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2610,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2600,
											"end": 2630,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2657,
											"end": 2667,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A"
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2668,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 2506,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2696,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2762,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2762,
											"end": 2768,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 470,
											"end": 473,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2762,
											"end": 2791,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 2762,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2751,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 2751,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2868,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 570,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 2887,
											"end": 2902,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 2887,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 2943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2725,
											"end": 2958,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3007,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3012,
											"end": 3018,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2996,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2993,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2982,
											"end": 3019,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3067,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3050,
											"end": 3067,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 3050,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3072,
											"end": 3073,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3050,
											"end": 3071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3050,
											"end": 3074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3050,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 3050,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3030,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3030,
											"end": 3074,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3113,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3103,
											"end": 3113,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "PUSH",
											"source": 6,
											"value": "2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364"
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3092,
											"end": 3122,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1749,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1693,
											"end": 3130,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13839,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13694,
											"end": 13701,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13834,
											"end": 13852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13901,
											"end": 13906,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13901,
											"end": 13906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13907,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13887,
											"end": 13914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13887,
											"end": 13914,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13933,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13942,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13943,
											"end": 13948,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13959,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13929,
											"end": 13959,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13929,
											"end": 13959,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13974,
											"end": 13987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13988,
											"end": 13993,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 13994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14004,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13974,
											"end": 14004,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13974,
											"end": 14004,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14023,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14019,
											"end": 14032,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14033,
											"end": 14038,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14047,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 14019,
											"end": 14047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14019,
											"end": 14047,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14066,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14076,
											"end": 14081,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14082,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP13",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13865,
											"end": 14099,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14062,
											"end": 14088,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13568,
											"end": 14107,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3410,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3450,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3486,
											"end": 3520,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3466,
											"end": 3484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3459,
											"end": 3521,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3538,
											"end": 3556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 3206,
											"end": 3562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4412,
											"end": 4414,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4453,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4454,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4490,
											"end": 4524,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4470,
											"end": 4488,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4470,
											"end": 4488,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4463,
											"end": 4525,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4541,
											"end": 4559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4534,
											"end": 4570,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4606,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4587,
											"end": 4606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 4210,
											"end": 4612,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1194,
											"end": 1195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 1180,
											"end": 1190,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1163,
											"end": 1191,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1163,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 1163,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1163,
											"end": 1195,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4819,
											"end": 4821,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4858,
											"end": 4860,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4856,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4831,
											"end": 4861,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA102437B63232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 4910,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 4617,
											"end": 4951,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1155,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6453,
											"end": 6463,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6452,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6447,
											"end": 6464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 6524,
											"end": 6552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6524,
											"end": 6540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 6524,
											"end": 6552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6524,
											"end": 6552,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 6524,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6503,
											"end": 6552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6503,
											"end": 6552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6604,
											"end": 6623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6651,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6664,
											"end": 6677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6723,
											"end": 6733,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6752,
											"end": 6753,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6772,
											"end": 6787,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 570,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 6806,
											"end": 6821,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 6806,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6857,
											"end": 6862,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6697,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6664,
											"end": 6888,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6945,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6925,
											"end": 6945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6921,
											"end": 6945,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6975,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6984,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6985,
											"end": 6986,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6987,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6971,
											"end": 6993,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 6967,
											"end": 9331,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7054,
											"end": 7069,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7031,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7040,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7041,
											"end": 7042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "tag",
											"source": 6,
											"value": "418"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7043,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7051,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7027,
											"end": 7051,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7069,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7131,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7142,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7127,
											"end": 7142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7127,
											"end": 7142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7102,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7111,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7112,
											"end": 7113,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "tag",
											"source": 6,
											"value": "422"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7114,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7124,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7098,
											"end": 7124,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7124,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7098,
											"end": 7142,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7963,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 7094,
											"end": 7963,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7183,
											"end": 7562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 7183,
											"end": 7517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7439,
											"end": 7486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 7459,
											"end": 7463,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7473,
											"end": 7474,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7459,
											"end": 7475,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7486,
											"name": "tag",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 7439,
											"end": 7486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 7214,
											"end": 7257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 417,
											"end": 419,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 7214,
											"end": 7218,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7227,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7227,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 7214,
											"end": 7230,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7183,
											"end": 7562,
											"name": "tag",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 7183,
											"end": 7562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7171,
											"end": 7562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7171,
											"end": 7562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7963,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 7094,
											"end": 7963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "425"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 7631,
											"end": 7860,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 7843,
											"end": 7847,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7843,
											"end": 7858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7838,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 7823,
											"end": 7842,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7823,
											"end": 7859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "tag",
											"source": 6,
											"value": "420"
										},
										{
											"begin": 7023,
											"end": 9097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8048,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8059,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8019,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8029,
											"end": 8030,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "tag",
											"source": 6,
											"value": "447"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8031,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8041,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8015,
											"end": 8041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8041,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8015,
											"end": 8059,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8100,
											"end": 8560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8100,
											"end": 8515,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8356,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8423,
											"end": 8427,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8436,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8437,
											"end": 8438,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8439,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8423,
											"end": 8449,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8360,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8356,
											"end": 8372,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8100,
											"end": 8560,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 8100,
											"end": 8560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8612,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8609,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8587,
											"end": 8609,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8685,
											"end": 8953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 8907,
											"end": 8952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "427"
										},
										{
											"begin": 8936,
											"end": 8940,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8936,
											"end": 8951,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8936,
											"end": 8951,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8936,
											"end": 8951,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8911,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8907,
											"end": 8920,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8921,
											"end": 8922,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 8907,
											"end": 8923,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8685,
											"end": 8998,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 8685,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8998,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8998,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9054,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9025,
											"end": 9029,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9038,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9038,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9039,
											"end": 9040,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "tag",
											"source": 6,
											"value": "480"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9047,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9025,
											"end": 9047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9025,
											"end": 9054,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 8011,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9150,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9159,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 9146,
											"end": 9162,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9146,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 9146,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9121,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9130,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9131,
											"end": 9132,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9143,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9133,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9117,
											"end": 9227,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 9289,
											"end": 9300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9305,
											"end": 9314,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9289,
											"end": 9304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 9289,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9275,
											"end": 9315,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9275,
											"end": 9315,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6967,
											"end": 9331,
											"name": "tag",
											"source": 6,
											"value": "416"
										},
										{
											"begin": 6967,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "tag",
											"source": 6,
											"value": "490"
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6950,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 6901,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9372,
											"end": 9387,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9387,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9425,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9414,
											"end": 9425,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 9414,
											"end": 9441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9430,
											"end": 9440,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9414,
											"end": 9441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9414,
											"end": 9441,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 9414,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9411,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9400,
											"end": 9441,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9489,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9472,
											"end": 9489,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 9472,
											"end": 9496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9494,
											"end": 9495,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9472,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9472,
											"end": 9496,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9472,
											"end": 9496,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 9472,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9452,
											"end": 9469,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9452,
											"end": 9496,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9538,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9524,
											"end": 9538,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 9524,
											"end": 9555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9543,
											"end": 9554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9524,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 9524,
											"end": 9555,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9524,
											"end": 9555,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 9524,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9507,
											"end": 9521,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9507,
											"end": 9555,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 9619,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9609,
											"end": 9619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "PUSH",
											"source": 6,
											"value": "5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405"
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9594,
											"end": 9632,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 9640,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6378,
											"end": 9640,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 14664,
											"end": 15025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14764,
											"end": 14771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14814,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14809,
											"end": 14827,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14764,
											"end": 14771,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14764,
											"end": 14771,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14891,
											"end": 14911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14891,
											"end": 14911,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14887,
											"end": 14911,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14887,
											"end": 14911,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 14953,
											"end": 14957,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14967,
											"end": 14968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14979,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14953,
											"end": 14979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14953,
											"end": 14979,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14948,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 14942,
											"end": 14952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 14942,
											"end": 14980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14933,
											"end": 14980,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "tag",
											"source": 6,
											"value": "503"
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14913,
											"end": 14916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 14867,
											"end": 14992,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "333"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "508"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "511"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "505"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "367"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 525,
											"end": 554,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 965,
											"end": 1219,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 965,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1041,
											"end": 1047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1082,
											"end": 1091,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1073,
											"end": 1080,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1069,
											"end": 1092,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1065,
											"end": 1097,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1110,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1108,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1112,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 1062,
											"end": 1114,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 1152,
											"end": 1161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 1133,
											"end": 1162,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1133,
											"end": 1162,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 1133,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1162,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1209,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1194,
											"end": 1212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1213,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 965,
											"end": 1219,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1702,
											"end": 1829,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1702,
											"end": 1829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1763,
											"end": 1773,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1758,
											"end": 1761,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1754,
											"end": 1774,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1775,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1784,
											"end": 1799,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1822,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1815,
											"end": 1816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1808,
											"end": 1823,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1834,
											"end": 1961,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 1834,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1895,
											"end": 1905,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1890,
											"end": 1893,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1886,
											"end": 1906,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1923,
											"end": 1924,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1916,
											"end": 1931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1950,
											"end": 1954,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1955,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 2101,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 1966,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2026,
											"end": 2043,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2066,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2023,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 2023,
											"end": 2066,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 2046,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2094,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2082,
											"end": 2095,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2082,
											"end": 2095,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 2101,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2640,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2456,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2532,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2554,
											"end": 2577,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2550,
											"end": 2582,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 2593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2585,
											"end": 2597,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 2547,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2618,
											"end": 2634,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2456,
											"end": 2640,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2456,
											"end": 2640,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2924,
											"end": 3201,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 2924,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3046,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3019,
											"end": 3042,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3015,
											"end": 3047,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3092,
											"end": 3101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3086,
											"end": 3102,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3150,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3151,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3131,
											"end": 3152,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3124,
											"end": 3129,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3121,
											"end": 3153,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3111,
											"end": 3171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 3111,
											"end": 3171,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3168,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3157,
											"end": 3169,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3692,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3567,
											"end": 3692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3637,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3660,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3626,
											"end": 3660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 3626,
											"end": 3660,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3677,
											"end": 3686,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3567,
											"end": 3692,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4077,
											"end": 4205,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4077,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4117,
											"end": 4120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4144,
											"end": 4150,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4141,
											"end": 4142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4151,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4135,
											"end": 4174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 4135,
											"end": 4174,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 4154,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4205,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4956,
											"end": 5124,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 4956,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4996,
											"end": 5003,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5054,
											"end": 5060,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5050,
											"end": 5064,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5044,
											"end": 5065,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5039,
											"end": 5040,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5025,
											"end": 5042,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5021,
											"end": 5066,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5089,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5018,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 5018,
											"end": 5089,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4956,
											"end": 5124,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 5129,
											"end": 5346,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 5129,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 5185,
											"end": 5317,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5249,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5230,
											"end": 5250,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5227,
											"end": 5228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5278,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5271,
											"end": 5272,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5299,
											"end": 5300,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5307,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5317,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 5185,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5346,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"PERCENTS_DAILY()": "141a2a3f",
							"PERCENTS_DIVIDER()": "01c234a8",
							"REFERRAL_PERCENTS()": "44038f90",
							"STAKING_PERIOD()": "0104db1b",
							"TIME_STEP()": "32bc298c",
							"claim()": "4e71d92d",
							"compound()": "f69e2046",
							"getUserAmountOfDeposits(address)": "a8aeb6c2",
							"getUserAvailable(address)": "153ab9df",
							"getUserCheckpoint(address)": "d7ffca91",
							"getUserDepositInfo(address,uint256)": "c0806b03",
							"getUserDividends(address)": "040a772e",
							"getUserReferralBonus(address)": "e85abe09",
							"getUserReferralCount(address)": "c8a22eb4",
							"getUserReferrer(address)": "36144c9a",
							"getUserTotalDeposits(address)": "7e3abeea",
							"getUserTotalWithdrawn(address)": "fb4cb32b",
							"isActive(address)": "9f8a13d7",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"stake(address,uint256)": "adc9772e",
							"totalDepositCount()": "d6343867",
							"totalStaked()": "817b1cd2",
							"totalUsers()": "bff1f9e1",
							"totalWithdrawn()": "4b319713",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reinvestAmount\",\"type\":\"uint256\"}],\"name\":\"onReinvestment\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENTS_DAILY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL_PERCENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmountOfDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"isActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking.sol\":\"BillionCashStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"Staking.sol\":{\"keccak256\":\"0x8046dec8bd97d0f442f2b89138aa6a0bf975ae5cdc58ab00c568c92a5e187c8f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20fad66d6a31b1948ffcd7b382cf4261b28b2956a9a9fd3734ce293dedd3428b\",\"dweb:/ipfs/QmQ9hCN1xcKxt3KPEbaKfb7vhAym5D9FXnaH8TnH5yoNEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1155,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "BC",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)690"
							},
							{
								"astId": 1157,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "totalUsers",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1161,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "totalWithdrawn",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1163,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "totalDepositCount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1192,
								"contract": "Staking.sol:BillionCashStaking",
								"label": "users",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(User)1187_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1174_storage)dyn_storage": {
								"base": "t_struct(Deposit)1174_storage",
								"encoding": "dynamic_array",
								"label": "struct BillionCashStaking.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)690": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)1187_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BillionCashStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1187_storage"
							},
							"t_struct(Deposit)1174_storage": {
								"encoding": "inplace",
								"label": "struct BillionCashStaking.Deposit",
								"members": [
									{
										"astId": 1165,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1167,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1169,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1171,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1173,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "ended",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1187_storage": {
								"encoding": "inplace",
								"label": "struct BillionCashStaking.User",
								"members": [
									{
										"astId": 1178,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "deposits",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(Deposit)1174_storage)dyn_storage"
									},
									{
										"astId": 1180,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "checkpoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1182,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "bonus",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1184,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "referralCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1186,
										"contract": "Staking.sol:BillionCashStaking",
										"label": "referrer",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 816,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								815
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 769,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 794,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 816,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "1421:7:1"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:1"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "1430:6:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:1"
								},
								{
									"baseName": {
										"id": 115,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 793,
										"src": "1438:14:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								793,
								768,
								815
							],
							"name": "ERC20",
							"nameLocation": "1412:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1459:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 119,
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1511:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 125,
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 124,
											"keyType": {
												"id": 122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1585:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1620:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1646:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2034:57:1",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2044:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2011:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:1"
									},
									"scope": 690,
									"src": "1978:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2225:29:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "2235:12:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2210:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:1"
									},
									"scope": 690,
									"src": "2156:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2438:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2448:14:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2423:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:1"
									},
									"scope": 690,
									"src": "2367:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3158:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3168:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3151:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:1"
									},
									"scope": 690,
									"src": "3093:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3314:36:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "3331:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3324:19:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:1"
									},
									"scope": 690,
									"src": "3244:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3491:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 198,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3508:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 201,
												"nodeType": "Return",
												"src": "3501:25:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3427:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:1"
									},
									"scope": 690,
									"src": "3408:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										735
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3814:104:1",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "3824:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 214,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 216,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3840:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3872:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3879:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3883:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 213,
												"id": 226,
												"nodeType": "Return",
												"src": "3900:11:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3747:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:1"
									},
									"scope": 690,
									"src": "3729:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "4074:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 239,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4091:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 241,
														"indexExpression": {
															"id": 240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4103:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 243,
													"indexExpression": {
														"id": 242,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "4110:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 244,
												"nodeType": "Return",
												"src": "4084:34:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:1"
									},
									"scope": 690,
									"src": "3976:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										755
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4522:108:1",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "4532:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "4548:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 256,
												"id": 269,
												"nodeType": "Return",
												"src": "4612:11:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:1"
									},
									"scope": 690,
									"src": "4433:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "5325:153:1",
										"statements": [
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "5335:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 286,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5375:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "5439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5443:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "5423:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 283,
												"id": 302,
												"nodeType": "Return",
												"src": "5460:11:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:1"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5245:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:1"
									},
									"scope": 690,
									"src": "5192:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "5967:140:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "5977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5993:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6024:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 324,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6057:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 322,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "6040:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 326,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 331,
												"nodeType": "Return",
												"src": "6089:11:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5917:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:1"
									},
									"scope": 690,
									"src": "5873:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6693:328:1",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6703:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 345,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6719:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:1"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6741:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6778:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "6768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6811:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 357,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6831:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:1"
											},
											{
												"id": 370,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 363,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6931:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 364,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6938:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 365,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6947:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 366,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "6966:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 362,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "6922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 369,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 342,
												"id": 372,
												"nodeType": "Return",
												"src": "7003:11:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6638:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:1"
									},
									"scope": 690,
									"src": "6594:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "7592:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7610:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7626:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7618:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7618:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7618:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7610:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7630:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "7602:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7688:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7702:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7694:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7694:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7694:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7688:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7680:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7680:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "7680:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7776:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7782:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "7755:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7755:38:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7812:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "7804:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"baseExpression": {
														"id": 412,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "7826:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "7836:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7826:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "7859:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7874:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:1"
											},
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "7933:73:1",
												"statements": [
													{
														"expression": {
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 423,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "7957:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 425,
																"indexExpression": {
																	"id": 424,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "7967:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7957:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 426,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7975:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 427,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "7989:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7975:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7957:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "7957:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 432,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8015:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8025:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8015:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 435,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "8032:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8015:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "8015:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8063:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8069:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8073:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8054:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8054:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "EmitStatement",
												"src": "8049:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8121:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 444,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8091:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "8091:37:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "7027:452:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7493:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7520:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7512:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7542:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7534:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7562:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7554:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7502:72:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:0:1"
									},
									"scope": 690,
									"src": "7484:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "8476:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8494:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8513:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8505:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8505:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8505:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8494:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8517:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8486:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8486:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8486:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8591:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8583:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8583:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8583:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8562:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "8562:49:1"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8622:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 479,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8638:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8622:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "8622:22:1"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 482,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8654:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"id": 483,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8654:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 485,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8676:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8654:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8654:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8714:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8706:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8706:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "8692:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8773:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8765:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8765:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8765:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8745:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "8745:48:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "8141:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8420:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8434:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8426:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8451:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8443:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:33:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8476:0:1"
									},
									"scope": 690,
									"src": "8411:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "9185:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "9203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9222:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9214:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9214:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9214:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9203:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9226:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9195:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "9195:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9294:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9311:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9303:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9303:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9303:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9315:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9273:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9273:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9273:49:1"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9341:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "9333:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"baseExpression": {
														"id": 536,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "9358:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 538,
													"indexExpression": {
														"id": 537,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "9368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9358:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9333:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "9394:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9412:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9394:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9420:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "9386:71:1"
											},
											{
												"id": 555,
												"nodeType": "UncheckedBlock",
												"src": "9467:79:1",
												"statements": [
													{
														"expression": {
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "9491:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "9501:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9491:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "9512:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 551,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9529:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9512:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9491:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"nodeType": "ExpressionStatement",
														"src": "9491:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 556,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9555:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 557,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9571:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9555:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "9555:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9619:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9611:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9611:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9611:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "9593:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9593:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "9588:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9661:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9678:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9670:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9670:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9682:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "9641:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "9641:48:1"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "8806:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9129:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9143:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9135:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9160:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9152:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9134:33:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9185:0:1"
									},
									"scope": 690,
									"src": "9120:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10232:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10250:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10267:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10259:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10259:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10259:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10250:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10271:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10242:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "10242:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10328:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10347:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10339:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10339:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10339:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10328:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10351:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "10320:68:1"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "10399:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10411:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10399:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10399:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "10429:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10399:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10399:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "10459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10475:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "10450:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10450:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "10445:37:1"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "9702:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10128:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10177:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10169:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10136:78:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:0:1"
									},
									"scope": 690,
									"src": "10119:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10890:321:1",
										"statements": [
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10908:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "10900:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"arguments": [
														{
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "10937:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10944:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 636,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "10927:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 641,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "10966:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 642,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "10962:243:1",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "11005:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 649,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "11027:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 650,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "11047:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 648,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:1"
														},
														{
															"id": 663,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 656,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "11138:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 657,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "11145:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 658,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 635,
																					"src": "11154:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 659,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "11173:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 655,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "11129:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "10495:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10779:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10812:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10804:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10835:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10827:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10852:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:1"
									},
									"scope": 690,
									"src": "10770:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "11914:2:1",
										"statements": []
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11804:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11842:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11834:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11856:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11884:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11876:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:1"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:1"
									},
									"scope": 690,
									"src": "11795:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "12622:2:1",
										"statements": []
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12513:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12550:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12542:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12572:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12564:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12592:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12584:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:1"
									},
									"scope": 690,
									"src": "12504:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "1403:11223:1",
							"usedErrors": []
						}
					],
					"src": "105:12522:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						]
					},
					"id": 769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 768,
							"linearizedBaseContracts": [
								768
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 702,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 711,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 768,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 768,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 768,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 768,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 768,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 768,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 769,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 769,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "305:6:3"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 772,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793,
								768
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 793,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 793,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 793,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 794,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							815
						]
					},
					"id": 816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 815,
							"linearizedBaseContracts": [
								815
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 801,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 800,
												"id": 803,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 815,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 815,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 816,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 818,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															831
														],
														"declarations": [
															{
																"constant": false,
																"id": 831,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 830,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 835,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 837,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 829,
															"id": 842,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 845,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 846,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 829,
														"id": 847,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1127,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 876,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 863,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 861,
															"id": 868,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 871,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 872,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 874,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 861,
														"id": 875,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1127,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 918,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 897,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 896,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															899
														],
														"declarations": [
															{
																"constant": false,
																"id": 899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 918,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 905,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 907,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 912,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 915,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 889,
														"id": 917,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1127,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 946,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 939,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 931,
															"id": 938,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 941,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 942,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 944,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 931,
														"id": 945,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1127,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 974,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 967,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 959,
															"id": 966,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 969,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 970,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 972,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 959,
														"id": 973,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1127,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 989,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1127,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1004,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1127,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1127,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1034,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1127,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1127,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 1074,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1067,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1063,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1071,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1062,
														"id": 1073,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 1127,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1089,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1092,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1088,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1094,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1087,
														"id": 1098,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 1127,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1114,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1117,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1113,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1119,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1121,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1112,
														"id": 1123,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 1127,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"Staking.sol": {
				"ast": {
					"absolutePath": "Staking.sol",
					"exportedSymbols": {
						"BillionCashStaking": [
							2515
						],
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							1127
						]
					},
					"id": 2516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:32:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 105,
							"src": "69:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 1128,
							"src": "123:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2516,
							"sourceUnit": 691,
							"src": "182:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1133,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "272:7:6"
									},
									"id": 1134,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:6"
								}
							],
							"canonicalName": "BillionCashStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2515,
							"linearizedBaseContracts": [
								2515,
								104,
								815
							],
							"name": "BillionCashStaking",
							"nameLocation": "250:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1137,
									"libraryName": {
										"id": 1135,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "293:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "287:27:6",
									"typeName": {
										"id": 1136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1140,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "346:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "322:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "365:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "141a2a3f",
									"id": 1143,
									"mutability": "constant",
									"name": "PERCENTS_DAILY",
									"nameLocation": "400:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "376:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "417:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44038f90",
									"id": 1146,
									"mutability": "constant",
									"name": "REFERRAL_PERCENTS",
									"nameLocation": "450:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "426:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "426:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313230",
										"id": 1145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "470:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_120_by_1",
											"typeString": "int_const 120"
										},
										"value": "120"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1149,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "504:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "480:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "480:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "516:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0104db1b",
									"id": 1152,
									"mutability": "constant",
									"name": "STAKING_PERIOD",
									"nameLocation": "553:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "529:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "570:8:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1155,
									"mutability": "mutable",
									"name": "BC",
									"nameLocation": "593:2:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "587:8:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$690",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1153,
											"name": "ERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 690,
											"src": "587:5:6"
										},
										"referencedDeclaration": 690,
										"src": "587:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$690",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1157,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "619:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "604:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1159,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "651:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "636:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b319713",
									"id": 1161,
									"mutability": "mutable",
									"name": "totalWithdrawn",
									"nameLocation": "684:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "669:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "669:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6343867",
									"id": 1163,
									"mutability": "mutable",
									"name": "totalDepositCount",
									"nameLocation": "720:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "705:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "BillionCashStaking.Deposit",
									"id": 1174,
									"members": [
										{
											"constant": false,
											"id": 1165,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "780:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "772:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "805:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "797:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1166,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "797:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1169,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "833:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "825:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1168,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "825:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1171,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "861:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "853:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1170,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "853:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1173,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "884:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1174,
											"src": "879:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1172,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "879:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "753:7:6",
									"nodeType": "StructDefinition",
									"scope": 2515,
									"src": "746:151:6",
									"visibility": "public"
								},
								{
									"canonicalName": "BillionCashStaking.User",
									"id": 1187,
									"members": [
										{
											"constant": false,
											"id": 1178,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "938:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "928:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr",
												"typeString": "struct BillionCashStaking.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 1176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1175,
														"name": "Deposit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1174,
														"src": "928:7:6"
													},
													"referencedDeclaration": 1174,
													"src": "928:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1174_storage_ptr",
														"typeString": "struct BillionCashStaking.Deposit"
													}
												},
												"id": 1177,
												"nodeType": "ArrayTypeName",
												"src": "928:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr",
													"typeString": "struct BillionCashStaking.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "965:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "957:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "957:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1182,
											"mutability": "mutable",
											"name": "bonus",
											"nameLocation": "994:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "986:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1181,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1184,
											"mutability": "mutable",
											"name": "referralCount",
											"nameLocation": "1018:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "1010:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1183,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1010:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1186,
											"mutability": "mutable",
											"name": "referrer",
											"nameLocation": "1050:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1187,
											"src": "1042:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1185,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1042:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "912:4:6",
									"nodeType": "StructDefinition",
									"scope": 2515,
									"src": "905:161:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1192,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "1108:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2515,
									"src": "1074:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
										"typeString": "mapping(address => struct BillionCashStaking.User)"
									},
									"typeName": {
										"id": 1191,
										"keyType": {
											"id": 1188,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1082:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1074:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
											"typeString": "mapping(address => struct BillionCashStaking.User)"
										},
										"valueType": {
											"id": 1190,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1189,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1187,
												"src": "1093:4:6"
											},
											"referencedDeclaration": 1187,
											"src": "1093:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
												"typeString": "struct BillionCashStaking.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "1144:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1196,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1180:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1180:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1195,
																	"name": "getUserDividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2232,
																	"src": "1163:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1163:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1194:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1163:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420486f6c646572",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1197:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8",
																"typeString": "literal_string \"Not Holder\""
															},
															"value": "Not Holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8",
																"typeString": "literal_string \"Not Holder\""
															}
														],
														"id": 1194,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1155:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "1155:55:6"
											},
											{
												"id": 1204,
												"nodeType": "PlaceholderStatement",
												"src": "1221:1:6"
											}
										]
									},
									"id": 1206,
									"name": "onlyhodler",
									"nameLocation": "1131:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:2:6"
									},
									"src": "1122:108:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1210,
									"name": "Newbie",
									"nameLocation": "1244:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1259:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "1251:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1251:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:14:6"
									},
									"src": "1238:27:6"
								},
								{
									"anonymous": false,
									"id": 1216,
									"name": "NewDeposit",
									"nameLocation": "1277:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1304:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1288:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1318:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "1310:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1287:38:6"
									},
									"src": "1271:55:6"
								},
								{
									"anonymous": false,
									"id": 1222,
									"name": "Withdrawn",
									"nameLocation": "1338:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1364:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1348:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "1370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1347:38:6"
									},
									"src": "1332:54:6"
								},
								{
									"anonymous": false,
									"id": 1228,
									"name": "onReinvestment",
									"nameLocation": "1398:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1429:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1413:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1226,
												"indexed": false,
												"mutability": "mutable",
												"name": "reinvestAmount",
												"nameLocation": "1443:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1435:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1412:46:6"
									},
									"src": "1392:67:6"
								},
								{
									"anonymous": false,
									"id": 1236,
									"name": "RefBonus",
									"nameLocation": "1471:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1506:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1490:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1541:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1525:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1568:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1560:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:102:6"
									},
									"src": "1465:117:6"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "1616:69:6",
										"statements": [
											{
												"expression": {
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1242,
														"name": "BC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "1666:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$690",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1243,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "1671:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$690",
															"typeString": "contract ERC20"
														}
													},
													"src": "1666:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$690",
														"typeString": "contract ERC20"
													}
												},
												"id": 1245,
												"nodeType": "ExpressionStatement",
												"src": "1666:11:6"
											}
										]
									},
									"id": 1247,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1602:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$690",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1238,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1237,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "1602:5:6"
													},
													"referencedDeclaration": 690,
													"src": "1602:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$690",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1601:14:6"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1616:0:6"
									},
									"scope": 2515,
									"src": "1590:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "1749:1381:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1257,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1776:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1776:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1261,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1796:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2515",
																		"typeString": "contract BillionCashStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2515",
																		"typeString": "contract BillionCashStaking"
																	}
																],
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1788:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1788:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1788:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "1803:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1254,
															"name": "BC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "1760:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$690",
																"typeString": "contract ERC20"
															}
														},
														"id": 1256,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 304,
														"src": "1760:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1760:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1265,
												"nodeType": "ExpressionStatement",
												"src": "1760:50:6"
											},
											{
												"assignments": [
													1268
												],
												"declarations": [
													{
														"constant": false,
														"id": 1268,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "1836:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "1823:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1267,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1266,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "1823:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "1823:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1273,
												"initialValue": {
													"baseExpression": {
														"id": 1269,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "1843:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1272,
													"indexExpression": {
														"expression": {
															"id": 1270,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1849:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1849:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1843:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1823:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1274,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "1891:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																		"typeString": "struct BillionCashStaking.User storage pointer"
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "1891:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1916:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1908:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1908:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1908:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1891:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1281,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "1935:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																				"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																			}
																		},
																		"id": 1283,
																		"indexExpression": {
																			"id": 1282,
																			"name": "referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1249,
																			"src": "1941:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1935:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage",
																			"typeString": "struct BillionCashStaking.User storage ref"
																		}
																	},
																	"id": 1284,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "1935:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1935:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1969:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1935:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1891:79:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1289,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "1987:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 1290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1999:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1999:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1987:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1891:118:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "1873:199:6",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "2021:51:6",
													"statements": [
														{
															"expression": {
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1294,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "2036:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "referrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1186,
																	"src": "2036:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1297,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "2052:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2036:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "2036:24:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1302,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1268,
															"src": "2088:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1303,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1186,
														"src": "2088:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2113:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1304,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2105:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2105:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2088:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "IfStatement",
												"src": "2084:410:6",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "2117:377:6",
													"statements": [
														{
															"assignments": [
																1310
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1310,
																	"mutability": "mutable",
																	"name": "upline",
																	"nameLocation": "2140:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1352,
																	"src": "2132:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1309,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2132:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1313,
															"initialValue": {
																"expression": {
																	"id": 1311,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1268,
																	"src": "2149:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																		"typeString": "struct BillionCashStaking.User storage pointer"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1186,
																"src": "2149:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2132:30:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1314,
																	"name": "upline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1310,
																	"src": "2183:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2201:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2193:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2193:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2193:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2183:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1351,
															"nodeType": "IfStatement",
															"src": "2179:304:6",
															"trueBody": {
																"id": 1350,
																"nodeType": "Block",
																"src": "2205:278:6",
																"statements": [
																	{
																		"assignments": [
																			1321
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1321,
																				"mutability": "mutable",
																				"name": "_amount",
																				"nameLocation": "2232:7:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1350,
																				"src": "2224:15:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1320,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2224:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1329,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1327,
																					"name": "PERCENTS_DIVIDER",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "2298:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1324,
																							"name": "REFERRAL_PERCENTS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1146,
																							"src": "2253:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1322,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1251,
																							"src": "2242:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1323,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1021,
																						"src": "2242:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1325,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2242:29:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "2242:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2242:91:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2224:109:6"
																	},
																	{
																		"expression": {
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1330,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "2352:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																							"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																						}
																					},
																					"id": 1332,
																					"indexExpression": {
																						"id": 1331,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1310,
																						"src": "2358:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2352:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1187_storage",
																						"typeString": "struct BillionCashStaking.User storage ref"
																					}
																				},
																				"id": 1333,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "bonus",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1182,
																				"src": "2352:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1339,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1321,
																						"src": "2398:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1334,
																								"name": "users",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1192,
																								"src": "2374:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																									"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																								}
																							},
																							"id": 1336,
																							"indexExpression": {
																								"id": 1335,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1310,
																								"src": "2380:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2374:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage",
																								"typeString": "struct BillionCashStaking.User storage ref"
																							}
																						},
																						"id": 1337,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "bonus",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1182,
																						"src": "2374:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1338,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "2374:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2374:32:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2352:54:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1342,
																		"nodeType": "ExpressionStatement",
																		"src": "2352:54:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1344,
																					"name": "upline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1310,
																					"src": "2439:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1345,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2447:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2447:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1347,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1321,
																					"src": "2459:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1343,
																				"name": "RefBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1236,
																				"src": "2430:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2430:37:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1349,
																		"nodeType": "EmitStatement",
																		"src": "2425:42:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1354,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "2510:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "2510:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1356,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2510:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2534:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2510:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"nodeType": "IfStatement",
												"src": "2506:174:6",
												"trueBody": {
													"id": 1378,
													"nodeType": "Block",
													"src": "2537:143:6",
													"statements": [
														{
															"expression": {
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1359,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1268,
																		"src": "2552:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1361,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "checkpoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1180,
																	"src": "2552:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1362,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2570:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2570:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2552:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1365,
															"nodeType": "ExpressionStatement",
															"src": "2552:33:6"
														},
														{
															"expression": {
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1366,
																	"name": "totalUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "2600:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2628:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"id": 1367,
																			"name": "totalUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "2613:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "2613:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2613:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2600:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1372,
															"nodeType": "ExpressionStatement",
															"src": "2600:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1374,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2657:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2657:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1373,
																	"name": "Newbie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1210,
																	"src": "2650:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2650:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1377,
															"nodeType": "EmitStatement",
															"src": "2645:23:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1393,
																					"name": "PERCENTS_DIVIDER",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "2796:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1390,
																							"name": "REFERRAL_PERCENTS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1146,
																							"src": "2773:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1388,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1251,
																							"src": "2762:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1021,
																						"src": "2762:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2762:29:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "2762:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2762:51:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1386,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "2751:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1387,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1006,
																		"src": "2751:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2751:63:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2833:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1397,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2853:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2853:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1399,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "2887:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "2887:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1401,
																		"name": "STAKING_PERIOD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "2905:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2887:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2938:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1385,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "2725:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$1174_storage_ptr_$",
																	"typeString": "type(struct BillionCashStaking.Deposit storage pointer)"
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2725:233:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$1174_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$1174_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1380,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "2692:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "2692:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2692:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$1174_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct BillionCashStaking.Deposit storage ref[] storage pointer,struct BillionCashStaking.Deposit storage ref)"
														}
													},
													"id": 1405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:277:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1406,
												"nodeType": "ExpressionStatement",
												"src": "2692:277:6"
											},
											{
												"expression": {
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1407,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2982:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1410,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "3012:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1408,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "2996:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "2996:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2996:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2982:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "2982:37:6"
											},
											{
												"expression": {
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1414,
														"name": "totalDepositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3030:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3072:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 1415,
																"name": "totalDepositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "3050:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "3050:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3050:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3030:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "3030:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1422,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3103:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3103:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "3115:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1421,
														"name": "NewDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "3092:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3092:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1426,
												"nodeType": "EmitStatement",
												"src": "3087:35:6"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1702:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1716:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1708:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1734:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "1726:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:34:6"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1749:0:6"
									},
									"scope": 2515,
									"src": "1693:1437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1737,
										"nodeType": "Block",
										"src": "3162:3208:6",
										"statements": [
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "3186:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "3173:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1431,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "3173:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "3173:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"baseExpression": {
														"id": 1434,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3193:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1437,
													"indexExpression": {
														"expression": {
															"id": 1435,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3199:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3193:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3173:37:6"
											},
											{
												"assignments": [
													1440
												],
												"declarations": [
													{
														"constant": false,
														"id": 1440,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "3231:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "3223:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1439,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3223:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1441,
												"nodeType": "VariableDeclarationStatement",
												"src": "3223:19:6"
											},
											{
												"assignments": [
													1443
												],
												"declarations": [
													{
														"constant": false,
														"id": 1443,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "3261:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "3253:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1442,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3253:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"nodeType": "VariableDeclarationStatement",
												"src": "3253:17:6"
											},
											{
												"body": {
													"id": 1656,
													"nodeType": "Block",
													"src": "3334:2390:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1457,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1433,
																				"src": "3353:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1178,
																			"src": "3353:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 1460,
																		"indexExpression": {
																			"id": 1459,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "3367:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3353:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "3353:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3379:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3353:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1655,
															"nodeType": "IfStatement",
															"src": "3349:2364:6",
															"trueBody": {
																"id": 1654,
																"nodeType": "Block",
																"src": "3386:2327:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1464,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "3409:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1465,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1178,
																						"src": "3409:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1467,
																					"indexExpression": {
																						"id": 1466,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1446,
																						"src": "3423:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3409:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1171,
																				"src": "3409:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1469,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3436:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3436:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3409:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1629,
																			"nodeType": "Block",
																			"src": "4370:1109:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1546,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1539,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1433,
																										"src": "4397:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1540,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "4397:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1542,
																								"indexExpression": {
																									"id": 1541,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1446,
																									"src": "4411:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4397:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1543,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "4397:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1544,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1433,
																								"src": "4426:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1545,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "4426:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4397:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1627,
																						"nodeType": "Block",
																						"src": "5028:432:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1616,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1589,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1443,
																										"src": "5055:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1614,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "5370:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1609,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1433,
																																	"src": "5318:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1610,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "5318:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1603,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1433,
																																			"src": "5289:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1604,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "5289:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1606,
																																	"indexExpression": {
																																		"id": 1605,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1446,
																																		"src": "5303:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "5289:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1607,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "5289:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1608,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "5289:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1611,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "5289:45:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1599,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "5180:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1596,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "5126:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1590,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1433,
																																							"src": "5098:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1591,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "5098:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1593,
																																					"indexExpression": {
																																						"id": 1592,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1446,
																																						"src": "5112:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "5098:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1594,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "5098:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1595,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "5098:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1597,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "5098:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1598,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "5098:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1600,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "5098:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1601,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "5067:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1602,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "5067:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1612,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "5067:268:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1613,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "5067:302:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1615,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5067:313:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "5055:325:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1617,
																								"nodeType": "ExpressionStatement",
																								"src": "5055:325:6"
																							},
																							{
																								"expression": {
																									"id": 1625,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1618,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1433,
																													"src": "5407:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1621,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1178,
																												"src": "5407:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1622,
																											"indexExpression": {
																												"id": 1620,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1446,
																												"src": "5421:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5407:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1623,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1173,
																										"src": "5407:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1624,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5432:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "5407:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1626,
																								"nodeType": "ExpressionStatement",
																								"src": "5407:29:6"
																							}
																						]
																					},
																					"id": 1628,
																					"nodeType": "IfStatement",
																					"src": "4393:1067:6",
																					"trueBody": {
																						"id": 1588,
																						"nodeType": "Block",
																						"src": "4443:579:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1577,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1547,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1443,
																										"src": "4470:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1575,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "4932:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1567,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1433,
																																			"src": "4805:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1568,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "4805:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1570,
																																	"indexExpression": {
																																		"id": 1569,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1446,
																																		"src": "4819:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "4805:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1571,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "4805:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1561,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1433,
																																			"src": "4738:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1562,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "4738:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1564,
																																	"indexExpression": {
																																		"id": 1563,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1446,
																																		"src": "4752:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "4738:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1565,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "4738:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1566,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "4738:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1572,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4738:128:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1557,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "4595:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1554,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "4541:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1548,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1433,
																																							"src": "4513:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1549,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "4513:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1551,
																																					"indexExpression": {
																																						"id": 1550,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1446,
																																						"src": "4527:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "4513:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1552,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "4513:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1553,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "4513:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1555,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "4513:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1556,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "4513:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1558,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "4513:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1559,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "4482:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1560,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "4482:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1573,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4482:415:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1574,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "4482:449:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1576,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4482:460:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4470:472:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1578,
																								"nodeType": "ExpressionStatement",
																								"src": "4470:472:6"
																							},
																							{
																								"expression": {
																									"id": 1586,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1579,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1433,
																													"src": "4969:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1582,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1178,
																												"src": "4969:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1583,
																											"indexExpression": {
																												"id": 1581,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1446,
																												"src": "4983:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "4969:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1584,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1173,
																										"src": "4969:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1585,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "4994:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "4969:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1587,
																								"nodeType": "ExpressionStatement",
																								"src": "4969:29:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 1630,
																		"nodeType": "IfStatement",
																		"src": "3405:2074:6",
																		"trueBody": {
																			"id": 1538,
																			"nodeType": "Block",
																			"src": "3453:911:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1479,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1472,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1433,
																										"src": "3480:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1473,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "3480:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1475,
																								"indexExpression": {
																									"id": 1474,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1446,
																									"src": "3494:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3480:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1476,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "3480:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1477,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1433,
																								"src": "3509:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1478,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "3509:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3480:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1536,
																						"nodeType": "Block",
																						"src": "3974:371:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1534,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1510,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1443,
																										"src": "4001:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1532,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "4281:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1527,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1433,
																																	"src": "4225:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1528,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "4225:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1524,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "4205:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1525,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "4205:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1526,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "4205:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1529,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4205:36:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1520,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "4126:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1517,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "4072:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1511,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1433,
																																							"src": "4044:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1512,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "4044:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1514,
																																					"indexExpression": {
																																						"id": 1513,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1446,
																																						"src": "4058:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "4044:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1515,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "4044:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1516,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "4044:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1518,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "4044:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1519,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "4044:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1521,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "4044:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1522,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "4013:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1523,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "4013:191:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1530,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4013:229:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1531,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "4013:233:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1533,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4013:308:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4001:320:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1535,
																								"nodeType": "ExpressionStatement",
																								"src": "4001:320:6"
																							}
																						]
																					},
																					"id": 1537,
																					"nodeType": "IfStatement",
																					"src": "3476:869:6",
																					"trueBody": {
																						"id": 1509,
																						"nodeType": "Block",
																						"src": "3526:442:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1507,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1480,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1443,
																										"src": "3553:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1505,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "3934:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1497,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1433,
																																			"src": "3841:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1498,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "3841:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1500,
																																	"indexExpression": {
																																		"id": 1499,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1446,
																																		"src": "3855:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "3841:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1501,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "3841:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1494,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "3821:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1495,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "3821:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1496,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "3821:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1502,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "3821:47:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1490,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "3678:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1487,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "3624:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1481,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1433,
																																							"src": "3596:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1482,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "3596:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1484,
																																					"indexExpression": {
																																						"id": 1483,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1446,
																																						"src": "3610:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "3596:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1485,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "3596:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1486,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "3596:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1488,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "3596:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1489,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "3596:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1491,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "3596:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1492,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "3565:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1493,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "3565:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1503,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "3565:334:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1504,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "3565:368:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1506,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "3565:379:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "3553:391:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1508,
																								"nodeType": "ExpressionStatement",
																								"src": "3553:391:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1631,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1433,
																							"src": "5499:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1634,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1178,
																						"src": "5499:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1635,
																					"indexExpression": {
																						"id": 1633,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1446,
																						"src": "5513:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5499:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1636,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "withdrawn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1167,
																				"src": "5499:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1643,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1443,
																						"src": "5581:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1637,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1433,
																									"src": "5528:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																										"typeString": "struct BillionCashStaking.User storage pointer"
																									}
																								},
																								"id": 1638,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "deposits",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1178,
																								"src": "5528:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																								}
																							},
																							"id": 1640,
																							"indexExpression": {
																								"id": 1639,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1446,
																								"src": "5542:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5528:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																							}
																						},
																						"id": 1641,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "withdrawn",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1167,
																						"src": "5528:26:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1642,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "5528:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5528:81:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5499:110:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "5499:110:6"
																	},
																	{
																		"documentation": "changing of storage data",
																		"expression": {
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1647,
																				"name": "totalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1440,
																				"src": "5657:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1650,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1443,
																						"src": "5687:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1648,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1440,
																						"src": "5671:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "5671:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5671:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5657:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1653,
																		"nodeType": "ExpressionStatement",
																		"src": "5657:40:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1449,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1446,
														"src": "3303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1450,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "3307:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "3307:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3307:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3303:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1657,
												"initializationExpression": {
													"assignments": [
														1446
													],
													"declarations": [
														{
															"constant": false,
															"id": 1446,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3296:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1657,
															"src": "3288:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1445,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3288:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1448,
													"initialValue": {
														"hexValue": "30",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3300:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3288:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3329:3:6",
														"subExpression": {
															"id": 1454,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "3329:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1456,
													"nodeType": "ExpressionStatement",
													"src": "3329:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3283:2441:6"
											},
											{
												"assignments": [
													1659
												],
												"declarations": [
													{
														"constant": false,
														"id": 1659,
														"mutability": "mutable",
														"name": "referralBonus",
														"nameLocation": "5744:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "5736:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1658,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5736:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1664,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1661,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5781:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5781:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1660,
														"name": "getUserReferralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2245,
														"src": "5760:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5760:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5736:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1665,
														"name": "referralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1659,
														"src": "5807:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5823:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5807:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1682,
												"nodeType": "IfStatement",
												"src": "5803:123:6",
												"trueBody": {
													"id": 1681,
													"nodeType": "Block",
													"src": "5826:100:6",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1668,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "5841:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1671,
																			"name": "referralBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1659,
																			"src": "5871:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1669,
																			"name": "totalAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1440,
																			"src": "5855:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "5855:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5855:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5841:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "5841:44:6"
														},
														{
															"expression": {
																"id": 1679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1675,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1433,
																		"src": "5900:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "bonus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1182,
																	"src": "5900:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5913:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5900:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1680,
															"nodeType": "ExpressionStatement",
															"src": "5900:14:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1684,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "5946:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5960:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5946:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220686173206e6f206469766964656e6473",
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5963:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
																"typeString": "literal_string \"User has no dividends\""
															},
															"value": "User has no dividends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
																"typeString": "literal_string \"User has no dividends\""
															}
														],
														"id": 1683,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5938:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5938:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1689,
												"nodeType": "ExpressionStatement",
												"src": "5938:49:6"
											},
											{
												"assignments": [
													1691
												],
												"declarations": [
													{
														"constant": false,
														"id": 1691,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "6008:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1737,
														"src": "6000:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1690,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6000:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1699,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1696,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6047:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2515",
																		"typeString": "contract BillionCashStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2515",
																		"typeString": "contract BillionCashStaking"
																	}
																],
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6039:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1694,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6039:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6039:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1692,
															"name": "BC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "6026:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$690",
																"typeString": "contract ERC20"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "6026:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6026:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6000:53:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1700,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1691,
														"src": "6068:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1701,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1440,
														"src": "6086:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6068:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1708,
												"nodeType": "IfStatement",
												"src": "6064:91:6",
												"trueBody": {
													"id": 1707,
													"nodeType": "Block",
													"src": "6099:56:6",
													"statements": [
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1703,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1440,
																	"src": "6114:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1704,
																	"name": "contractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "6128:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6114:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "6114:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1709,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "6167:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "6167:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1712,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6185:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6185:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6167:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "6167:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1719,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6225:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6225:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1721,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "6237:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1716,
															"name": "BC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "6213:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$690",
																"typeString": "contract ERC20"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 228,
														"src": "6213:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6213:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "6213:36:6"
											},
											{
												"expression": {
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1724,
														"name": "totalWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "6262:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1727,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "6298:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1725,
																"name": "totalWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "6279:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "6279:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6279:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6262:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "6262:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1732,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6338:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6338:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1734,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1440,
															"src": "6350:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1731,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "6328:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6328:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1736,
												"nodeType": "EmitStatement",
												"src": "6323:39:6"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "3147:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3152:2:6"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3162:0:6"
									},
									"scope": 2515,
									"src": "3138:3232:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2029,
										"nodeType": "Block",
										"src": "6416:3224:6",
										"statements": [
											{
												"assignments": [
													1745
												],
												"declarations": [
													{
														"constant": false,
														"id": 1745,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "6440:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "6427:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1744,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1743,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "6427:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "6427:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1750,
												"initialValue": {
													"baseExpression": {
														"id": 1746,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "6447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1749,
													"indexExpression": {
														"expression": {
															"id": 1747,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6453:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6453:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6447:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6427:37:6"
											},
											{
												"assignments": [
													1752
												],
												"declarations": [
													{
														"constant": false,
														"id": 1752,
														"mutability": "mutable",
														"name": "_dividends",
														"nameLocation": "6511:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "6503:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1754,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6541:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6541:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1753,
														"name": "getUserDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "6524:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6524:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6503:49:6"
											},
											{
												"assignments": [
													1759
												],
												"declarations": [
													{
														"constant": false,
														"id": 1759,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "6612:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "6604:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6604:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1760,
												"nodeType": "VariableDeclarationStatement",
												"src": "6604:19:6"
											},
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "6642:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2029,
														"src": "6634:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6634:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1763,
												"nodeType": "VariableDeclarationStatement",
												"src": "6634:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1770,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1752,
																	"src": "6723:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6752:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1772,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6772:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6772:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1774,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6806:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6806:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1776,
																		"name": "STAKING_PERIOD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "6824:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6806:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6857:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1769,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "6697:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$1174_storage_ptr_$",
																	"typeString": "type(struct BillionCashStaking.Deposit storage pointer)"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6697:180:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$1174_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$1174_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1764,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "6664:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "6664:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6664:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$1174_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct BillionCashStaking.Deposit storage ref[] storage pointer,struct BillionCashStaking.Deposit storage ref)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6664:224:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "6664:224:6"
											},
											{
												"body": {
													"id": 1993,
													"nodeType": "Block",
													"src": "6952:2390:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1794,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1745,
																				"src": "6971:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 1795,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1178,
																			"src": "6971:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 1797,
																		"indexExpression": {
																			"id": 1796,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1783,
																			"src": "6985:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6971:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "6971:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6997:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6971:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1992,
															"nodeType": "IfStatement",
															"src": "6967:2364:6",
															"trueBody": {
																"id": 1991,
																"nodeType": "Block",
																"src": "7004:2327:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1801,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1745,
																							"src": "7027:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1802,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1178,
																						"src": "7027:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1804,
																					"indexExpression": {
																						"id": 1803,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1783,
																						"src": "7041:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7027:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1805,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1171,
																				"src": "7027:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1806,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "7054:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "7054:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7027:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1966,
																			"nodeType": "Block",
																			"src": "7988:1109:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1883,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1876,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1745,
																										"src": "8015:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1877,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "8015:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1879,
																								"indexExpression": {
																									"id": 1878,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1783,
																									"src": "8029:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8015:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1880,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "8015:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1881,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1745,
																								"src": "8044:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1882,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "8044:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8015:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1964,
																						"nodeType": "Block",
																						"src": "8646:432:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1953,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1926,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1762,
																										"src": "8673:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1951,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "8988:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1946,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1745,
																																	"src": "8936:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1947,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "8936:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1940,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1745,
																																			"src": "8907:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1941,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "8907:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1943,
																																	"indexExpression": {
																																		"id": 1942,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1783,
																																		"src": "8921:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "8907:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1944,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "8907:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1945,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "8907:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1948,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "8907:45:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1936,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "8798:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1933,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "8744:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1927,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1745,
																																							"src": "8716:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1928,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "8716:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1930,
																																					"indexExpression": {
																																						"id": 1929,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1783,
																																						"src": "8730:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "8716:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1931,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "8716:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1932,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "8716:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1934,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "8716:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1935,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "8716:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1937,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "8716:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1938,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "8685:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1939,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "8685:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1949,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "8685:268:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1950,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "8685:302:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1952,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8685:313:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8673:325:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1954,
																								"nodeType": "ExpressionStatement",
																								"src": "8673:325:6"
																							},
																							{
																								"expression": {
																									"id": 1962,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1955,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1745,
																													"src": "9025:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1958,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1178,
																												"src": "9025:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1959,
																											"indexExpression": {
																												"id": 1957,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1783,
																												"src": "9039:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9025:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1960,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1173,
																										"src": "9025:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1961,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9050:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "9025:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1963,
																								"nodeType": "ExpressionStatement",
																								"src": "9025:29:6"
																							}
																						]
																					},
																					"id": 1965,
																					"nodeType": "IfStatement",
																					"src": "8011:1067:6",
																					"trueBody": {
																						"id": 1925,
																						"nodeType": "Block",
																						"src": "8061:579:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1914,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1884,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1762,
																										"src": "8088:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1912,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "8550:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1904,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1745,
																																			"src": "8423:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1905,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "8423:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1907,
																																	"indexExpression": {
																																		"id": 1906,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1783,
																																		"src": "8437:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "8423:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1908,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "8423:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1898,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1745,
																																			"src": "8356:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1899,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "8356:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1901,
																																	"indexExpression": {
																																		"id": 1900,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1783,
																																		"src": "8370:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "8356:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1902,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "8356:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1903,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "8356:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1909,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "8356:128:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1894,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "8213:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1891,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "8159:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1885,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1745,
																																							"src": "8131:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1886,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "8131:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1888,
																																					"indexExpression": {
																																						"id": 1887,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1783,
																																						"src": "8145:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "8131:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1889,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "8131:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1890,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "8131:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1892,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "8131:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1893,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "8131:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1895,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "8131:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1896,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "8100:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1897,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "8100:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1910,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "8100:415:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1911,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "8100:449:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1913,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8100:460:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8088:472:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1915,
																								"nodeType": "ExpressionStatement",
																								"src": "8088:472:6"
																							},
																							{
																								"expression": {
																									"id": 1923,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1916,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1745,
																													"src": "8587:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1919,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1178,
																												"src": "8587:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1920,
																											"indexExpression": {
																												"id": 1918,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1783,
																												"src": "8601:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "8587:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1921,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1173,
																										"src": "8587:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1922,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "8612:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "8587:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1924,
																								"nodeType": "ExpressionStatement",
																								"src": "8587:29:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 1967,
																		"nodeType": "IfStatement",
																		"src": "7023:2074:6",
																		"trueBody": {
																			"id": 1875,
																			"nodeType": "Block",
																			"src": "7071:911:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1816,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1809,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1745,
																										"src": "7098:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1810,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "7098:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1812,
																								"indexExpression": {
																									"id": 1811,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1783,
																									"src": "7112:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "7098:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1813,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "7098:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1814,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1745,
																								"src": "7127:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1815,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "7127:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "7098:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1873,
																						"nodeType": "Block",
																						"src": "7592:371:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1871,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1847,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1762,
																										"src": "7619:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1869,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "7899:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1864,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1745,
																																	"src": "7843:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1865,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "7843:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1861,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "7823:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1862,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "7823:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1863,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "7823:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1866,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "7823:36:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1857,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "7744:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1854,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "7690:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1848,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1745,
																																							"src": "7662:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1849,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "7662:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1851,
																																					"indexExpression": {
																																						"id": 1850,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1783,
																																						"src": "7676:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "7662:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1852,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "7662:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1853,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "7662:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1855,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "7662:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1856,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "7662:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1858,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "7662:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1859,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "7631:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1860,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "7631:191:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1867,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "7631:229:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1868,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "7631:233:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1870,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7631:308:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7619:320:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1872,
																								"nodeType": "ExpressionStatement",
																								"src": "7619:320:6"
																							}
																						]
																					},
																					"id": 1874,
																					"nodeType": "IfStatement",
																					"src": "7094:869:6",
																					"trueBody": {
																						"id": 1846,
																						"nodeType": "Block",
																						"src": "7144:442:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1844,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1817,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1762,
																										"src": "7171:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1842,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "7552:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 1834,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1745,
																																			"src": "7459:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1835,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "7459:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 1837,
																																	"indexExpression": {
																																		"id": 1836,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1783,
																																		"src": "7473:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "7459:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 1838,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "7459:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1831,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "7439:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1832,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "7439:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1833,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "7439:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1839,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "7439:47:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1827,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "7296:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1824,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "7242:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1818,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1745,
																																							"src": "7214:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1819,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "7214:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1821,
																																					"indexExpression": {
																																						"id": 1820,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1783,
																																						"src": "7228:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "7214:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1822,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "7214:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1823,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "7214:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1825,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "7214:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1826,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "7214:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1828,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "7214:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1829,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "7183:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1830,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "7183:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1840,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "7183:334:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1841,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "7183:368:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1843,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "7183:379:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "7171:391:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1845,
																								"nodeType": "ExpressionStatement",
																								"src": "7171:391:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1982,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1968,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1745,
																							"src": "9117:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1971,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1178,
																						"src": "9117:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1972,
																					"indexExpression": {
																						"id": 1970,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1783,
																						"src": "9131:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9117:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1973,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "withdrawn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1167,
																				"src": "9117:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1980,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1762,
																						"src": "9199:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1974,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1745,
																									"src": "9146:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																										"typeString": "struct BillionCashStaking.User storage pointer"
																									}
																								},
																								"id": 1975,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "deposits",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1178,
																								"src": "9146:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																								}
																							},
																							"id": 1977,
																							"indexExpression": {
																								"id": 1976,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1783,
																								"src": "9160:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "9146:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																							}
																						},
																						"id": 1978,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "withdrawn",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1167,
																						"src": "9146:26:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1979,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "9146:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9146:81:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9117:110:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1983,
																		"nodeType": "ExpressionStatement",
																		"src": "9117:110:6"
																	},
																	{
																		"documentation": "changing of storage data",
																		"expression": {
																			"id": 1989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1984,
																				"name": "totalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "9275:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1987,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1762,
																						"src": "9305:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1985,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1759,
																						"src": "9289:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "9289:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1988,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9289:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9275:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1990,
																		"nodeType": "ExpressionStatement",
																		"src": "9275:40:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1786,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1783,
														"src": "6921:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1787,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1745,
																"src": "6925:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "6925:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6925:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6921:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1994,
												"initializationExpression": {
													"assignments": [
														1783
													],
													"declarations": [
														{
															"constant": false,
															"id": 1783,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6914:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1994,
															"src": "6906:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1782,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6906:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1785,
													"initialValue": {
														"hexValue": "30",
														"id": 1784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6918:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6906:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6947:3:6",
														"subExpression": {
															"id": 1791,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1783,
															"src": "6947:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1793,
													"nodeType": "ExpressionStatement",
													"src": "6947:3:6"
												},
												"nodeType": "ForStatement",
												"src": "6901:2441:6"
											},
											{
												"expression": {
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1995,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "9354:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1997,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1180,
														"src": "9354:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1998,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "9372:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "9372:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9354:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "9354:33:6"
											},
											{
												"expression": {
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2002,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "9400:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2005,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "9430:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2003,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "9414:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "9414:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9414:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9400:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "9400:41:6"
											},
											{
												"expression": {
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2009,
														"name": "totalDepositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "9452:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2012,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9494:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 2010,
																"name": "totalDepositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "9472:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "9472:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9472:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9452:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2015,
												"nodeType": "ExpressionStatement",
												"src": "9452:44:6"
											},
											{
												"expression": {
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2016,
														"name": "totalWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "9507:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2019,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1759,
																"src": "9543:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2017,
																"name": "totalWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "9524:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "9524:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2020,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9524:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9507:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "9507:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2024,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9609:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9609:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2026,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1752,
															"src": "9621:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2023,
														"name": "onReinvestment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1228,
														"src": "9594:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9594:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2028,
												"nodeType": "EmitStatement",
												"src": "9589:43:6"
											}
										]
									},
									"functionSelector": "f69e2046",
									"id": 2030,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1740,
												"name": "onlyhodler",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1206,
												"src": "6405:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6405:10:6"
										}
									],
									"name": "compound",
									"nameLocation": "6387:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6395:2:6"
									},
									"returnParameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6416:0:6"
									},
									"scope": 2515,
									"src": "6378:3262:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "9757:2341:6",
										"statements": [
											{
												"assignments": [
													2039
												],
												"declarations": [
													{
														"constant": false,
														"id": 2039,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "9781:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "9768:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2038,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2037,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "9768:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "9768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2043,
												"initialValue": {
													"baseExpression": {
														"id": 2040,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "9788:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2042,
													"indexExpression": {
														"id": 2041,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2032,
														"src": "9794:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9788:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9768:38:6"
											},
											{
												"assignments": [
													2045
												],
												"declarations": [
													{
														"constant": false,
														"id": 2045,
														"mutability": "mutable",
														"name": "totalDividends",
														"nameLocation": "9827:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "9819:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2044,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9819:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2046,
												"nodeType": "VariableDeclarationStatement",
												"src": "9819:22:6"
											},
											{
												"assignments": [
													2048
												],
												"declarations": [
													{
														"constant": false,
														"id": 2048,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "9860:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2231,
														"src": "9852:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2047,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9852:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2049,
												"nodeType": "VariableDeclarationStatement",
												"src": "9852:17:6"
											},
											{
												"body": {
													"id": 2227,
													"nodeType": "Block",
													"src": "9933:2124:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2062,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2039,
																				"src": "9952:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 2063,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1178,
																			"src": "9952:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 2065,
																		"indexExpression": {
																			"id": 2064,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2051,
																			"src": "9966:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9952:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 2066,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1173,
																	"src": "9952:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9978:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "9952:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2226,
															"nodeType": "IfStatement",
															"src": "9948:2098:6",
															"trueBody": {
																"id": 2225,
																"nodeType": "Block",
																"src": "9985:2061:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 2069,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2039,
																							"src": "10008:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 2070,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1178,
																						"src": "10008:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 2072,
																					"indexExpression": {
																						"id": 2071,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2051,
																						"src": "10022:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10008:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 2073,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1171,
																				"src": "10008:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 2074,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "10035:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "10035:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10008:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2216,
																			"nodeType": "Block",
																			"src": "10969:997:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2151,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 2144,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2039,
																										"src": "10996:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 2145,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "10996:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 2147,
																								"indexExpression": {
																									"id": 2146,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2051,
																									"src": "11010:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10996:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 2148,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "10996:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 2149,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2039,
																								"src": "11025:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 2150,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "11025:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10996:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 2214,
																						"nodeType": "Block",
																						"src": "11571:376:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2212,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2185,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2048,
																										"src": "11598:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 2210,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "11913:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 2205,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 2039,
																																	"src": "11861:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 2206,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "11861:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 2199,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2039,
																																			"src": "11832:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2200,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "11832:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 2202,
																																	"indexExpression": {
																																		"id": 2201,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 2051,
																																		"src": "11846:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "11832:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 2203,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "11832:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2204,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "11832:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2207,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "11832:45:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 2195,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "11723:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 2192,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "11669:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 2186,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 2039,
																																							"src": "11641:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 2187,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "11641:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 2189,
																																					"indexExpression": {
																																						"id": 2188,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 2051,
																																						"src": "11655:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "11641:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 2190,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "11641:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2191,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "11641:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2193,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "11641:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2194,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "11641:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2196,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "11641:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 2197,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "11610:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2198,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "11610:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2208,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "11610:268:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2209,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "11610:302:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2211,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11610:313:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11598:325:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2213,
																								"nodeType": "ExpressionStatement",
																								"src": "11598:325:6"
																							}
																						]
																					},
																					"id": 2215,
																					"nodeType": "IfStatement",
																					"src": "10992:955:6",
																					"trueBody": {
																						"id": 2184,
																						"nodeType": "Block",
																						"src": "11042:523:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2182,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2152,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2048,
																										"src": "11069:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 2180,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "11531:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 2172,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2039,
																																			"src": "11404:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2173,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "11404:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 2175,
																																	"indexExpression": {
																																		"id": 2174,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 2051,
																																		"src": "11418:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "11404:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 2176,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "11404:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 2166,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2039,
																																			"src": "11337:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2167,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "11337:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 2169,
																																	"indexExpression": {
																																		"id": 2168,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 2051,
																																		"src": "11351:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "11337:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 2170,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "endTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1171,
																																"src": "11337:24:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2171,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "11337:28:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2177,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "11337:128:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 2162,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "11194:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 2159,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "11140:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 2153,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 2039,
																																							"src": "11112:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 2154,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "11112:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 2156,
																																					"indexExpression": {
																																						"id": 2155,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 2051,
																																						"src": "11126:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "11112:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 2157,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "11112:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2158,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "11112:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2160,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "11112:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2161,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "11112:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2163,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "11112:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 2164,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "11081:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2165,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "11081:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2178,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "11081:415:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2179,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "11081:449:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2181,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11081:460:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11069:472:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2183,
																								"nodeType": "ExpressionStatement",
																								"src": "11069:472:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 2217,
																		"nodeType": "IfStatement",
																		"src": "10004:1962:6",
																		"trueBody": {
																			"id": 2143,
																			"nodeType": "Block",
																			"src": "10052:911:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2084,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 2077,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2039,
																										"src": "10079:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 2078,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "10079:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 2080,
																								"indexExpression": {
																									"id": 2079,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2051,
																									"src": "10093:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10079:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 2081,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1169,
																							"src": "10079:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 2082,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2039,
																								"src": "10108:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 2083,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1180,
																							"src": "10108:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10079:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 2141,
																						"nodeType": "Block",
																						"src": "10573:371:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2139,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2115,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2048,
																										"src": "10600:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 2137,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "10880:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 2132,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 2039,
																																	"src": "10824:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 2133,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1180,
																																"src": "10824:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 2129,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "10804:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 2130,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "10804:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2131,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "10804:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2134,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "10804:36:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 2125,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "10725:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 2122,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "10671:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 2116,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 2039,
																																							"src": "10643:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 2117,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "10643:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 2119,
																																					"indexExpression": {
																																						"id": 2118,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 2051,
																																						"src": "10657:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "10643:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 2120,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "10643:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2121,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "10643:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2123,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "10643:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2124,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "10643:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2126,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "10643:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 2127,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "10612:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2128,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "10612:191:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2135,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "10612:229:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2136,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "10612:233:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2138,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "10612:308:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "10600:320:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2140,
																								"nodeType": "ExpressionStatement",
																								"src": "10600:320:6"
																							}
																						]
																					},
																					"id": 2142,
																					"nodeType": "IfStatement",
																					"src": "10075:869:6",
																					"trueBody": {
																						"id": 2114,
																						"nodeType": "Block",
																						"src": "10125:442:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2112,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2085,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2048,
																										"src": "10152:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 2110,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "10533:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"baseExpression": {
																																		"expression": {
																																			"id": 2102,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2039,
																																			"src": "10440:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2103,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "deposits",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "10440:13:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																		}
																																	},
																																	"id": 2105,
																																	"indexExpression": {
																																		"id": 2104,
																																		"name": "i",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 2051,
																																		"src": "10454:1:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"isConstant": false,
																																	"isLValue": true,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"nodeType": "IndexAccess",
																																	"src": "10440:16:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																		"typeString": "struct BillionCashStaking.Deposit storage ref"
																																	}
																																},
																																"id": 2106,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "startTime",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1169,
																																"src": "10440:26:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 2099,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "10420:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 2100,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "10420:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2101,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "10420:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2107,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "10420:47:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 2095,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "10277:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 2092,
																																				"name": "PERCENTS_DAILY",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "10223:14:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 2086,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 2039,
																																							"src": "10195:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 2087,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1178,
																																						"src": "10195:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 2089,
																																					"indexExpression": {
																																						"id": 2088,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 2051,
																																						"src": "10209:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "10195:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 2090,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1165,
																																				"src": "10195:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2091,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "10195:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2093,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "10195:43:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2094,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "10195:47:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2096,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "10195:129:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 2097,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "10164:187:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2098,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "10164:221:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2108,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "10164:334:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2109,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "10164:368:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2111,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "10164:379:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "10152:391:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2113,
																								"nodeType": "ExpressionStatement",
																								"src": "10152:391:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 2223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2218,
																				"name": "totalDividends",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2045,
																				"src": "11984:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2221,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2048,
																						"src": "12020:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2219,
																						"name": "totalDividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2045,
																						"src": "12001:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2220,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "12001:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2222,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12001:29:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11984:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2224,
																		"nodeType": "ExpressionStatement",
																		"src": "11984:46:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2054,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "9902:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2055,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2039,
																"src": "9906:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2056,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "9906:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9906:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9902:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2228,
												"initializationExpression": {
													"assignments": [
														2051
													],
													"declarations": [
														{
															"constant": false,
															"id": 2051,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9895:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2228,
															"src": "9887:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2050,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9887:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2053,
													"initialValue": {
														"hexValue": "30",
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9899:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9887:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9928:3:6",
														"subExpression": {
															"id": 2059,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2051,
															"src": "9928:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2061,
													"nodeType": "ExpressionStatement",
													"src": "9928:3:6"
												},
												"nodeType": "ForStatement",
												"src": "9882:2175:6"
											},
											{
												"expression": {
													"id": 2229,
													"name": "totalDividends",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2045,
													"src": "12076:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2036,
												"id": 2230,
												"nodeType": "Return",
												"src": "12069:21:6"
											}
										]
									},
									"functionSelector": "040a772e",
									"id": 2232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDividends",
									"nameLocation": "9657:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "9682:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "9674:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9674:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9673:21:6"
									},
									"returnParameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2232,
												"src": "9743:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9743:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9742:9:6"
									},
									"scope": 2515,
									"src": "9648:2450:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2244,
										"nodeType": "Block",
										"src": "12219:50:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2239,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12237:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2241,
														"indexExpression": {
															"id": 2240,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "12243:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12237:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "bonus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1182,
													"src": "12237:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2243,
												"nodeType": "Return",
												"src": "12230:31:6"
											}
										]
									},
									"functionSelector": "e85abe09",
									"id": 2245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferralBonus",
									"nameLocation": "12115:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "12144:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "12136:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12136:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12135:21:6"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2245,
												"src": "12205:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12204:9:6"
									},
									"scope": 2515,
									"src": "12106:163:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2257,
										"nodeType": "Block",
										"src": "12390:58:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2252,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12408:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2254,
														"indexExpression": {
															"id": 2253,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2247,
															"src": "12414:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12408:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referralCount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1184,
													"src": "12408:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2251,
												"id": 2256,
												"nodeType": "Return",
												"src": "12401:39:6"
											}
										]
									},
									"functionSelector": "c8a22eb4",
									"id": 2258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferralCount",
									"nameLocation": "12286:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "12315:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "12307:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12307:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12306:21:6"
									},
									"returnParameters": {
										"id": 2251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "12376:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12376:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12375:9:6"
									},
									"scope": 2515,
									"src": "12277:171:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "12564:53:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2265,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12582:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2267,
														"indexExpression": {
															"id": 2266,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2260,
															"src": "12588:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12582:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1186,
													"src": "12582:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2264,
												"id": 2269,
												"nodeType": "Return",
												"src": "12575:34:6"
											}
										]
									},
									"functionSelector": "36144c9a",
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferrer",
									"nameLocation": "12465:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "12489:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "12481:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12481:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12480:21:6"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "12550:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12550:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12549:9:6"
									},
									"scope": 2515,
									"src": "12456:161:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2283,
										"nodeType": "Block",
										"src": "12735:55:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2278,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "12753:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2280,
														"indexExpression": {
															"id": 2279,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2273,
															"src": "12759:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12753:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "checkpoint",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1180,
													"src": "12753:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2277,
												"id": 2282,
												"nodeType": "Return",
												"src": "12746:36:6"
											}
										]
									},
									"functionSelector": "d7ffca91",
									"id": 2284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCheckpoint",
									"nameLocation": "12634:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "12660:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "12652:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12651:21:6"
									},
									"returnParameters": {
										"id": 2277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2284,
												"src": "12721:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12721:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12720:9:6"
									},
									"scope": 2515,
									"src": "12625:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2300,
										"nodeType": "Block",
										"src": "12907:139:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2296,
																	"name": "userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "13011:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2295,
																"name": "getUserDividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2232,
																"src": "12994:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12994:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2292,
																	"name": "userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2286,
																	"src": "12959:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2291,
																"name": "getUserReferralBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2245,
																"src": "12938:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12938:33:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "12938:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12938:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2290,
												"id": 2299,
												"nodeType": "Return",
												"src": "12918:120:6"
											}
										]
									},
									"functionSelector": "153ab9df",
									"id": 2301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAvailable",
									"nameLocation": "12807:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2286,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "12832:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "12824:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12824:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12823:21:6"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2301,
												"src": "12893:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12892:9:6"
									},
									"scope": 2515,
									"src": "12798:248:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2357,
										"nodeType": "Block",
										"src": "13120:440:6",
										"statements": [
											{
												"assignments": [
													2310
												],
												"declarations": [
													{
														"constant": false,
														"id": 2310,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "13144:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2357,
														"src": "13131:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2309,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2308,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "13131:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "13131:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2314,
												"initialValue": {
													"baseExpression": {
														"id": 2311,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "13151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2313,
													"indexExpression": {
														"id": 2312,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "13157:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13151:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13131:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2315,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2310,
																"src": "13186:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "13186:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "13186:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13209:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13186:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2355,
													"nodeType": "Block",
													"src": "13514:39:6",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13536:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2307,
															"id": 2354,
															"nodeType": "Return",
															"src": "13529:12:6"
														}
													]
												},
												"id": 2356,
												"nodeType": "IfStatement",
												"src": "13182:371:6",
												"trueBody": {
													"id": 2352,
													"nodeType": "Block",
													"src": "13212:296:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2320,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2310,
																				"src": "13249:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 2321,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1178,
																			"src": "13249:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 2327,
																		"indexExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"expression": {
																						"id": 2322,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2310,
																						"src": "13263:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																							"typeString": "struct BillionCashStaking.User storage pointer"
																						}
																					},
																					"id": 2323,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "deposits",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1178,
																					"src": "13263:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																					}
																				},
																				"id": 2324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "13263:20:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13286:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "13263:24:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "13249:39:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 2328,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "withdrawn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1167,
																	"src": "13249:49:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "313030",
																			"id": 2342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13378:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "333635",
																					"id": 2339,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "13369:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_365_by_1",
																						"typeString": "int_const 365"
																					},
																					"value": "365"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_365_by_1",
																						"typeString": "int_const 365"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"expression": {
																								"id": 2329,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2310,
																								"src": "13318:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 2330,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "deposits",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1178,
																							"src": "13318:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																							}
																						},
																						"id": 2336,
																						"indexExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2335,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"expression": {
																										"id": 2331,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2310,
																										"src": "13332:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 2332,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1178,
																									"src": "13332:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 2333,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "length",
																								"nodeType": "MemberAccess",
																								"src": "13332:20:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"hexValue": "31",
																								"id": 2334,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "13355:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_1_by_1",
																									"typeString": "int_const 1"
																								},
																								"value": "1"
																							},
																							"src": "13332:24:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13318:39:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref"
																						}
																					},
																					"id": 2337,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "amount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1165,
																					"src": "13318:46:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1021,
																				"src": "13318:50:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13318:55:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1036,
																		"src": "13318:59:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13318:64:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13249:133:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2350,
																"nodeType": "Block",
																"src": "13450:47:6",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "66616c7365",
																			"id": 2348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13476:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"functionReturnParameters": 2307,
																		"id": 2349,
																		"nodeType": "Return",
																		"src": "13469:12:6"
																	}
																]
															},
															"id": 2351,
															"nodeType": "IfStatement",
															"src": "13227:270:6",
															"trueBody": {
																"id": 2347,
																"nodeType": "Block",
																"src": "13398:46:6",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 2345,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13424:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 2307,
																		"id": 2346,
																		"nodeType": "Return",
																		"src": "13417:11:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "9f8a13d7",
									"id": 2358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isActive",
									"nameLocation": "13063:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13080:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "13072:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13072:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13071:21:6"
									},
									"returnParameters": {
										"id": 2307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2358,
												"src": "13114:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13114:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13113:6:6"
									},
									"scope": 2515,
									"src": "13054:506:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2409,
										"nodeType": "Block",
										"src": "13803:304:6",
										"statements": [
											{
												"assignments": [
													2377
												],
												"declarations": [
													{
														"constant": false,
														"id": 2377,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "13827:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2409,
														"src": "13814:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2376,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2375,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "13814:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "13814:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2381,
												"initialValue": {
													"baseExpression": {
														"id": 2378,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "13834:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2380,
													"indexExpression": {
														"id": 2379,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2360,
														"src": "13840:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13834:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13814:38:6"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2382,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "13887:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "13887:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2385,
																"indexExpression": {
																	"id": 2384,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "13901:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13887:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2386,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1165,
															"src": "13887:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2387,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "13929:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "13929:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2390,
																"indexExpression": {
																	"id": 2389,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "13943:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13929:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "13929:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2392,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "13974:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "13974:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2395,
																"indexExpression": {
																	"id": 2394,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "13988:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "13974:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1169,
															"src": "13974:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2397,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "14019:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "14019:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2400,
																"indexExpression": {
																	"id": 2399,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "14033:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14019:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1171,
															"src": "14019:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2402,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2377,
																		"src": "14062:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2403,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1178,
																	"src": "14062:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2405,
																"indexExpression": {
																	"id": 2404,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "14076:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14062:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ended",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1173,
															"src": "14062:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2407,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "13872:227:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2374,
												"id": 2408,
												"nodeType": "Return",
												"src": "13865:234:6"
											}
										]
									},
									"functionSelector": "c0806b03",
									"id": 2410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDepositInfo",
									"nameLocation": "13577:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13604:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13596:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13625:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13617:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13617:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13595:36:6"
									},
									"returnParameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13694:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13716:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13716:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13738:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13760:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13760:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2410,
												"src": "13782:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13782:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13679:118:6"
									},
									"scope": 2515,
									"src": "13568:539:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "14231:60:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 2417,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "14249:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
																	"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																}
															},
															"id": 2419,
															"indexExpression": {
																"id": 2418,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2412,
																"src": "14255:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14249:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage",
																"typeString": "struct BillionCashStaking.User storage ref"
															}
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1178,
														"src": "14249:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
															"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "14249:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2416,
												"id": 2422,
												"nodeType": "Return",
												"src": "14242:41:6"
											}
										]
									},
									"functionSelector": "a8aeb6c2",
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAmountOfDeposits",
									"nameLocation": "14124:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14156:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "14148:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14148:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14147:21:6"
									},
									"returnParameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "14217:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14217:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14216:9:6"
									},
									"scope": 2515,
									"src": "14115:176:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "14412:244:6",
										"statements": [
											{
												"assignments": [
													2433
												],
												"declarations": [
													{
														"constant": false,
														"id": 2433,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "14436:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "14423:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2431,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "14423:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "14423:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"baseExpression": {
														"id": 2434,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "14443:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2436,
													"indexExpression": {
														"id": 2435,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "14449:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14443:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14423:38:6"
											},
											{
												"assignments": [
													2439
												],
												"declarations": [
													{
														"constant": false,
														"id": 2439,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "14482:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2468,
														"src": "14474:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2438,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14474:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2440,
												"nodeType": "VariableDeclarationStatement",
												"src": "14474:14:6"
											},
											{
												"body": {
													"id": 2464,
													"nodeType": "Block",
													"src": "14552:71:6",
													"statements": [
														{
															"expression": {
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2453,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2439,
																	"src": "14567:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2456,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2433,
																						"src": "14587:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																							"typeString": "struct BillionCashStaking.User storage pointer"
																						}
																					},
																					"id": 2457,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "deposits",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1178,
																					"src": "14587:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																					}
																				},
																				"id": 2459,
																				"indexExpression": {
																					"id": 2458,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2442,
																					"src": "14601:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14587:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																					"typeString": "struct BillionCashStaking.Deposit storage ref"
																				}
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1165,
																			"src": "14587:23:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2454,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2439,
																			"src": "14576:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "14576:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14576:35:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14567:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2463,
															"nodeType": "ExpressionStatement",
															"src": "14567:44:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2445,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2442,
														"src": "14521:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2446,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "14525:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "14525:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14525:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14521:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2465,
												"initializationExpression": {
													"assignments": [
														2442
													],
													"declarations": [
														{
															"constant": false,
															"id": 2442,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14514:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2465,
															"src": "14506:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2441,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14506:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2444,
													"initialValue": {
														"hexValue": "30",
														"id": 2443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14518:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14506:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14547:3:6",
														"subExpression": {
															"id": 2450,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2442,
															"src": "14547:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2452,
													"nodeType": "ExpressionStatement",
													"src": "14547:3:6"
												},
												"nodeType": "ForStatement",
												"src": "14501:122:6"
											},
											{
												"expression": {
													"id": 2466,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2439,
													"src": "14642:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2430,
												"id": 2467,
												"nodeType": "Return",
												"src": "14635:13:6"
											}
										]
									},
									"functionSelector": "7e3abeea",
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTotalDeposits",
									"nameLocation": "14308:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14337:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "14329:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14329:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14328:21:6"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "14398:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14397:9:6"
									},
									"scope": 2515,
									"src": "14299:357:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2513,
										"nodeType": "Block",
										"src": "14778:247:6",
										"statements": [
											{
												"assignments": [
													2478
												],
												"declarations": [
													{
														"constant": false,
														"id": 2478,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "14802:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "14789:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2477,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2476,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1187,
																"src": "14789:4:6"
															},
															"referencedDeclaration": 1187,
															"src": "14789:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2482,
												"initialValue": {
													"baseExpression": {
														"id": 2479,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "14809:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1187_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2481,
													"indexExpression": {
														"id": 2480,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2471,
														"src": "14815:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14809:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1187_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14789:38:6"
											},
											{
												"assignments": [
													2484
												],
												"declarations": [
													{
														"constant": false,
														"id": 2484,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "14848:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2513,
														"src": "14840:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14840:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2485,
												"nodeType": "VariableDeclarationStatement",
												"src": "14840:14:6"
											},
											{
												"body": {
													"id": 2509,
													"nodeType": "Block",
													"src": "14918:74:6",
													"statements": [
														{
															"expression": {
																"id": 2507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2498,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2484,
																	"src": "14933:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2501,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2478,
																						"src": "14953:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																							"typeString": "struct BillionCashStaking.User storage pointer"
																						}
																					},
																					"id": 2502,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "deposits",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1178,
																					"src": "14953:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																					}
																				},
																				"id": 2504,
																				"indexExpression": {
																					"id": 2503,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2487,
																					"src": "14967:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "14953:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Deposit_$1174_storage",
																					"typeString": "struct BillionCashStaking.Deposit storage ref"
																				}
																			},
																			"id": 2505,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "withdrawn",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1167,
																			"src": "14953:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2499,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2484,
																			"src": "14942:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "14942:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14942:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14933:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2508,
															"nodeType": "ExpressionStatement",
															"src": "14933:47:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2490,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2487,
														"src": "14887:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2491,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2478,
																"src": "14891:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1187_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "14891:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1174_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14891:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14887:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2510,
												"initializationExpression": {
													"assignments": [
														2487
													],
													"declarations": [
														{
															"constant": false,
															"id": 2487,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14880:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2510,
															"src": "14872:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2486,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "14872:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2489,
													"initialValue": {
														"hexValue": "30",
														"id": 2488,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14884:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14872:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "14913:3:6",
														"subExpression": {
															"id": 2495,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "14913:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2497,
													"nodeType": "ExpressionStatement",
													"src": "14913:3:6"
												},
												"nodeType": "ForStatement",
												"src": "14867:125:6"
											},
											{
												"expression": {
													"id": 2511,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2484,
													"src": "15011:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2475,
												"id": 2512,
												"nodeType": "Return",
												"src": "15004:13:6"
											}
										]
									},
									"functionSelector": "fb4cb32b",
									"id": 2514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTotalWithdrawn",
									"nameLocation": "14673:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2471,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14703:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "14695:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14694:21:6"
									},
									"returnParameters": {
										"id": 2475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2514,
												"src": "14764:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14764:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14763:9:6"
									},
									"scope": 2515,
									"src": "14664:361:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2516,
							"src": "241:14787:6",
							"usedErrors": []
						}
					],
					"src": "35:14995:6"
				},
				"id": 6
			}
		}
	}
}