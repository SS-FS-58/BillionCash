{
	"id": "3fcd12b93e3319c671e36294b037773a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"BCStaking.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract BillionCashStaking is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    uint256 public constant PERCENTS_DIVIDER = 1000;\r\n    uint256 public constant DAILY_ROI = 15;\r\n    uint256 public constant REFERRAL_PERCENTS = 120;\r\n    uint256 public constant TIME_STEP = 1 days;\r\n    uint256 public constant STAKING_PERIOD = 180 days;\r\n\r\n    ERC20 BC;\r\n\r\n    uint256 public totalUsers;\r\n    uint256 public totalStaked;\r\n    uint256 public totalWithdrawn;\r\n    uint256 public totalDepositCount;\r\n    uint256 public minimumStakeValue = 200 * 10**18;\r\n\r\n    struct Deposit {\r\n        uint256 amount;\r\n        uint256 withdrawn;\r\n        uint256 startTime;\r\n        uint256 endTime;\r\n        bool ended;\r\n    }\r\n\r\n    struct User {\r\n        Deposit[] deposits;\r\n        uint256 checkpoint;\r\n        uint256 bonus;\r\n        uint256 referralCount;\r\n        address referrer;\r\n    }\r\n\r\n    mapping(address => User) internal users;\r\n\r\n    modifier onlyhodler() {\r\n        require(getUserDividends(msg.sender) > 0, \"Not Holder\");\r\n        _;\r\n    }\r\n\r\n    event Newbie(address user);\r\n    event NewDeposit(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event onReinvestment(address indexed user, uint256 reinvestAmount);\r\n    event RefBonus(\r\n        address indexed referrer,\r\n        address indexed referral,\r\n        uint256 amount\r\n    );\r\n\r\n    constructor(ERC20 _token) {\r\n        //set initial state variables\r\n        BC = _token;\r\n    }\r\n\r\n    function stake(address referrer, uint256 amount) public {\r\n        require(\r\n            amount >= minimumStakeValue,\r\n            \"Amount is below minimum stake value.\"\r\n        );\r\n\r\n        require(\r\n            BC.balanceOf(msg.sender) >= amount,\r\n            \"Must have enough balance to stake\"\r\n        );\r\n\r\n        require(\r\n            BC.transferFrom(msg.sender, address(this), amount),\r\n            \"Stake failed due to failed amount transfer.\"\r\n        );\r\n\r\n        User storage user = users[msg.sender];\r\n\r\n        if (\r\n            user.referrer == address(0) &&\r\n            users[referrer].deposits.length > 0 &&\r\n            referrer != msg.sender\r\n        ) {\r\n            user.referrer = referrer;\r\n        }\r\n\r\n        if (user.referrer != address(0)) {\r\n            address upline = user.referrer;\r\n\r\n            if (upline != address(0)) {\r\n                uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(\r\n                    PERCENTS_DIVIDER\r\n                );\r\n                users[upline].bonus = users[upline].bonus.add(_amount);\r\n                users[upline].referralCount = users[upline].referralCount.add(\r\n                    1\r\n                );\r\n                emit RefBonus(upline, msg.sender, _amount);\r\n            }\r\n        }\r\n\r\n        if (user.deposits.length == 0) {\r\n            user.checkpoint = block.timestamp;\r\n            totalUsers = totalUsers.add(1);\r\n            emit Newbie(msg.sender);\r\n        }\r\n\r\n        if (user.referrer != address(0)) {\r\n            user.deposits.push(\r\n                Deposit(\r\n                    amount.sub(\r\n                        amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER)\r\n                    ),\r\n                    0,\r\n                    block.timestamp,\r\n                    block.timestamp + STAKING_PERIOD,\r\n                    false\r\n                )\r\n            );\r\n        } else {\r\n            user.deposits.push(\r\n                Deposit(\r\n                    amount,\r\n                    0,\r\n                    block.timestamp,\r\n                    block.timestamp + STAKING_PERIOD,\r\n                    false\r\n                )\r\n            );\r\n        }\r\n\r\n        totalStaked = totalStaked.add(amount);\r\n        totalDepositCount = totalDepositCount.add(1);\r\n\r\n        emit NewDeposit(msg.sender, amount);\r\n    }\r\n\r\n    function claim() public {\r\n        User storage user = users[msg.sender];\r\n\r\n        uint256 totalAmount;\r\n        uint256 dividends;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(\r\n                                TIME_STEP\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                        user.deposits[i].ended = true;\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(60)\r\n                            .div(60);\r\n                        user.deposits[i].ended = true;\r\n                    }\r\n                }\r\n\r\n                user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(\r\n                    dividends\r\n                ); /// changing of storage data\r\n                totalAmount = totalAmount.add(dividends);\r\n            }\r\n        }\r\n\r\n        uint256 referralBonus = getUserReferralBonus(msg.sender);\r\n        if (referralBonus > 0) {\r\n            totalAmount = totalAmount.add(referralBonus);\r\n            user.bonus = 0;\r\n            user.referralCount = 0;\r\n        }\r\n\r\n        require(totalAmount > 0, \"User has no dividends\");\r\n\r\n        uint256 contractBalance = BC.balanceOf(address(this));\r\n        if (contractBalance < totalAmount) {\r\n            totalAmount = contractBalance;\r\n        }\r\n\r\n        user.checkpoint = block.timestamp;\r\n\r\n        require(\r\n            BC.transfer(msg.sender, totalAmount),\r\n            \"Claim failed due to failed amount transfer.\"\r\n        );\r\n\r\n        totalWithdrawn = totalWithdrawn.add(totalAmount);\r\n\r\n        emit Withdrawn(msg.sender, totalAmount);\r\n    }\r\n\r\n    function compound() public onlyhodler {\r\n        User storage user = users[msg.sender];\r\n        // fetch dividends\r\n        uint256 _dividends = getUserDividends(msg.sender); // retrieve ref. bonus later in the code\r\n        uint256 totalAmount;\r\n        uint256 dividends;\r\n\r\n        user.deposits.push(\r\n            Deposit(\r\n                _dividends,\r\n                0,\r\n                block.timestamp,\r\n                block.timestamp + STAKING_PERIOD,\r\n                false\r\n            )\r\n        );\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(\r\n                                TIME_STEP\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                        user.deposits[i].ended = true;\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(60)\r\n                            .div(60);\r\n                        user.deposits[i].ended = true;\r\n                    }\r\n                }\r\n\r\n                user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(\r\n                    dividends\r\n                ); /// changing of storage data\r\n                totalAmount = totalAmount.add(dividends);\r\n            }\r\n        }\r\n\r\n        user.checkpoint = block.timestamp;\r\n\r\n        totalStaked = totalStaked.add(_dividends);\r\n        totalDepositCount = totalDepositCount.add(1);\r\n        totalWithdrawn = totalWithdrawn.add(totalAmount);\r\n        // fire event\r\n        emit onReinvestment(msg.sender, _dividends);\r\n    }\r\n\r\n    function getUserDividends(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 totalDividends;\r\n        uint256 dividends;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                if (user.deposits[i].endTime > block.timestamp) {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                block.timestamp.sub(user.deposits[i].startTime)\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        ).mul(block.timestamp.sub(user.checkpoint)).div(60).div(\r\n                                60\r\n                            );\r\n                    }\r\n                } else {\r\n                    if (user.deposits[i].startTime > user.checkpoint) {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(\r\n                                user.deposits[i].endTime.sub(\r\n                                    user.deposits[i].startTime\r\n                                )\r\n                            )\r\n                            .div(60)\r\n                            .div(60);\r\n                    } else {\r\n                        dividends = (\r\n                            user.deposits[i].amount.mul(DAILY_ROI).div(\r\n                                PERCENTS_DIVIDER\r\n                            )\r\n                        )\r\n                            .mul(user.deposits[i].endTime.sub(user.checkpoint))\r\n                            .div(60)\r\n                            .div(60);\r\n                    }\r\n                }\r\n                totalDividends = totalDividends.add(dividends);\r\n            }\r\n        }\r\n\r\n        return totalDividends;\r\n    }\r\n\r\n    function getUserReferralBonus(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].bonus;\r\n    }\r\n\r\n    function getUserReferralCount(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].referralCount;\r\n    }\r\n\r\n    function getUserReferrer(address userAddress)\r\n        public\r\n        view\r\n        returns (address)\r\n    {\r\n        return users[userAddress].referrer;\r\n    }\r\n\r\n    function getUserCheckpoint(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].checkpoint;\r\n    }\r\n\r\n    function getUserAvailable(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return\r\n            getUserReferralBonus(userAddress).add(\r\n                getUserDividends(userAddress)\r\n            );\r\n    }\r\n\r\n    function getUserDepositInfo(address userAddress, uint256 index)\r\n        public\r\n        view\r\n        returns (\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            uint256,\r\n            bool\r\n        )\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        return (\r\n            user.deposits[index].amount,\r\n            user.deposits[index].withdrawn,\r\n            user.deposits[index].startTime,\r\n            user.deposits[index].endTime,\r\n            user.deposits[index].ended\r\n        );\r\n    }\r\n\r\n    function getUserAmountOfDeposits(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return users[userAddress].deposits.length;\r\n    }\r\n\r\n    function getUserTotalDeposits(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 amount;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            if (user.deposits[i].ended == false) {\r\n                amount = amount.add(user.deposits[i].amount);\r\n            }\r\n        }\r\n\r\n        return amount;\r\n    }\r\n\r\n    function getUserTotalWithdrawn(address userAddress)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        User storage user = users[userAddress];\r\n\r\n        uint256 amount;\r\n\r\n        for (uint256 i = 0; i < user.deposits.length; i++) {\r\n            amount = amount.add(user.deposits[i].withdrawn);\r\n        }\r\n\r\n        return amount;\r\n    }\r\n\r\n    //sets the minimum stake value\r\n    function setMinimumStakeValue(uint256 _minimumStakeValue)\r\n        external\r\n        onlyOwner\r\n    {\r\n        minimumStakeValue = _minimumStakeValue;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  dup2\n  mload\n  tag_6\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2049  _name */\n  0x03\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2044:2057  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  dup1\n  mload\n  tag_8\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2074  _symbol */\n  0x04\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2067:2084  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1978:2091  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_23)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_16)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_16)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_16\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\n  pop\n  tag_17\n  swap3\n  swap2\n  pop\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_17\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1031   */\ntag_22:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_26:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_28\n  tag_21\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_30\n  tag_21\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_31:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_32:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_32)\ntag_34:\n    /* \"#utility.yul\":930:932   */\n  dup4\n    /* \"#utility.yul\":927:928   */\n  dup3\n    /* \"#utility.yul\":924:933   */\n  gt\n    /* \"#utility.yul\":921:1001   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":989:990   */\n  0x00\n    /* \"#utility.yul\":984:986   */\n  dup4\n    /* \"#utility.yul\":979:981   */\n  dup6\n    /* \"#utility.yul\":971:977   */\n  dup4\n    /* \"#utility.yul\":967:982   */\n  add\n    /* \"#utility.yul\":963:987   */\n  add\n    /* \"#utility.yul\":956:991   */\n  mstore\n    /* \"#utility.yul\":921:1001   */\ntag_35:\n    /* \"#utility.yul\":1019:1025   */\n  swap7\n    /* \"#utility.yul\":146:1031   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1036:1598   */\ntag_3:\n    /* \"#utility.yul\":1135:1141   */\n  0x00\n    /* \"#utility.yul\":1143:1149   */\n  dup1\n    /* \"#utility.yul\":1196:1198   */\n  0x40\n    /* \"#utility.yul\":1184:1193   */\n  dup4\n    /* \"#utility.yul\":1175:1182   */\n  dup6\n    /* \"#utility.yul\":1171:1194   */\n  sub\n    /* \"#utility.yul\":1167:1199   */\n  slt\n    /* \"#utility.yul\":1164:1216   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1212:1213   */\n  0x00\n    /* \"#utility.yul\":1209:1210   */\n  dup1\n    /* \"#utility.yul\":1202:1214   */\n  revert\n    /* \"#utility.yul\":1164:1216   */\ntag_37:\n    /* \"#utility.yul\":1239:1255   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1304:1318   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1301:1335   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1331:1332   */\n  0x00\n    /* \"#utility.yul\":1328:1329   */\n  dup1\n    /* \"#utility.yul\":1321:1333   */\n  revert\n    /* \"#utility.yul\":1301:1335   */\ntag_38:\n    /* \"#utility.yul\":1354:1415   */\n  tag_39\n    /* \"#utility.yul\":1407:1414   */\n  dup7\n    /* \"#utility.yul\":1398:1404   */\n  dup4\n    /* \"#utility.yul\":1387:1396   */\n  dup8\n    /* \"#utility.yul\":1383:1405   */\n  add\n    /* \"#utility.yul\":1354:1415   */\n  tag_22\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1344:1415   */\n  swap4\n  pop\n    /* \"#utility.yul\":1461:1463   */\n  0x20\n    /* \"#utility.yul\":1450:1459   */\n  dup6\n    /* \"#utility.yul\":1446:1464   */\n  add\n    /* \"#utility.yul\":1440:1465   */\n  mload\n    /* \"#utility.yul\":1424:1465   */\n  swap2\n  pop\n    /* \"#utility.yul\":1490:1492   */\n  dup1\n    /* \"#utility.yul\":1480:1488   */\n  dup3\n    /* \"#utility.yul\":1477:1493   */\n  gt\n    /* \"#utility.yul\":1474:1510   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1506:1507   */\n  0x00\n    /* \"#utility.yul\":1503:1504   */\n  dup1\n    /* \"#utility.yul\":1496:1508   */\n  revert\n    /* \"#utility.yul\":1474:1510   */\ntag_40:\n  pop\n    /* \"#utility.yul\":1529:1592   */\n  tag_41\n    /* \"#utility.yul\":1584:1591   */\n  dup6\n    /* \"#utility.yul\":1573:1581   */\n  dup3\n    /* \"#utility.yul\":1562:1571   */\n  dup7\n    /* \"#utility.yul\":1558:1582   */\n  add\n    /* \"#utility.yul\":1529:1592   */\n  tag_22\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1519:1592   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":1036:1598   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1603:1983   */\ntag_11:\n    /* \"#utility.yul\":1682:1683   */\n  0x01\n    /* \"#utility.yul\":1678:1690   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1725:1737   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1746:1807   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1800:1804   */\n  0x7f\n    /* \"#utility.yul\":1792:1798   */\n  dup3\n    /* \"#utility.yul\":1788:1805   */\n  and\n    /* \"#utility.yul\":1778:1805   */\n  swap2\n  pop\n    /* \"#utility.yul\":1746:1807   */\ntag_43:\n    /* \"#utility.yul\":1853:1855   */\n  0x20\n    /* \"#utility.yul\":1845:1851   */\n  dup3\n    /* \"#utility.yul\":1842:1856   */\n  lt\n    /* \"#utility.yul\":1822:1840   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  eq\n    /* \"#utility.yul\":1816:1977   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1899:1909   */\n  0x4e487b71\n    /* \"#utility.yul\":1894:1897   */\n  0xe0\n    /* \"#utility.yul\":1890:1910   */\n  shl\n    /* \"#utility.yul\":1887:1888   */\n  0x00\n    /* \"#utility.yul\":1880:1911   */\n  mstore\n    /* \"#utility.yul\":1934:1938   */\n  0x22\n    /* \"#utility.yul\":1931:1932   */\n  0x04\n    /* \"#utility.yul\":1924:1939   */\n  mstore\n    /* \"#utility.yul\":1962:1966   */\n  0x24\n    /* \"#utility.yul\":1959:1960   */\n  0x00\n    /* \"#utility.yul\":1952:1967   */\n  revert\n    /* \"#utility.yul\":1816:1977   */\ntag_44:\n  pop\n    /* \"#utility.yul\":1603:1983   */\n  swap2\n  swap1\n  pop\n  jump\t// out\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1403:12626  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1218:1232   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1211:1233   */\n      iszero\n        /* \"#utility.yul\":1193:1234   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1053:1240   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3331:3343  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1391:1416   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3244:3350  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3175:3177  18 */\n      0x12\n        /* \"#utility.yul\":1902:1938   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1890:1892   */\n      0x20\n        /* \"#utility.yul\":1875:1893   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3093:3184  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1760:1944   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3489  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3526  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3408:3533  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2210:2223  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2242:2247  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2235:2247  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2156:2254  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4516:4520  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4586:4593  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4595:4601  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4578  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4570:4602  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4619:4623  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4433:4630  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5319:5323  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5391:5395  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5406:5412  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5390  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5375:5413  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5433:5437  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5439:5441  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5443:5449  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5432  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5423:5450  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5467:5471  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5192:5478  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:6107  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5961:5965  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6068:6078  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6031:6038  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6049  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6065  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6040:6078  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6023  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6015:6079  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2367:2469  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2423:2436  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2455:2462  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2448:2462  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6594:7021  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6687:6691  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6785:6792  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6777  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6768:6793  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6741:6793  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6831:6846  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6827  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6811:6846  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3222:3224   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3204:3225   */\n      mstore\n        /* \"#utility.yul\":3261:3263   */\n      0x25\n        /* \"#utility.yul\":3241:3259   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3234:3264   */\n      mstore\n        /* \"#utility.yul\":3300:3334   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3280:3298   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3273:3335   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3351:3369   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3344:3379   */\n      mstore\n        /* \"#utility.yul\":3396:3415   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6803:6888  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6931:6936  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6938:6945  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6966:6981  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6963  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6981  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6930  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6922:6982  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3729:3918  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3808:3812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3879:3881  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3883:3889  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3871  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3862:3890  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4065:4072  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4102  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4109  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4091:4118  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3976:4125  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10250:10269  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3630   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3610:3631   */\n      mstore\n        /* \"#utility.yul\":3667:3669   */\n      0x24\n        /* \"#utility.yul\":3647:3665   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3640:3670   */\n      mstore\n        /* \"#utility.yul\":3706:3740   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3686:3704   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3679:3741   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3757:3775   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3750:3784   */\n      mstore\n        /* \"#utility.yul\":3801:3820   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3426:3826   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10242:10310  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10328:10349  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4033:4035   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4015:4036   */\n      mstore\n        /* \"#utility.yul\":4072:4074   */\n      0x22\n        /* \"#utility.yul\":4052:4070   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4045:4075   */\n      mstore\n        /* \"#utility.yul\":4111:4145   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4091:4109   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4084:4146   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4162:4180   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4155:4187   */\n      mstore\n        /* \"#utility.yul\":4204:4223   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3831:4229   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10320:10388  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10410  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10417  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10426  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10399:10435  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1391:1416   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1364:1382   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10450:10482  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10119:10489  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10924  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10937:10942  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10944:10951  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10936  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10952  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10900:10952  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:10982  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10966:11003  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10962:11205  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11047:11053  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11043  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11027:11053  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4418:4439   */\n      mstore\n        /* \"#utility.yul\":4475:4477   */\n      0x1d\n        /* \"#utility.yul\":4455:4473   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4448:4478   */\n      mstore\n        /* \"#utility.yul\":4514:4545   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4494:4512   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4487:4546   */\n      mstore\n        /* \"#utility.yul\":4563:4581   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4234:4587   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11019:11087  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11138:11143  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11145:11152  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11173:11179  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11170  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11154:11179  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11137  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11129:11180  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10890:11211  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10770:11211  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7484:8135  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7610:7628  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4794:4796   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4776:4797   */\n      mstore\n        /* \"#utility.yul\":4833:4835   */\n      0x25\n        /* \"#utility.yul\":4813:4831   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4806:4836   */\n      mstore\n        /* \"#utility.yul\":4872:4906   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4852:4870   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4845:4907   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4923:4941   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4916:4951   */\n      mstore\n        /* \"#utility.yul\":4968:4987   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4592:4993   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7602:7670  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7688:7704  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5200:5202   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5182:5203   */\n      mstore\n        /* \"#utility.yul\":5239:5241   */\n      0x23\n        /* \"#utility.yul\":5219:5237   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5212:5242   */\n      mstore\n        /* \"#utility.yul\":5278:5312   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5258:5276   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5251:5313   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5329:5347   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5322:5355   */\n      mstore\n        /* \"#utility.yul\":5372:5391   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4998:5397   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7744  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7804:7823  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7826:7841  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7859:7880  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5604:5606   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5586:5607   */\n      mstore\n        /* \"#utility.yul\":5643:5645   */\n      0x26\n        /* \"#utility.yul\":5623:5641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5616:5646   */\n      mstore\n        /* \"#utility.yul\":5682:5716   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5662:5680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5655:5717   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5733:5751   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5726:5762   */\n      mstore\n        /* \"#utility.yul\":5779:5798   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5402:5804   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7851:7923  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7972  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7975:7995  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7995  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8028  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7957:7966  _balances */\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7989:7995  amount */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8015:8038  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8069:8071  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8063:8067  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8079  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1391:1416   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1379:1381   */\n      0x20\n        /* \"#utility.yul\":1364:1382   */\n      add\n      swap1\n        /* \"#utility.yul\":1245:1422   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8080  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8091:8128  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11795:11916  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:611   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_144:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_144)\n    tag_146:\n        /* \"#utility.yul\":452:458   */\n      dup2\n        /* \"#utility.yul\":449:450   */\n      dup2\n        /* \"#utility.yul\":446:459   */\n      gt\n        /* \"#utility.yul\":443:534   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":522:523   */\n      0x00\n        /* \"#utility.yul\":517:519   */\n      0x40\n        /* \"#utility.yul\":508:514   */\n      dup4\n        /* \"#utility.yul\":497:506   */\n      dup8\n        /* \"#utility.yul\":493:515   */\n      add\n        /* \"#utility.yul\":489:520   */\n      add\n        /* \"#utility.yul\":482:524   */\n      mstore\n        /* \"#utility.yul\":443:534   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":595:597   */\n      0x1f\n        /* \"#utility.yul\":574:589   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":570:599   */\n      and\n        /* \"#utility.yul\":555:600   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":602:604   */\n      0x40\n        /* \"#utility.yul\":551:605   */\n      add\n      swap4\n        /* \"#utility.yul\":14:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:789   */\n    tag_141:\n        /* \"#utility.yul\":684:704   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":733:764   */\n      dup2\n      and\n        /* \"#utility.yul\":723:765   */\n      dup2\n      eq\n        /* \"#utility.yul\":713:783   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":779:780   */\n      0x00\n        /* \"#utility.yul\":776:777   */\n      dup1\n        /* \"#utility.yul\":769:781   */\n      revert\n        /* \"#utility.yul\":713:783   */\n    tag_149:\n        /* \"#utility.yul\":616:789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":794:1048   */\n    tag_21:\n        /* \"#utility.yul\":862:868   */\n      0x00\n        /* \"#utility.yul\":870:876   */\n      dup1\n        /* \"#utility.yul\":923:925   */\n      0x40\n        /* \"#utility.yul\":911:920   */\n      dup4\n        /* \"#utility.yul\":902:909   */\n      dup6\n        /* \"#utility.yul\":898:921   */\n      sub\n        /* \"#utility.yul\":894:926   */\n      slt\n        /* \"#utility.yul\":891:943   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":936:937   */\n      dup1\n        /* \"#utility.yul\":929:941   */\n      revert\n        /* \"#utility.yul\":891:943   */\n    tag_151:\n        /* \"#utility.yul\":962:991   */\n      tag_152\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":962:991   */\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":952:991   */\n      swap5\n        /* \"#utility.yul\":1038:1040   */\n      0x20\n        /* \"#utility.yul\":1023:1041   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1010:1042   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":794:1048   */\n      jump\t// out\n        /* \"#utility.yul\":1427:1755   */\n    tag_31:\n        /* \"#utility.yul\":1504:1510   */\n      0x00\n        /* \"#utility.yul\":1512:1518   */\n      dup1\n        /* \"#utility.yul\":1520:1526   */\n      0x00\n        /* \"#utility.yul\":1573:1575   */\n      0x60\n        /* \"#utility.yul\":1561:1570   */\n      dup5\n        /* \"#utility.yul\":1552:1559   */\n      dup7\n        /* \"#utility.yul\":1548:1571   */\n      sub\n        /* \"#utility.yul\":1544:1576   */\n      slt\n        /* \"#utility.yul\":1541:1593   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1589:1590   */\n      0x00\n        /* \"#utility.yul\":1586:1587   */\n      dup1\n        /* \"#utility.yul\":1579:1591   */\n      revert\n        /* \"#utility.yul\":1541:1593   */\n    tag_156:\n        /* \"#utility.yul\":1612:1641   */\n      tag_157\n        /* \"#utility.yul\":1631:1640   */\n      dup5\n        /* \"#utility.yul\":1612:1641   */\n      tag_141\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1602:1641   */\n      swap3\n      pop\n        /* \"#utility.yul\":1660:1698   */\n      tag_158\n        /* \"#utility.yul\":1694:1696   */\n      0x20\n        /* \"#utility.yul\":1683:1692   */\n      dup6\n        /* \"#utility.yul\":1679:1697   */\n      add\n        /* \"#utility.yul\":1660:1698   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1650:1698   */\n      swap2\n      pop\n        /* \"#utility.yul\":1745:1747   */\n      0x40\n        /* \"#utility.yul\":1734:1743   */\n      dup5\n        /* \"#utility.yul\":1730:1748   */\n      add\n        /* \"#utility.yul\":1717:1749   */\n      calldataload\n        /* \"#utility.yul\":1707:1749   */\n      swap1\n      pop\n        /* \"#utility.yul\":1427:1755   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1949:2135   */\n    tag_44:\n        /* \"#utility.yul\":2008:2014   */\n      0x00\n        /* \"#utility.yul\":2061:2063   */\n      0x20\n        /* \"#utility.yul\":2049:2058   */\n      dup3\n        /* \"#utility.yul\":2040:2047   */\n      dup5\n        /* \"#utility.yul\":2036:2059   */\n      sub\n        /* \"#utility.yul\":2032:2064   */\n      slt\n        /* \"#utility.yul\":2029:2081   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2074:2075   */\n      dup1\n        /* \"#utility.yul\":2067:2079   */\n      revert\n        /* \"#utility.yul\":2029:2081   */\n    tag_161:\n        /* \"#utility.yul\":2100:2129   */\n      tag_162\n        /* \"#utility.yul\":2119:2128   */\n      dup3\n        /* \"#utility.yul\":2100:2129   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2090:2129   */\n      swap4\n        /* \"#utility.yul\":1949:2135   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2140:2400   */\n    tag_60:\n        /* \"#utility.yul\":2208:2214   */\n      0x00\n        /* \"#utility.yul\":2216:2222   */\n      dup1\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2257:2266   */\n      dup4\n        /* \"#utility.yul\":2248:2255   */\n      dup6\n        /* \"#utility.yul\":2244:2267   */\n      sub\n        /* \"#utility.yul\":2240:2272   */\n      slt\n        /* \"#utility.yul\":2237:2289   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2282:2283   */\n      dup1\n        /* \"#utility.yul\":2275:2287   */\n      revert\n        /* \"#utility.yul\":2237:2289   */\n    tag_164:\n        /* \"#utility.yul\":2308:2337   */\n      tag_165\n        /* \"#utility.yul\":2327:2336   */\n      dup4\n        /* \"#utility.yul\":2308:2337   */\n      tag_141\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2298:2337   */\n      swap2\n      pop\n        /* \"#utility.yul\":2356:2394   */\n      tag_166\n        /* \"#utility.yul\":2390:2392   */\n      0x20\n        /* \"#utility.yul\":2379:2388   */\n      dup5\n        /* \"#utility.yul\":2375:2393   */\n      add\n        /* \"#utility.yul\":2356:2394   */\n      tag_141\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":2346:2394   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2400   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2785   */\n    tag_65:\n        /* \"#utility.yul\":2484:2485   */\n      0x01\n        /* \"#utility.yul\":2480:2492   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2527:2539   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2548:2609   */\n      tag_168\n      jumpi\n        /* \"#utility.yul\":2602:2606   */\n      0x7f\n        /* \"#utility.yul\":2594:2600   */\n      dup3\n        /* \"#utility.yul\":2590:2607   */\n      and\n        /* \"#utility.yul\":2580:2607   */\n      swap2\n      pop\n        /* \"#utility.yul\":2548:2609   */\n    tag_168:\n        /* \"#utility.yul\":2655:2657   */\n      0x20\n        /* \"#utility.yul\":2647:2653   */\n      dup3\n        /* \"#utility.yul\":2644:2658   */\n      lt\n        /* \"#utility.yul\":2624:2642   */\n      dup2\n        /* \"#utility.yul\":2621:2659   */\n      eq\n        /* \"#utility.yul\":2618:2779   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":2701:2711   */\n      0x4e487b71\n        /* \"#utility.yul\":2696:2699   */\n      0xe0\n        /* \"#utility.yul\":2692:2712   */\n      shl\n        /* \"#utility.yul\":2689:2690   */\n      0x00\n        /* \"#utility.yul\":2682:2713   */\n      mstore\n        /* \"#utility.yul\":2736:2740   */\n      0x22\n        /* \"#utility.yul\":2733:2734   */\n      0x04\n        /* \"#utility.yul\":2726:2741   */\n      mstore\n        /* \"#utility.yul\":2764:2768   */\n      0x24\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2754:2769   */\n      revert\n        /* \"#utility.yul\":2618:2779   */\n    tag_169:\n      pop\n        /* \"#utility.yul\":2405:2785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2790:3015   */\n    tag_88:\n        /* \"#utility.yul\":2830:2833   */\n      0x00\n        /* \"#utility.yul\":2861:2862   */\n      dup3\n        /* \"#utility.yul\":2857:2863   */\n      not\n        /* \"#utility.yul\":2854:2855   */\n      dup3\n        /* \"#utility.yul\":2851:2864   */\n      gt\n        /* \"#utility.yul\":2848:2984   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":2906:2916   */\n      0x4e487b71\n        /* \"#utility.yul\":2901:2904   */\n      0xe0\n        /* \"#utility.yul\":2897:2917   */\n      shl\n        /* \"#utility.yul\":2894:2895   */\n      0x00\n        /* \"#utility.yul\":2887:2918   */\n      mstore\n        /* \"#utility.yul\":2941:2945   */\n      0x11\n        /* \"#utility.yul\":2938:2939   */\n      0x04\n        /* \"#utility.yul\":2931:2946   */\n      mstore\n        /* \"#utility.yul\":2969:2973   */\n      0x24\n        /* \"#utility.yul\":2966:2967   */\n      0x00\n        /* \"#utility.yul\":2959:2974   */\n      revert\n        /* \"#utility.yul\":2848:2984   */\n    tag_171:\n      pop\n        /* \"#utility.yul\":3000:3009   */\n      add\n      swap1\n        /* \"#utility.yul\":2790:3015   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_149": {
									"entryPoint": null,
									"id": 149,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"extract_byte_array_length": {
									"entryPoint": 581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1985:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:821:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:7"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:7"
															},
															"nodeType": "YulIf",
															"src": "220:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:7"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:7"
															},
															"nodeType": "YulIf",
															"src": "353:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:7"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:7"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:7"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:7"
															},
															"nodeType": "YulIf",
															"src": "536:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:7",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:7"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:7"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:7"
															},
															"nodeType": "YulIf",
															"src": "698:53:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:7"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:7"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:7",
																"statements": []
															},
															"src": "779:133:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "942:59:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "971:6:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "979:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "967:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "967:15:7"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "984:2:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "963:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "963:24:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "989:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "956:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:35:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "956:35:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "927:1:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "930:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "924:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:9:7"
															},
															"nodeType": "YulIf",
															"src": "921:80:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1010:15:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1019:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1010:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:7",
														"type": ""
													}
												],
												"src": "146:885:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:444:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1200:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1212:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1202:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1202:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1202:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1175:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1171:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1171:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1196:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1167:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1167:32:7"
															},
															"nodeType": "YulIf",
															"src": "1164:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1225:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1245:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1239:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1239:16:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1229:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1264:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1278:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1278:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1290:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1274:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1274:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1268:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1319:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1321:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1321:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1321:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1307:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1315:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1304:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1304:14:7"
															},
															"nodeType": "YulIf",
															"src": "1301:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1387:9:7"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1383:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1407:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1354:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1354:61:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1344:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1424:41:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1450:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1461:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1440:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:25:7"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1428:8:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1494:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1506:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1496:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1496:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1480:8:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1477:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:16:7"
															},
															"nodeType": "YulIf",
															"src": "1474:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1519:73:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1562:9:7"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1573:8:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1558:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1558:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1584:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1529:28:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:63:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1519:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1112:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1123:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1135:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1143:6:7",
														"type": ""
													}
												],
												"src": "1036:562:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1658:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1668:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1685:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1678:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1678:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1729:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1735:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1725:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1725:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1703:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1776:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1778:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1792:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1800:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1788:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1788:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1756:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1749:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:26:7"
															},
															"nodeType": "YulIf",
															"src": "1746:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1887:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1894:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1899:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1890:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1890:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1880:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1880:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1880:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1931:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1934:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1924:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1924:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1959:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1962:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1952:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1952:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1952:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1822:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1845:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1853:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1842:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1842:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1819:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:38:7"
															},
															"nodeType": "YulIf",
															"src": "1816:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1638:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1647:6:7",
														"type": ""
													}
												],
												"src": "1603:380:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b1938038062000b198339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61088780620002926000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB19 CODESIZE SUB DUP1 PUSH3 0xB19 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1DB JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x282 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x245 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH3 0x153 PUSH3 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x17E JUMPI PUSH3 0x17E PUSH3 0x10E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1BF JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1A0 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1D1 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x215 DUP7 DUP4 DUP8 ADD PUSH3 0x124 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x22C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x23B DUP6 DUP3 DUP7 ADD PUSH3 0x124 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x25A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x27C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x887 DUP1 PUSH3 0x292 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFBALANCE JUMPI SWAP13 SWAP2 0x2B MUL 0xA6 CREATE DIFFICULTY SWAP4 0x49 0xCD 0xB3 SWAP2 0xD3 PUSH27 0x2747FEB565D1E0373A211C77403F8D64736F6C634300080A003300 ",
							"sourceMap": "1403:11223:1:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2067:17:1;;;;:7;;:17;;;;;:::i;:::-;;1978:113;;1403:11223;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1403:11223:1;;;-1:-1:-1;1403:11223:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:7;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:7;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:7;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:7:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:7;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1403:11223:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_689": {
									"entryPoint": null,
									"id": 689,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_624": {
									"entryPoint": 856,
									"id": 624,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_667": {
									"entryPoint": 1148,
									"id": 667,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_451": {
									"entryPoint": 1270,
									"id": 451,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_246": {
									"entryPoint": 813,
									"id": 246,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_271": {
									"entryPoint": 562,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_179": {
									"entryPoint": null,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_374": {
									"entryPoint": 671,
									"id": 374,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_333": {
									"entryPoint": 622,
									"id": 333,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_159": {
									"entryPoint": 416,
									"id": 159,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_169": {
									"entryPoint": 656,
									"id": 169,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_304": {
									"entryPoint": 586,
									"id": 304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_228": {
									"entryPoint": 799,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5806:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:476:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:7",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:7"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:7"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:7"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:7"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:7"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:7",
																"statements": []
															},
															"src": "294:140:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:66:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "497:9:7"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "508:6:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "493:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "493:22:7"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "517:2:7",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "489:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "489:31:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "522:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "482:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "482:42:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "482:42:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "449:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "452:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "446:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "446:13:7"
															},
															"nodeType": "YulIf",
															"src": "443:91:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "543:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "559:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "578:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "574:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "574:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "595:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "591:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "591:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "570:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "570:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "555:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "602:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "543:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:7",
														"type": ""
													}
												],
												"src": "14:597:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "665:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "675:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "697:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "684:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "675:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:7"
															},
															"nodeType": "YulIf",
															"src": "713:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "655:5:7",
														"type": ""
													}
												],
												"src": "616:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "881:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "936:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "939:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "929:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "902:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "898:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "923:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "894:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "894:32:7"
															},
															"nodeType": "YulIf",
															"src": "891:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "952:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "981:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "962:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "962:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "952:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1000:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1027:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1038:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1023:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1023:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1010:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1010:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "839:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "850:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "862:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "870:6:7",
														"type": ""
													}
												],
												"src": "794:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1225:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1218:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1218:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1211:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1211:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1193:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1193:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1193:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1117:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1128:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1139:4:7",
														"type": ""
													}
												],
												"src": "1053:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1346:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1356:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1368:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1379:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1364:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1364:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1356:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1398:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1409:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1391:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1315:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1326:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1337:4:7",
														"type": ""
													}
												],
												"src": "1245:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1531:224:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1577:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1586:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1589:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1579:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1579:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1579:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1548:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1573:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1544:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1544:32:7"
															},
															"nodeType": "YulIf",
															"src": "1541:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1602:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1631:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1612:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1612:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1602:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1650:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1694:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1660:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1660:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1707:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1734:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1745:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1717:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1717:32:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1481:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1492:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1504:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1512:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1520:6:7",
														"type": ""
													}
												],
												"src": "1427:328:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1857:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1867:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1879:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1890:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1875:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1875:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1867:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1909:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:4:7",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1920:17:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1902:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1902:36:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1848:4:7",
														"type": ""
													}
												],
												"src": "1760:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2019:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2065:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2074:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2077:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2067:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2067:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2040:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2049:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2036:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2061:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2032:32:7"
															},
															"nodeType": "YulIf",
															"src": "2029:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2090:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2100:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1985:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1996:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2008:6:7",
														"type": ""
													}
												],
												"src": "1949:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2227:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2273:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2282:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2285:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2275:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2275:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2275:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2248:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2257:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2244:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2244:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2269:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2240:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2240:32:7"
															},
															"nodeType": "YulIf",
															"src": "2237:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2298:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2327:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2308:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2346:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2379:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2390:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2375:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2375:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2356:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2356:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2346:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2185:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2196:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2208:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2216:6:7",
														"type": ""
													}
												],
												"src": "2140:260:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2460:325:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2470:22:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:1:7",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2487:4:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2480:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2480:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2501:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2531:4:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2537:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2527:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2505:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2578:31:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2580:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2594:6:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2602:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2590:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2590:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2580:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2558:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:26:7"
															},
															"nodeType": "YulIf",
															"src": "2548:61:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2696:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2701:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2692:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2692:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2682:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2733:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2736:4:7",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2726:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2754:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2624:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2647:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2655:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2644:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2621:38:7"
															},
															"nodeType": "YulIf",
															"src": "2618:161:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2440:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2449:6:7",
														"type": ""
													}
												],
												"src": "2405:380:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2838:177:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2894:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2901:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2906:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2897:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2897:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2887:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2887:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2887:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2966:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2969:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2959:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2959:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2959:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2854:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2861:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2857:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2851:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2851:13:7"
															},
															"nodeType": "YulIf",
															"src": "2848:136:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2993:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3004:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3007:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2993:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2821:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2824:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2830:3:7",
														"type": ""
													}
												],
												"src": "2790:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3194:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3222:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3204:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3204:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3204:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3245:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3256:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3241:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3241:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3261:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3234:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3234:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3295:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:18:7"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3300:34:7",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3273:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3273:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3273:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3366:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3351:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3351:18:7"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3371:7:7",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3344:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3344:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3388:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3396:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3388:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3185:4:7",
														"type": ""
													}
												],
												"src": "3020:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3600:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3610:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3651:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3662:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3647:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3647:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3667:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3640:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3640:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3690:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3701:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3706:34:7",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3761:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3772:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:18:7"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3777:6:7",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3750:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3793:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3805:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3816:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3801:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3801:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3577:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3591:4:7",
														"type": ""
													}
												],
												"src": "3426:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4005:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4022:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4033:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4015:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4056:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4067:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4052:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4052:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4072:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4045:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4045:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4095:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4106:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4091:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:18:7"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4111:34:7",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4084:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4084:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4084:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4166:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4177:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4162:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4162:18:7"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4182:4:7",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4155:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4155:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4155:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4196:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4208:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4219:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4204:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4196:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3982:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3996:4:7",
														"type": ""
													}
												],
												"src": "3831:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4408:179:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4418:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4459:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4475:2:7",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4448:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4498:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4509:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4494:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4494:18:7"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4514:31:7",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4487:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:59:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4487:59:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4385:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4399:4:7",
														"type": ""
													}
												],
												"src": "4234:353:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4766:227:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4794:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4833:2:7",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4806:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4806:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4856:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4867:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4852:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4852:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4872:34:7",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4845:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:7"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4943:7:7",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:35:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4960:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4983:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4968:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4743:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4757:4:7",
														"type": ""
													}
												],
												"src": "4592:401:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5172:225:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5200:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5182:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5182:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5182:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5223:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5234:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5219:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5239:2:7",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5212:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5262:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5273:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5258:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5258:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5278:34:7",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5251:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5251:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5251:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5333:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5344:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5329:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5329:18:7"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5349:5:7",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5322:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5364:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5376:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5387:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5364:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5163:4:7",
														"type": ""
													}
												],
												"src": "4998:399:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5576:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5593:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5604:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5586:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5627:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5638:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5616:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5616:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5666:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5677:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5662:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5662:18:7"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5682:34:7",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:18:7"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5753:8:7",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5726:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5726:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5726:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5771:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5783:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5794:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5779:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5779:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5771:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5553:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5567:4:7",
														"type": ""
													}
												],
												"src": "5402:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082b565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082b565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b6020821081141561082557634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084c57634e487b7160e01b600052601160045260246000fd5b50019056fea26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82B JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x825 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE SELFBALANCE JUMPI SWAP13 SWAP2 0x2B MUL 0xA6 CREATE DIFFICULTY SWAP4 0x49 0xCD 0xB3 SWAP2 0xD3 PUSH27 0x2747FEB565D1E0373A211C77403F8D64736F6C634300080A003300 ",
							"sourceMap": "1403:11223:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:7;;1211:22;1193:41;;1181:2;1166:18;4433:197:1;1053:187:7;3244:106:1;3331:12;;3244:106;;;1391:25:7;;;1379:2;1364:18;3244:106:1;1245:177:7;5192:286:1;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:7;;1890:2;1875:18;3093:91:1;1760:184:7;5873:234:1;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:1;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:4;4570:32:1;719:10:4;4586:7:1;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:1;;4433:197;-1:-1:-1;;;4433:197:1:o;5192:286::-;5319:4;719:10:4;5375:38:1;5391:4;719:10:4;5406:6:1;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:1;;5192:286;-1:-1:-1;;;;5192:286:1:o;5873:234::-;5961:4;719:10:4;6015:64:1;719:10:4;6031:7:1;6068:10;6040:25;719:10:4;6031:7:1;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:4;6687:4:1;6768:25;719:10:4;6785:7:1;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:1;;3222:2:7;6803:85:1;;;3204:21:7;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:7;;;3344:35;3396:19;;6803:85:1;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:4;3862:28:1;719:10:4;3879:2:1;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:1;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10119:370::-;-1:-1:-1;;;;;10250:19:1;;10242:68;;;;-1:-1:-1;;;10242:68:1;;3628:2:7;10242:68:1;;;3610:21:7;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:7;;;3750:34;3801:19;;10242:68:1;3426:400:7;10242:68:1;-1:-1:-1;;;;;10328:21:1;;10320:68;;;;-1:-1:-1;;;10320:68:1;;4033:2:7;10320:68:1;;;4015:21:7;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:7;;;4155:32;4204:19;;10320:68:1;3831:398:7;10320:68:1;-1:-1:-1;;;;;10399:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10450:32;;1391:25:7;;;10450:32:1;;1364:18:7;10450:32:1;;;;;;;10119:370;;;:::o;10770:441::-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;-1:-1:-1;;10966:16:1;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;-1:-1:-1;;;11019:68:1;;4436:2:7;11019:68:1;;;4418:21:7;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11019:68:1;4234:353:7;11019:68:1;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10890:321;10770:441;;;:::o;7484:651::-;-1:-1:-1;;;;;7610:18:1;;7602:68;;;;-1:-1:-1;;;7602:68:1;;4794:2:7;7602:68:1;;;4776:21:7;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:7;;;4916:35;4968:19;;7602:68:1;4592:401:7;7602:68:1;-1:-1:-1;;;;;7688:16:1;;7680:64;;;;-1:-1:-1;;;7680:64:1;;5200:2:7;7680:64:1;;;5182:21:7;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:7;;;5322:33;5372:19;;7680:64:1;4998:399:7;7680:64:1;-1:-1:-1;;;;;7826:15:1;;7804:19;7826:15;;;;;;;;;;;7859:21;;;;7851:72;;;;-1:-1:-1;;;7851:72:1;;5604:2:7;7851:72:1;;;5586:21:7;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:7;;;5726:36;5779:19;;7851:72:1;5402:402:7;7851:72:1;-1:-1:-1;;;;;7957:15:1;;;:9;:15;;;;;;;;;;;7975:20;;;7957:38;;8015:13;;;;;;;;:23;;7989:6;;7957:9;8015:23;;7989:6;;8015:23;:::i;:::-;;;;;;;;8069:2;-1:-1:-1;;;;;8054:26:1;8063:4;-1:-1:-1;;;;;8054:26:1;;8073:6;8054:26;;;;1391:25:7;;1379:2;1364:18;;1245:177;8054:26:1;;;;;;;;8091:37;11795:121;14:597:7;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:7;574:15;-1:-1:-1;;570:29:7;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:7:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:7;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:7:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:7:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:7;;2790:225::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "436600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "26978",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51270",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2044,
									"end": 2049,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 2044,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 2067,
									"end": 2074,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2084,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 2091,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 7,
									"value": "30"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 930,
									"end": 932,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 927,
									"end": 928,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 924,
									"end": 933,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 989,
									"end": 990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 984,
									"end": 986,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 979,
									"end": 981,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 971,
									"end": 977,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 967,
									"end": 982,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 963,
									"end": 987,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 956,
									"end": 991,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "tag",
									"source": 7,
									"value": "35"
								},
								{
									"begin": 921,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1019,
									"end": 1025,
									"name": "SWAP7",
									"source": 7
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 1031,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1135,
									"end": 1141,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1143,
									"end": 1149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1196,
									"end": 1198,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1184,
									"end": 1193,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1182,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1171,
									"end": 1194,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1199,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1212,
									"end": 1213,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1209,
									"end": 1210,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1214,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 1164,
									"end": 1216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1255,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1304,
									"end": 1318,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1331,
									"end": 1332,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1328,
									"end": 1329,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1333,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1301,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1407,
									"end": 1414,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1398,
									"end": 1404,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1387,
									"end": 1396,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 1354,
									"end": 1415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1344,
									"end": 1415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1461,
									"end": 1463,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1450,
									"end": 1459,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1446,
									"end": 1464,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1440,
									"end": 1465,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1424,
									"end": 1465,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1490,
									"end": 1492,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1488,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1477,
									"end": 1493,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1507,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1503,
									"end": 1504,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1508,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1474,
									"end": 1510,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1584,
									"end": 1591,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1573,
									"end": 1581,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1562,
									"end": 1571,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1582,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1529,
									"end": 1592,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1592,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1036,
									"end": 1598,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1682,
									"end": 1683,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1690,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1725,
									"end": 1737,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1800,
									"end": 1804,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 1792,
									"end": 1798,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1805,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1778,
									"end": 1805,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1746,
									"end": 1807,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1853,
									"end": 1855,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1845,
									"end": 1851,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1842,
									"end": 1856,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1822,
									"end": 1840,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1899,
									"end": 1909,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1894,
									"end": 1897,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1890,
									"end": 1910,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1887,
									"end": 1888,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1880,
									"end": 1911,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1934,
									"end": 1938,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1924,
									"end": 1939,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1962,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1959,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1952,
									"end": 1967,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "tag",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1816,
									"end": 1977,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 1603,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 12626,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d47579c912b02a6f0449349cdb391d37a2747feb565d1e0373a211c77403f8d64736f6c634300080a0033",
									".code": [
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 12626,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1211,
											"end": 1233,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1193,
											"end": 1234,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1053,
											"end": 1240,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3177,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1902,
											"end": 1938,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1892,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3093,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1944,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3482,
											"end": 3489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3533,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2223,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2242,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2254,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4586,
											"end": 4593,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4570,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 4570,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4619,
											"end": 4623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4433,
											"end": 4630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5375,
											"end": 5413,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5433,
											"end": 5437,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5423,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5467,
											"end": 5471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5192,
											"end": 5478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6078,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 6040,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 6040,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6015,
											"end": 6079,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2367,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2448,
											"end": 2462,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6594,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6687,
											"end": 6691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6785,
											"end": 6792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 6768,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6831,
											"end": 6846,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6846,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3204,
											"end": 3225,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3263,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3234,
											"end": 3264,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3334,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3298,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3335,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3351,
											"end": 3369,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3344,
											"end": 3379,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3396,
											"end": 3415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 6803,
											"end": 6888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6931,
											"end": 6936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6938,
											"end": 6945,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6966,
											"end": 6981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6947,
											"end": 6981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6922,
											"end": 6982,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3729,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3879,
											"end": 3881,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3862,
											"end": 3890,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4102,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3976,
											"end": 4125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10269,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3667,
											"end": 3669,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3670,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3706,
											"end": 3740,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3679,
											"end": 3741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3784,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3801,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3826,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10242,
											"end": 10310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10328,
											"end": 10349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4033,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4036,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4052,
											"end": 4070,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4075,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4145,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4091,
											"end": 4109,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4084,
											"end": 4146,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4155,
											"end": 4187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4204,
											"end": 4223,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3831,
											"end": 4229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10320,
											"end": 10388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10410,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10426,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10399,
											"end": 10435,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10482,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10119,
											"end": 10489,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10937,
											"end": 10942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10944,
											"end": 10951,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10936,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 10927,
											"end": 10952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10966,
											"end": 10982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10966,
											"end": 11003,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 10962,
											"end": 11205,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11047,
											"end": 11053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11043,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11027,
											"end": 11053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4439,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4475,
											"end": 4477,
											"name": "PUSH",
											"source": 7,
											"value": "1D"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4455,
											"end": 4473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4448,
											"end": 4478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4514,
											"end": 4545,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4487,
											"end": 4546,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4234,
											"end": 4587,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 11019,
											"end": 11087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11138,
											"end": 11143,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11145,
											"end": 11152,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11173,
											"end": 11179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11170,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11154,
											"end": 11179,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11129,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11129,
											"end": 11180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10890,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10770,
											"end": 11211,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 7484,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7610,
											"end": 7628,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4796,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4835,
											"name": "PUSH",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4872,
											"end": 4906,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4852,
											"end": 4870,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4845,
											"end": 4907,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4951,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4968,
											"end": 4987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4592,
											"end": 4993,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7602,
											"end": 7670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5200,
											"end": 5202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5182,
											"end": 5203,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5239,
											"end": 5241,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5237,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5212,
											"end": 5242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5278,
											"end": 5312,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5258,
											"end": 5276,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5329,
											"end": 5347,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5372,
											"end": 5391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4998,
											"end": 5397,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7680,
											"end": 7744,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7823,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7826,
											"end": 7841,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7859,
											"end": 7880,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5586,
											"end": 5607,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5643,
											"end": 5645,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5646,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5682,
											"end": 5716,
											"name": "PUSH",
											"source": 7,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5662,
											"end": 5680,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5717,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5726,
											"end": 5762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5779,
											"end": 5798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5402,
											"end": 5804,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7972,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7995,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7995,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8028,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7957,
											"end": 7966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 7995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8015,
											"end": 8038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8069,
											"end": 8071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8073,
											"end": 8079,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1391,
											"end": 1416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1381,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1382,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1245,
											"end": 1422,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8054,
											"end": 8080,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 11795,
											"end": 11916,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 452,
											"end": 458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 446,
											"end": 459,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 522,
											"end": 523,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 497,
											"end": 506,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 493,
											"end": 515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 489,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 482,
											"end": 524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 443,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 443,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 595,
											"end": 597,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 574,
											"end": 589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 570,
											"end": 599,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 555,
											"end": 600,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 551,
											"end": 605,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 611,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 611,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 684,
											"end": 704,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 733,
											"end": 764,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 733,
											"end": 764,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 723,
											"end": 765,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 779,
											"end": 780,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 777,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 769,
											"end": 781,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 713,
											"end": 783,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 713,
											"end": 783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 616,
											"end": 789,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 923,
											"end": 925,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 920,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 902,
											"end": 909,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 898,
											"end": 921,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 926,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 937,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 929,
											"end": 941,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 891,
											"end": 943,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 891,
											"end": 943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 952,
											"end": 991,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1038,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1023,
											"end": 1041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1010,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 794,
											"end": 1048,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1520,
											"end": 1526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1561,
											"end": 1570,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1548,
											"end": 1571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1544,
											"end": 1576,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1589,
											"end": 1590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1587,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1579,
											"end": 1591,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1541,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1631,
											"end": 1640,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1612,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1602,
											"end": 1641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1694,
											"end": 1696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1683,
											"end": 1692,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1679,
											"end": 1697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 1660,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1747,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1734,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1730,
											"end": 1748,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1717,
											"end": 1749,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1749,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1755,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2063,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2040,
											"end": 2047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2036,
											"end": 2059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2064,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2075,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2079,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 2029,
											"end": 2081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2119,
											"end": 2128,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2129,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1949,
											"end": 2135,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2257,
											"end": 2266,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2244,
											"end": 2267,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2240,
											"end": 2272,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2282,
											"end": 2283,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2287,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 2308,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2390,
											"end": 2392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2379,
											"end": 2388,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2375,
											"end": 2393,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2356,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2346,
											"end": 2394,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2400,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2527,
											"end": 2539,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2590,
											"end": 2607,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2607,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2548,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2657,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2647,
											"end": 2653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2658,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2621,
											"end": 2659,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2711,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2696,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2712,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2689,
											"end": 2690,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2713,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2733,
											"end": 2734,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2769,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2405,
											"end": 2785,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2861,
											"end": 2862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2863,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2854,
											"end": 2855,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2851,
											"end": 2864,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2916,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 2901,
											"end": 2904,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 2897,
											"end": 2917,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2918,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2941,
											"end": 2945,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 2938,
											"end": 2939,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2931,
											"end": 2946,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2973,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2966,
											"end": 2967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2974,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 2848,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3000,
											"end": 3009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 3015,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 120,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 126,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 128,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 132,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BCStaking.sol": {
				"BillionCashStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC20",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NewDeposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "Newbie",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "referral",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefBonus",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reinvestAmount",
									"type": "uint256"
								}
							],
							"name": "onReinvestment",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DAILY_ROI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "REFERRAL_PERCENTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "STAKING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TIME_STEP",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "compound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserAmountOfDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserAvailable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserCheckpoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getUserDepositInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserDividends",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferralBonus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferralCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserReferrer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserTotalDeposits",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "getUserTotalWithdrawn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minimumStakeValue",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_minimumStakeValue",
									"type": "uint256"
								}
							],
							"name": "setMinimumStakeValue",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "referrer",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalDepositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWithdrawn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BCStaking.sol\":241:16081  contract BillionCashStaking is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"BCStaking.sol\":774:786  200 * 10**18 */\n  0x0ad78ebc5ac6200000\n    /* \"BCStaking.sol\":739:786  uint256 public minimumStakeValue = 200 * 10**18 */\n  0x06\n  sstore\n    /* \"BCStaking.sol\":1639:1734  constructor(ERC20 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_7:\n    /* \"BCStaking.sol\":1715:1717  BC */\n  0x01\n    /* \"BCStaking.sol\":1715:1726  BC = _token */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"BCStaking.sol\":241:16081  contract BillionCashStaking is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:317   */\ntag_3:\n    /* \"#utility.yul\":97:103   */\n  0x00\n    /* \"#utility.yul\":150:152   */\n  0x20\n    /* \"#utility.yul\":138:147   */\n  dup3\n    /* \"#utility.yul\":129:136   */\n  dup5\n    /* \"#utility.yul\":125:148   */\n  sub\n    /* \"#utility.yul\":121:153   */\n  slt\n    /* \"#utility.yul\":118:170   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":166:167   */\n  0x00\n    /* \"#utility.yul\":163:164   */\n  dup1\n    /* \"#utility.yul\":156:168   */\n  revert\n    /* \"#utility.yul\":118:170   */\ntag_17:\n    /* \"#utility.yul\":192:208   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":237:268   */\n  dup2\n  and\n    /* \"#utility.yul\":227:269   */\n  dup2\n  eq\n    /* \"#utility.yul\":217:287   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":283:284   */\n  0x00\n    /* \"#utility.yul\":280:281   */\n  dup1\n    /* \"#utility.yul\":273:285   */\n  revert\n    /* \"#utility.yul\":217:287   */\ntag_18:\n    /* \"#utility.yul\":306:311   */\n  swap4\n    /* \"#utility.yul\":14:317   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_15:\n    /* \"BCStaking.sol\":241:16081  contract BillionCashStaking is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BCStaking.sol\":241:16081  contract BillionCashStaking is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xc8a22eb4\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xe85abe09\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe85abe09\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xf69e2046\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xfb4cb32b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xc8a22eb4\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd6343867\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd7ffca91\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0xab8a3c6b\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xab8a3c6b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xbff1f9e1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xc0806b03\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x817b1cd2\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa8aeb6c2\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x36144c9a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x4be4d790\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x4be4d790\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4e71d92d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7e3abeea\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x36144c9a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x44038f90\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4b319713\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x0104db1b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01c234a8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x040a772e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x153ab9df\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18e1fbfc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x32bc298c\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BCStaking.sol\":524:573  uint256 public constant STAKING_PERIOD = 180 days */\n    tag_3:\n      tag_36\n        /* \"BCStaking.sol\":565:573  180 days */\n      0xed4e00\n        /* \"BCStaking.sol\":524:573  uint256 public constant STAKING_PERIOD = 180 days */\n      dup2\n      jump\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BCStaking.sol\":524:573  uint256 public constant STAKING_PERIOD = 180 days */\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BCStaking.sol\":322:369  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_4:\n      tag_36\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":322:369  uint256 public constant PERCENTS_DIVIDER = 1000 */\n      dup2\n      jump\n        /* \"BCStaking.sol\":10869:13393  function getUserDividends(address userAddress)... */\n    tag_5:\n      tag_36\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n        /* \"BCStaking.sol\":14093:14341  function getUserAvailable(address userAddress)... */\n    tag_6:\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"BCStaking.sol\":739:786  uint256 public minimumStakeValue = 200 * 10**18 */\n    tag_7:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"BCStaking.sol\":475:517  uint256 public constant TIME_STEP = 1 days */\n    tag_8:\n      tag_36\n        /* \"BCStaking.sol\":511:517  1 days */\n      0x015180\n        /* \"BCStaking.sol\":475:517  uint256 public constant TIME_STEP = 1 days */\n      dup2\n      jump\n        /* \"BCStaking.sol\":13751:13912  function getUserReferrer(address userAddress)... */\n    tag_9:\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":13877:13895  users[userAddress] */\n      swap1\n      dup2\n      and\n        /* \"BCStaking.sol\":13845:13852  address */\n      0x00\n        /* \"BCStaking.sol\":13877:13895  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":13877:13882  users */\n      0x07\n        /* \"BCStaking.sol\":13877:13895  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":13877:13904  users[userAddress].referrer */\n      0x04\n      add\n      sload\n      and\n      swap1\n        /* \"BCStaking.sol\":13751:13912  function getUserReferrer(address userAddress)... */\n      jump\n    tag_58:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":729:761   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"BCStaking.sol\":13751:13912  function getUserReferrer(address userAddress)... */\n      tag_38\n        /* \"#utility.yul\":565:768   */\n      jump\n        /* \"BCStaking.sol\":421:468  uint256 public constant REFERRAL_PERCENTS = 120 */\n    tag_10:\n      tag_36\n        /* \"BCStaking.sol\":465:468  120 */\n      0x78\n        /* \"BCStaking.sol\":421:468  uint256 public constant REFERRAL_PERCENTS = 120 */\n      dup2\n      jump\n        /* \"BCStaking.sol\":664:693  uint256 public totalWithdrawn */\n    tag_11:\n      tag_36\n      sload(0x04)\n      dup2\n      jump\n        /* \"BCStaking.sol\":15921:16078  function setMinimumStakeValue(uint256 _minimumStakeValue)... */\n    tag_12:\n      tag_69\n      tag_70\n      calldatasize\n      0x04\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"BCStaking.sol\":4083:7518  function claim() public {... */\n    tag_13:\n      tag_69\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_69\n      tag_76\n      jump\t// in\n        /* \"BCStaking.sol\":15080:15508  function getUserTotalDeposits(address userAddress)... */\n    tag_15:\n      tag_36\n      tag_78\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"BCStaking.sol\":631:657  uint256 public totalStaked */\n    tag_16:\n      tag_36\n      sload(0x03)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_58)\n        /* \"BCStaking.sol\":14896:15072  function getUserAmountOfDeposits(address userAddress)... */\n    tag_18:\n      tag_36\n      tag_88\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":15030:15048  users[userAddress] */\n      and\n        /* \"BCStaking.sol\":14998:15005  uint256 */\n      0x00\n        /* \"BCStaking.sol\":15030:15048  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":15030:15035  users */\n      0x07\n        /* \"BCStaking.sol\":15030:15048  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":15030:15064  users[userAddress].deposits.length */\n      sload\n      swap1\n        /* \"BCStaking.sol\":14896:15072  function getUserAmountOfDeposits(address userAddress)... */\n      jump\n        /* \"BCStaking.sol\":376:414  uint256 public constant DAILY_ROI = 15 */\n    tag_19:\n      tag_36\n        /* \"BCStaking.sol\":412:414  15 */\n      0x0f\n        /* \"BCStaking.sol\":376:414  uint256 public constant DAILY_ROI = 15 */\n      dup2\n      jump\n        /* \"BCStaking.sol\":1742:4075  function stake(address referrer, uint256 amount) public {... */\n    tag_20:\n      tag_69\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"BCStaking.sol\":599:624  uint256 public totalUsers */\n    tag_21:\n      tag_36\n      sload(0x02)\n      dup2\n      jump\n        /* \"BCStaking.sol\":14349:14888  function getUserDepositInfo(address userAddress, uint256 index)... */\n    tag_22:\n      tag_101\n      tag_102\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1470:1495   */\n      swap6\n      dup7\n      mstore\n        /* \"#utility.yul\":1526:1528   */\n      0x20\n        /* \"#utility.yul\":1511:1529   */\n      dup7\n      add\n        /* \"#utility.yul\":1504:1538   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":1554:1572   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":1547:1581   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1612:1614   */\n      0x60\n        /* \"#utility.yul\":1597:1615   */\n      dup4\n      add\n        /* \"#utility.yul\":1590:1624   */\n      mstore\n        /* \"#utility.yul\":1668:1682   */\n      iszero\n        /* \"#utility.yul\":1661:1683   */\n      iszero\n        /* \"#utility.yul\":1655:1658   */\n      0x80\n        /* \"#utility.yul\":1640:1659   */\n      dup3\n      add\n        /* \"#utility.yul\":1633:1684   */\n      mstore\n        /* \"#utility.yul\":1457:1460   */\n      0xa0\n        /* \"#utility.yul\":1442:1461   */\n      add\n        /* \"BCStaking.sol\":14349:14888  function getUserDepositInfo(address userAddress, uint256 index)... */\n      tag_38\n        /* \"#utility.yul\":1217:1690   */\n      jump\n        /* \"BCStaking.sol\":13572:13743  function getUserReferralCount(address userAddress)... */\n    tag_23:\n      tag_36\n      tag_107\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":13703:13721  users[userAddress] */\n      and\n        /* \"BCStaking.sol\":13671:13678  uint256 */\n      0x00\n        /* \"BCStaking.sol\":13703:13721  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":13703:13708  users */\n      0x07\n        /* \"BCStaking.sol\":13703:13721  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":13703:13735  users[userAddress].referralCount */\n      0x03\n      add\n      sload\n      swap1\n        /* \"BCStaking.sol\":13572:13743  function getUserReferralCount(address userAddress)... */\n      jump\n        /* \"BCStaking.sol\":700:732  uint256 public totalDepositCount */\n    tag_24:\n      tag_36\n      sload(0x05)\n      dup2\n      jump\n        /* \"BCStaking.sol\":13920:14085  function getUserCheckpoint(address userAddress)... */\n    tag_25:\n      tag_36\n      tag_114\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":14048:14066  users[userAddress] */\n      and\n        /* \"BCStaking.sol\":14016:14023  uint256 */\n      0x00\n        /* \"BCStaking.sol\":14048:14066  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":14048:14053  users */\n      0x07\n        /* \"BCStaking.sol\":14048:14066  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":14048:14077  users[userAddress].checkpoint */\n      0x01\n      add\n      sload\n      swap1\n        /* \"BCStaking.sol\":13920:14085  function getUserCheckpoint(address userAddress)... */\n      jump\n        /* \"BCStaking.sol\":13401:13564  function getUserReferralBonus(address userAddress)... */\n    tag_26:\n      tag_36\n      tag_118\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      and\n        /* \"BCStaking.sol\":13500:13507  uint256 */\n      0x00\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":13532:13537  users */\n      0x07\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":13532:13556  users[userAddress].bonus */\n      0x02\n      add\n      sload\n      swap1\n        /* \"BCStaking.sol\":13401:13564  function getUserReferralBonus(address userAddress)... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_27:\n      tag_69\n      tag_122\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"BCStaking.sol\":7526:10861  function compound() public onlyhodler {... */\n    tag_28:\n      tag_69\n      tag_125\n      jump\t// in\n        /* \"BCStaking.sol\":15516:15877  function getUserTotalWithdrawn(address userAddress)... */\n    tag_29:\n      tag_36\n      tag_127\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n        /* \"BCStaking.sol\":10869:13393  function getUserDividends(address userAddress)... */\n    tag_46:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":11009:11027  users[userAddress] */\n      dup2\n      and\n        /* \"BCStaking.sol\":10964:10971  uint256 */\n      0x00\n        /* \"BCStaking.sol\":11009:11027  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":11009:11014  users */\n      0x07\n        /* \"BCStaking.sol\":11009:11027  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BCStaking.sol\":10964:10971  uint256 */\n      dup2\n      dup1\n      dup1\n        /* \"BCStaking.sol\":11103:13352  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_131:\n        /* \"BCStaking.sol\":11127:11147  user.deposits.length */\n      dup4\n      sload\n        /* \"BCStaking.sol\":11123:11147  i < user.deposits.length */\n      dup2\n      lt\n        /* \"BCStaking.sol\":11103:13352  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_132\n      jumpi\n        /* \"BCStaking.sol\":11173:11177  user */\n      dup4\n        /* \"BCStaking.sol\":11173:11186  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":11187:11188  i */\n      dup2\n        /* \"BCStaking.sol\":11173:11189  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":11173:11195  user.deposits[i].ended */\n      0x04\n        /* \"BCStaking.sol\":11173:11189  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":11173:11195  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"BCStaking.sol\":11169:13341  if (user.deposits[i].ended == false) {... */\n      tag_138\n      jumpi\n        /* \"BCStaking.sol\":11256:11271  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":11229:11233  user */\n      dup5\n        /* \"BCStaking.sol\":11229:11242  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":11243:11244  i */\n      dup3\n        /* \"BCStaking.sol\":11229:11245  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_140\n      jumpi\n      tag_140\n      tag_136\n      jump\t// in\n    tag_140:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":11229:11253  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":11229:11271  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"BCStaking.sol\":11225:13261  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_142\n      jumpi\n        /* \"BCStaking.sol\":11329:11333  user */\n      dup4\n        /* \"BCStaking.sol\":11329:11344  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":11300:11304  user */\n      dup5\n        /* \"BCStaking.sol\":11300:11313  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":11314:11315  i */\n      dup3\n        /* \"BCStaking.sol\":11300:11316  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_144\n      jumpi\n      tag_144\n      tag_136\n      jump\t// in\n    tag_144:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":11300:11326  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":11300:11344  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":11296:12187  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"BCStaking.sol\":11385:11790  (... */\n      tag_147\n        /* \"BCStaking.sol\":11787:11789  60 */\n      0x3c\n        /* \"BCStaking.sol\":11385:11752  (... */\n      tag_156\n        /* \"BCStaking.sol\":11749:11751  60 */\n      0x3c\n        /* \"BCStaking.sol\":11385:11714  (... */\n      tag_156\n        /* \"BCStaking.sol\":11636:11683  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_150\n        /* \"BCStaking.sol\":11656:11660  user */\n      dup10\n        /* \"BCStaking.sol\":11656:11669  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":11670:11671  i */\n      dup8\n        /* \"BCStaking.sol\":11656:11672  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_136\n      jump\t// in\n    tag_152:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":11656:11682  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":11636:11651  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":11636:11655  block.timestamp.sub */\n      tag_154\n      swap1\n        /* \"BCStaking.sol\":11636:11683  block.timestamp.sub(user.deposits[i].startTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"BCStaking.sol\":11416:11540  user.deposits[i].amount.mul(DAILY_ROI).div(... */\n      tag_155\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":11416:11454  user.deposits[i].amount.mul(DAILY_ROI) */\n      tag_156\n        /* \"BCStaking.sol\":412:414  15 */\n      0x0f\n        /* \"BCStaking.sol\":11416:11420  user */\n      dup14\n        /* \"BCStaking.sol\":11416:11429  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":11430:11431  i */\n      dup12\n        /* \"BCStaking.sol\":11416:11432  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_136\n      jump\t// in\n    tag_158:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":11416:11439  user.deposits[i].amount */\n      sload\n      swap1\n        /* \"BCStaking.sol\":11416:11443  user.deposits[i].amount.mul */\n      tag_160\n        /* \"BCStaking.sol\":11416:11454  user.deposits[i].amount.mul(DAILY_ROI) */\n      jump\t// in\n    tag_156:\n        /* \"BCStaking.sol\":11416:11458  user.deposits[i].amount.mul(DAILY_ROI).div */\n      swap1\n      tag_161\n        /* \"BCStaking.sol\":11416:11540  user.deposits[i].amount.mul(DAILY_ROI).div(... */\n      jump\t// in\n    tag_155:\n        /* \"BCStaking.sol\":11385:11601  (... */\n      swap1\n      tag_160\n        /* \"BCStaking.sol\":11385:11714  (... */\n      jump\t// in\n        /* \"BCStaking.sol\":11385:11790  (... */\n    tag_147:\n        /* \"BCStaking.sol\":11373:11790  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":11225:13261  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_192)\n        /* \"BCStaking.sol\":11296:12187  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_146:\n        /* \"BCStaking.sol\":11859:12163  (... */\n      tag_147\n        /* \"BCStaking.sol\":12130:12132  60 */\n      0x3c\n        /* \"BCStaking.sol\":11859:12091  (... */\n      tag_156\n        /* \"BCStaking.sol\":12088:12090  60 */\n      0x3c\n        /* \"BCStaking.sol\":11859:12083  (... */\n      tag_156\n        /* \"BCStaking.sol\":12046:12082  block.timestamp.sub(user.checkpoint) */\n      tag_150\n        /* \"BCStaking.sol\":12066:12070  user */\n      dup10\n        /* \"BCStaking.sol\":12066:12081  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":12046:12061  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":12046:12065  block.timestamp.sub */\n      tag_154\n      swap1\n        /* \"BCStaking.sol\":12046:12082  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"BCStaking.sol\":11225:13261  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_142:\n        /* \"BCStaking.sol\":12268:12272  user */\n      dup4\n        /* \"BCStaking.sol\":12268:12283  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":12239:12243  user */\n      dup5\n        /* \"BCStaking.sol\":12239:12252  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":12253:12254  i */\n      dup3\n        /* \"BCStaking.sol\":12239:12255  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_174\n      jumpi\n      tag_174\n      tag_136\n      jump\t// in\n    tag_174:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":12239:12265  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":12239:12283  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":12235:13242  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_176\n      jumpi\n        /* \"BCStaking.sol\":12324:12810  (... */\n      tag_147\n        /* \"BCStaking.sol\":12807:12809  60 */\n      0x3c\n        /* \"BCStaking.sol\":12324:12772  (... */\n      tag_156\n        /* \"BCStaking.sol\":12769:12771  60 */\n      0x3c\n        /* \"BCStaking.sol\":12324:12734  (... */\n      tag_156\n        /* \"BCStaking.sol\":12575:12703  user.deposits[i].endTime.sub(... */\n      tag_150\n        /* \"BCStaking.sol\":12642:12646  user */\n      dup10\n        /* \"BCStaking.sol\":12642:12655  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":12656:12657  i */\n      dup8\n        /* \"BCStaking.sol\":12642:12658  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_136\n      jump\t// in\n    tag_182:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":12642:12668  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":12575:12579  user */\n      dup11\n        /* \"BCStaking.sol\":12575:12588  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":12589:12590  i */\n      dup9\n        /* \"BCStaking.sol\":12575:12591  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_136\n      jump\t// in\n    tag_185:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":12575:12599  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":12575:12603  user.deposits[i].endTime.sub */\n      tag_154\n      swap1\n        /* \"BCStaking.sol\":12575:12703  user.deposits[i].endTime.sub(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"BCStaking.sol\":12235:13242  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_176:\n        /* \"BCStaking.sol\":12879:13218  (... */\n      tag_193\n        /* \"BCStaking.sol\":13215:13217  60 */\n      0x3c\n        /* \"BCStaking.sol\":12879:13180  (... */\n      tag_156\n        /* \"BCStaking.sol\":13177:13179  60 */\n      0x3c\n        /* \"BCStaking.sol\":12879:13142  (... */\n      tag_156\n        /* \"BCStaking.sol\":13096:13141  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_150\n        /* \"BCStaking.sol\":13125:13129  user */\n      dup10\n        /* \"BCStaking.sol\":13125:13140  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":13096:13100  user */\n      dup11\n        /* \"BCStaking.sol\":13096:13109  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":13110:13111  i */\n      dup9\n        /* \"BCStaking.sol\":13096:13112  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":12879:13218  (... */\n    tag_193:\n        /* \"BCStaking.sol\":12867:13218  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":12235:13242  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_192:\n        /* \"BCStaking.sol\":13296:13325  totalDividends.add(dividends) */\n      tag_205\n        /* \"BCStaking.sol\":13296:13310  totalDividends */\n      dup4\n        /* \"BCStaking.sol\":13315:13324  dividends */\n      dup4\n        /* \"BCStaking.sol\":13296:13314  totalDividends.add */\n      tag_206\n        /* \"BCStaking.sol\":13296:13325  totalDividends.add(dividends) */\n      jump\t// in\n    tag_205:\n        /* \"BCStaking.sol\":13279:13325  totalDividends = totalDividends.add(dividends) */\n      swap3\n      pop\n        /* \"BCStaking.sol\":11169:13341  if (user.deposits[i].ended == false) {... */\n    tag_138:\n        /* \"BCStaking.sol\":11149:11152  i++ */\n      dup1\n      tag_207\n      dup2\n      tag_208\n      jump\t// in\n    tag_207:\n      swap2\n      pop\n      pop\n        /* \"BCStaking.sol\":11103:13352  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_131)\n    tag_132:\n      pop\n        /* \"BCStaking.sol\":13371:13385  totalDividends */\n      swap1\n      swap5\n        /* \"BCStaking.sol\":10869:13393  function getUserDividends(address userAddress)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BCStaking.sol\":14093:14341  function getUserAvailable(address userAddress)... */\n    tag_50:\n        /* \"BCStaking.sol\":14188:14195  uint256 */\n      0x00\n        /* \"BCStaking.sol\":14233:14333  getUserReferralBonus(userAddress).add(... */\n      tag_210\n        /* \"BCStaking.sol\":14289:14318  getUserDividends(userAddress) */\n      tag_211\n        /* \"BCStaking.sol\":14306:14317  userAddress */\n      dup4\n        /* \"BCStaking.sol\":14289:14305  getUserDividends */\n      tag_46\n        /* \"BCStaking.sol\":14289:14318  getUserDividends(userAddress) */\n      jump\t// in\n    tag_211:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      dup5\n      and\n        /* \"BCStaking.sol\":13500:13507  uint256 */\n      0x00\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":13532:13537  users */\n      0x07\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":13532:13556  users[userAddress].bonus */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":14233:14270  getUserReferralBonus(userAddress).add */\n      swap1\n      tag_206\n        /* \"BCStaking.sol\":14233:14333  getUserReferralBonus(userAddress).add(... */\n      jump\t// in\n    tag_210:\n        /* \"BCStaking.sol\":14213:14333  return... */\n      swap3\n        /* \"BCStaking.sol\":14093:14341  function getUserAvailable(address userAddress)... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BCStaking.sol\":15921:16078  function setMinimumStakeValue(uint256 _minimumStakeValue)... */\n    tag_72:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"BCStaking.sol\":16032:16049  minimumStakeValue */\n      0x06\n        /* \"BCStaking.sol\":16032:16070  minimumStakeValue = _minimumStakeValue */\n      sstore\n        /* \"BCStaking.sol\":15921:16078  function setMinimumStakeValue(uint256 _minimumStakeValue)... */\n      jump\t// out\n        /* \"BCStaking.sol\":4083:7518  function claim() public {... */\n    tag_74:\n        /* \"BCStaking.sol\":4144:4154  msg.sender */\n      caller\n        /* \"BCStaking.sol\":4118:4135  User storage user */\n      0x00\n        /* \"BCStaking.sol\":4138:4155  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":4138:4143  users */\n      0x07\n        /* \"BCStaking.sol\":4138:4155  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"BCStaking.sol\":4118:4135  User storage user */\n      dup1\n      dup1\n        /* \"BCStaking.sol\":4228:6742  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_223:\n        /* \"BCStaking.sol\":4252:4272  user.deposits.length */\n      dup4\n      sload\n        /* \"BCStaking.sol\":4248:4272  i < user.deposits.length */\n      dup2\n      lt\n        /* \"BCStaking.sol\":4228:6742  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_224\n      jumpi\n        /* \"BCStaking.sol\":4298:4302  user */\n      dup4\n        /* \"BCStaking.sol\":4298:4311  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":4312:4313  i */\n      dup2\n        /* \"BCStaking.sol\":4298:4314  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_227\n      tag_136\n      jump\t// in\n    tag_227:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":4298:4320  user.deposits[i].ended */\n      0x04\n        /* \"BCStaking.sol\":4298:4314  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":4298:4320  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"BCStaking.sol\":4294:6731  if (user.deposits[i].ended == false) {... */\n      tag_229\n      jumpi\n        /* \"BCStaking.sol\":4381:4396  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":4354:4358  user */\n      dup5\n        /* \"BCStaking.sol\":4354:4367  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":4368:4369  i */\n      dup3\n        /* \"BCStaking.sol\":4354:4370  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_231\n      jumpi\n      tag_231\n      tag_136\n      jump\t// in\n    tag_231:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":4354:4378  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":4354:4396  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"BCStaking.sol\":4350:6497  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"BCStaking.sol\":4454:4458  user */\n      dup4\n        /* \"BCStaking.sol\":4454:4469  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":4425:4429  user */\n      dup5\n        /* \"BCStaking.sol\":4425:4438  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":4439:4440  i */\n      dup3\n        /* \"BCStaking.sol\":4425:4441  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_235\n      tag_136\n      jump\t// in\n    tag_235:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":4425:4451  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":4425:4469  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":4421:5311  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"BCStaking.sol\":4510:4915  (... */\n      tag_238\n        /* \"BCStaking.sol\":4912:4914  60 */\n      0x3c\n        /* \"BCStaking.sol\":4510:4877  (... */\n      tag_156\n        /* \"BCStaking.sol\":4874:4876  60 */\n      0x3c\n        /* \"BCStaking.sol\":4510:4839  (... */\n      tag_156\n        /* \"BCStaking.sol\":4761:4808  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_150\n        /* \"BCStaking.sol\":4781:4785  user */\n      dup10\n        /* \"BCStaking.sol\":4781:4794  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":4795:4796  i */\n      dup8\n        /* \"BCStaking.sol\":4781:4797  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":4510:4915  (... */\n    tag_238:\n        /* \"BCStaking.sol\":4498:4915  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":4350:6497  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_282)\n        /* \"BCStaking.sol\":4421:5311  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_237:\n        /* \"BCStaking.sol\":4984:5287  (... */\n      tag_238\n        /* \"BCStaking.sol\":511:517  1 days */\n      0x015180\n        /* \"BCStaking.sol\":4984:5208  (... */\n      tag_156\n        /* \"BCStaking.sol\":5171:5207  block.timestamp.sub(user.checkpoint) */\n      tag_253\n        /* \"BCStaking.sol\":5191:5195  user */\n      dup8\n        /* \"BCStaking.sol\":5191:5206  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":5171:5186  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":5171:5190  block.timestamp.sub */\n      tag_154\n      swap1\n        /* \"BCStaking.sol\":5171:5207  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"BCStaking.sol\":5015:5139  user.deposits[i].amount.mul(DAILY_ROI).div(... */\n      tag_155\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":5015:5053  user.deposits[i].amount.mul(DAILY_ROI) */\n      tag_156\n        /* \"BCStaking.sol\":412:414  15 */\n      0x0f\n        /* \"BCStaking.sol\":5015:5019  user */\n      dup12\n        /* \"BCStaking.sol\":5015:5028  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":5029:5030  i */\n      dup10\n        /* \"BCStaking.sol\":5015:5031  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":4350:6497  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_233:\n        /* \"BCStaking.sol\":5392:5396  user */\n      dup4\n        /* \"BCStaking.sol\":5392:5407  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":5363:5367  user */\n      dup5\n        /* \"BCStaking.sol\":5363:5376  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":5377:5378  i */\n      dup3\n        /* \"BCStaking.sol\":5363:5379  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_261\n      tag_136\n      jump\t// in\n    tag_261:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":5363:5389  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":5363:5407  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":5359:6478  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"BCStaking.sol\":5448:5934  (... */\n      tag_264\n        /* \"BCStaking.sol\":5931:5933  60 */\n      0x3c\n        /* \"BCStaking.sol\":5448:5896  (... */\n      tag_156\n        /* \"BCStaking.sol\":5893:5895  60 */\n      0x3c\n        /* \"BCStaking.sol\":5448:5858  (... */\n      tag_156\n        /* \"BCStaking.sol\":5699:5827  user.deposits[i].endTime.sub(... */\n      tag_150\n        /* \"BCStaking.sol\":5766:5770  user */\n      dup10\n        /* \"BCStaking.sol\":5766:5779  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":5780:5781  i */\n      dup8\n        /* \"BCStaking.sol\":5766:5782  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":5448:5934  (... */\n    tag_264:\n        /* \"BCStaking.sol\":5436:5934  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":5986:5990  true */\n      0x01\n        /* \"BCStaking.sol\":5961:5965  user */\n      dup5\n        /* \"BCStaking.sol\":5961:5974  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":5975:5976  i */\n      dup3\n        /* \"BCStaking.sol\":5961:5977  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_280\n      jumpi\n      tag_280\n      tag_136\n      jump\t// in\n    tag_280:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":5961:5983  user.deposits[i].ended */\n      0x04\n      add\n        /* \"BCStaking.sol\":5961:5990  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":5359:6478  if (user.deposits[i].startTime > user.checkpoint) {... */\n      jump(tag_282)\n    tag_263:\n        /* \"BCStaking.sol\":6059:6398  (... */\n      tag_283\n        /* \"BCStaking.sol\":6395:6397  60 */\n      0x3c\n        /* \"BCStaking.sol\":6059:6360  (... */\n      tag_156\n        /* \"BCStaking.sol\":6357:6359  60 */\n      0x3c\n        /* \"BCStaking.sol\":6059:6322  (... */\n      tag_156\n        /* \"BCStaking.sol\":6276:6321  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_150\n        /* \"BCStaking.sol\":6305:6309  user */\n      dup10\n        /* \"BCStaking.sol\":6305:6320  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":6276:6280  user */\n      dup11\n        /* \"BCStaking.sol\":6276:6289  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":6290:6291  i */\n      dup9\n        /* \"BCStaking.sol\":6276:6292  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":6059:6398  (... */\n    tag_283:\n        /* \"BCStaking.sol\":6047:6398  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":6450:6454  true */\n      0x01\n        /* \"BCStaking.sol\":6425:6429  user */\n      dup5\n        /* \"BCStaking.sol\":6425:6438  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":6439:6440  i */\n      dup3\n        /* \"BCStaking.sol\":6425:6441  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_296\n      jumpi\n      tag_296\n      tag_136\n      jump\t// in\n    tag_296:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":6425:6447  user.deposits[i].ended */\n      0x04\n      add\n        /* \"BCStaking.sol\":6425:6454  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":5359:6478  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_282:\n        /* \"BCStaking.sol\":6546:6627  user.deposits[i].withdrawn.add(... */\n      tag_298\n        /* \"BCStaking.sol\":6599:6608  dividends */\n      dup3\n        /* \"BCStaking.sol\":6546:6550  user */\n      dup6\n        /* \"BCStaking.sol\":6546:6559  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":6560:6561  i */\n      dup4\n        /* \"BCStaking.sol\":6546:6562  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_136\n      jump\t// in\n    tag_300:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":6546:6572  user.deposits[i].withdrawn */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":6546:6576  user.deposits[i].withdrawn.add */\n      tag_206\n      swap1\n        /* \"BCStaking.sol\":6546:6627  user.deposits[i].withdrawn.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"BCStaking.sol\":6517:6521  user */\n      dup5\n        /* \"BCStaking.sol\":6517:6530  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":6531:6532  i */\n      dup3\n        /* \"BCStaking.sol\":6517:6533  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_136\n      jump\t// in\n    tag_303:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":6517:6543  user.deposits[i].withdrawn */\n      0x01\n        /* \"BCStaking.sol\":6517:6533  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":6517:6543  user.deposits[i].withdrawn */\n      add\n        /* \"BCStaking.sol\":6517:6627  user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(... */\n      sstore\n        /* \"BCStaking.sol\":6689:6715  totalAmount.add(dividends) */\n      tag_305\n        /* \"BCStaking.sol\":6689:6700  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":6705:6714  dividends */\n      dup4\n        /* \"BCStaking.sol\":6689:6704  totalAmount.add */\n      tag_206\n        /* \"BCStaking.sol\":6689:6715  totalAmount.add(dividends) */\n      jump\t// in\n    tag_305:\n        /* \"BCStaking.sol\":6675:6715  totalAmount = totalAmount.add(dividends) */\n      swap3\n      pop\n        /* \"BCStaking.sol\":4294:6731  if (user.deposits[i].ended == false) {... */\n    tag_229:\n        /* \"BCStaking.sol\":4274:4277  i++ */\n      dup1\n      tag_306\n      dup2\n      tag_208\n      jump\t// in\n    tag_306:\n      swap2\n      pop\n      pop\n        /* \"BCStaking.sol\":4228:6742  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_223)\n    tag_224:\n      pop\n        /* \"BCStaking.sol\":6799:6809  msg.sender */\n      caller\n        /* \"BCStaking.sol\":6754:6775  uint256 referralBonus */\n      0x00\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":13532:13537  users */\n      0x07\n        /* \"BCStaking.sol\":13532:13550  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":13532:13556  users[userAddress].bonus */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":6825:6842  referralBonus > 0 */\n      dup1\n      iszero\n        /* \"BCStaking.sol\":6821:6981  if (referralBonus > 0) {... */\n      tag_308\n      jumpi\n        /* \"BCStaking.sol\":6873:6903  totalAmount.add(referralBonus) */\n      tag_309\n        /* \"BCStaking.sol\":6873:6884  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":6889:6902  referralBonus */\n      dup3\n        /* \"BCStaking.sol\":6873:6888  totalAmount.add */\n      tag_206\n        /* \"BCStaking.sol\":6873:6903  totalAmount.add(referralBonus) */\n      jump\t// in\n    tag_309:\n        /* \"BCStaking.sol\":6931:6932  0 */\n      0x00\n        /* \"BCStaking.sol\":6918:6928  user.bonus */\n      0x02\n      dup7\n      add\n        /* \"BCStaking.sol\":6918:6932  user.bonus = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"BCStaking.sol\":6947:6965  user.referralCount */\n      0x03\n      dup7\n      add\n        /* \"BCStaking.sol\":6947:6969  user.referralCount = 0 */\n      sstore\n        /* \"BCStaking.sol\":6859:6903  totalAmount = totalAmount.add(referralBonus) */\n      swap3\n      pop\n        /* \"BCStaking.sol\":6821:6981  if (referralBonus > 0) {... */\n    tag_308:\n        /* \"BCStaking.sol\":7015:7016  0 */\n      0x00\n        /* \"BCStaking.sol\":7001:7012  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":7001:7016  totalAmount > 0 */\n      gt\n        /* \"BCStaking.sol\":6993:7042  require(totalAmount > 0, \"User has no dividends\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2662:2664   */\n      0x20\n        /* \"BCStaking.sol\":6993:7042  require(totalAmount > 0, \"User has no dividends\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2644:2665   */\n      mstore\n        /* \"#utility.yul\":2701:2703   */\n      0x15\n        /* \"#utility.yul\":2681:2699   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2674:2704   */\n      mstore\n      shl(0x58, 0x5573657220686173206e6f206469766964656e6473)\n        /* \"#utility.yul\":2720:2738   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2713:2764   */\n      mstore\n        /* \"#utility.yul\":2781:2799   */\n      0x64\n      add\n        /* \"BCStaking.sol\":6993:7042  require(totalAmount > 0, \"User has no dividends\") */\n      tag_219\n        /* \"#utility.yul\":2460:2805   */\n      jump\n        /* \"BCStaking.sol\":6993:7042  require(totalAmount > 0, \"User has no dividends\") */\n    tag_310:\n        /* \"BCStaking.sol\":7081:7083  BC */\n      sload(0x01)\n        /* \"BCStaking.sol\":7081:7108  BC.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"BCStaking.sol\":7102:7106  this */\n      address\n        /* \"BCStaking.sol\":7081:7108  BC.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":711:762   */\n      mstore\n        /* \"BCStaking.sol\":7055:7078  uint256 contractBalance */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":7081:7083  BC */\n      and\n      swap1\n        /* \"BCStaking.sol\":7081:7093  BC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":684:702   */\n      0x24\n      add\n        /* \"BCStaking.sol\":7081:7108  BC.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_315\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_315:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_316\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n        /* \"BCStaking.sol\":7055:7108  uint256 contractBalance = BC.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"BCStaking.sol\":7141:7152  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":7123:7138  contractBalance */\n      dup2\n        /* \"BCStaking.sol\":7123:7152  contractBalance < totalAmount */\n      lt\n        /* \"BCStaking.sol\":7119:7210  if (contractBalance < totalAmount) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"BCStaking.sol\":7183:7198  contractBalance */\n      dup1\n        /* \"BCStaking.sol\":7169:7198  totalAmount = contractBalance */\n      swap4\n      pop\n        /* \"BCStaking.sol\":7119:7210  if (contractBalance < totalAmount) {... */\n    tag_318:\n        /* \"BCStaking.sol\":7240:7255  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":7222:7237  user.checkpoint */\n      0x01\n      dup7\n      dup2\n      add\n        /* \"BCStaking.sol\":7222:7255  user.checkpoint = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"BCStaking.sol\":7290:7292  BC */\n      sload\n        /* \"BCStaking.sol\":7290:7326  BC.transfer(msg.sender, totalAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"BCStaking.sol\":7302:7312  msg.sender */\n      caller\n        /* \"BCStaking.sol\":7290:7326  BC.transfer(msg.sender, totalAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3173:3224   */\n      mstore\n        /* \"#utility.yul\":3240:3258   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3233:3267   */\n      dup7\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":7290:7292  BC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BCStaking.sol\":7290:7301  BC.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3146:3164   */\n      0x44\n      add\n        /* \"BCStaking.sol\":7290:7326  BC.transfer(msg.sender, totalAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"BCStaking.sol\":7268:7397  require(... */\n      tag_325\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3762:3764   */\n      0x20\n        /* \"BCStaking.sol\":7268:7397  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3744:3765   */\n      mstore\n        /* \"#utility.yul\":3801:3803   */\n      0x2b\n        /* \"#utility.yul\":3781:3799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3774:3804   */\n      mstore\n        /* \"#utility.yul\":3840:3874   */\n      0x436c61696d206661696c65642064756520746f206661696c656420616d6f756e\n        /* \"#utility.yul\":3820:3838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3813:3875   */\n      mstore\n      shl(0xa9, 0x3a103a3930b739b332b917)\n        /* \"#utility.yul\":3891:3909   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3884:3925   */\n      mstore\n        /* \"#utility.yul\":3942:3961   */\n      0x84\n      add\n        /* \"BCStaking.sol\":7268:7397  require(... */\n      tag_219\n        /* \"#utility.yul\":3560:3967   */\n      jump\n        /* \"BCStaking.sol\":7268:7397  require(... */\n    tag_325:\n        /* \"BCStaking.sol\":7427:7441  totalWithdrawn */\n      sload(0x04)\n        /* \"BCStaking.sol\":7427:7458  totalWithdrawn.add(totalAmount) */\n      tag_328\n      swap1\n        /* \"BCStaking.sol\":7446:7457  totalAmount */\n      dup6\n        /* \"BCStaking.sol\":7427:7445  totalWithdrawn.add */\n      tag_206\n        /* \"BCStaking.sol\":7427:7458  totalWithdrawn.add(totalAmount) */\n      jump\t// in\n    tag_328:\n        /* \"BCStaking.sol\":7410:7424  totalWithdrawn */\n      0x04\n        /* \"BCStaking.sol\":7410:7458  totalWithdrawn = totalWithdrawn.add(totalAmount) */\n      sstore\n        /* \"BCStaking.sol\":7476:7510  Withdrawn(msg.sender, totalAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup5\n      dup2\n      mstore\n        /* \"BCStaking.sol\":7486:7496  msg.sender */\n      caller\n      swap1\n        /* \"BCStaking.sol\":7476:7510  Withdrawn(msg.sender, totalAmount) */\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BCStaking.sol\":7476:7510  Withdrawn(msg.sender, totalAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"BCStaking.sol\":4107:7518  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"BCStaking.sol\":4083:7518  function claim() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_333:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_337\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"BCStaking.sol\":15080:15508  function getUserTotalDeposits(address userAddress)... */\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":15224:15242  users[userAddress] */\n      dup2\n      and\n        /* \"BCStaking.sol\":15179:15186  uint256 */\n      0x00\n        /* \"BCStaking.sol\":15224:15242  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":15224:15229  users */\n      0x07\n        /* \"BCStaking.sol\":15224:15242  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BCStaking.sol\":15179:15186  uint256 */\n      dup2\n      dup1\n        /* \"BCStaking.sol\":15282:15475  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_339:\n        /* \"BCStaking.sol\":15306:15326  user.deposits.length */\n      dup3\n      sload\n        /* \"BCStaking.sol\":15302:15326  i < user.deposits.length */\n      dup2\n      lt\n        /* \"BCStaking.sol\":15282:15475  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"BCStaking.sol\":15352:15356  user */\n      dup3\n        /* \"BCStaking.sol\":15352:15365  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":15366:15367  i */\n      dup2\n        /* \"BCStaking.sol\":15352:15368  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_343\n      jumpi\n      tag_343\n      tag_136\n      jump\t// in\n    tag_343:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":15352:15374  user.deposits[i].ended */\n      0x04\n        /* \"BCStaking.sol\":15352:15368  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":15352:15374  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"BCStaking.sol\":15348:15464  if (user.deposits[i].ended == false) {... */\n      tag_345\n      jumpi\n        /* \"BCStaking.sol\":15413:15448  amount.add(user.deposits[i].amount) */\n      tag_346\n        /* \"BCStaking.sol\":15424:15428  user */\n      dup4\n        /* \"BCStaking.sol\":15424:15437  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":15438:15439  i */\n      dup3\n        /* \"BCStaking.sol\":15424:15440  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_348\n      jumpi\n      tag_348\n      tag_136\n      jump\t// in\n    tag_348:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":15424:15447  user.deposits[i].amount */\n      sload\n        /* \"BCStaking.sol\":15413:15419  amount */\n      dup4\n      swap1\n        /* \"BCStaking.sol\":15413:15423  amount.add */\n      tag_206\n        /* \"BCStaking.sol\":15413:15448  amount.add(user.deposits[i].amount) */\n      jump\t// in\n    tag_346:\n        /* \"BCStaking.sol\":15404:15448  amount = amount.add(user.deposits[i].amount) */\n      swap2\n      pop\n        /* \"BCStaking.sol\":15348:15464  if (user.deposits[i].ended == false) {... */\n    tag_345:\n        /* \"BCStaking.sol\":15328:15331  i++ */\n      dup1\n      tag_350\n      dup2\n      tag_208\n      jump\t// in\n    tag_350:\n      swap2\n      pop\n      pop\n        /* \"BCStaking.sol\":15282:15475  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_339)\n    tag_340:\n      pop\n        /* \"BCStaking.sol\":15494:15500  amount */\n      swap4\n        /* \"BCStaking.sol\":15080:15508  function getUserTotalDeposits(address userAddress)... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BCStaking.sol\":1742:4075  function stake(address referrer, uint256 amount) public {... */\n    tag_97:\n        /* \"BCStaking.sol\":1841:1858  minimumStakeValue */\n      sload(0x06)\n        /* \"BCStaking.sol\":1831:1837  amount */\n      dup2\n        /* \"BCStaking.sol\":1831:1858  amount >= minimumStakeValue */\n      lt\n      iszero\n        /* \"BCStaking.sol\":1809:1922  require(... */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4174:4176   */\n      0x20\n        /* \"BCStaking.sol\":1809:1922  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4156:4177   */\n      mstore\n        /* \"#utility.yul\":4213:4215   */\n      0x24\n        /* \"#utility.yul\":4193:4211   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4186:4216   */\n      mstore\n        /* \"#utility.yul\":4252:4286   */\n      0x416d6f756e742069732062656c6f77206d696e696d756d207374616b65207661\n        /* \"#utility.yul\":4232:4250   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4225:4287   */\n      mstore\n      shl(0xe1, 0x363ab297)\n        /* \"#utility.yul\":4303:4321   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4296:4330   */\n      mstore\n        /* \"#utility.yul\":4347:4366   */\n      0x84\n      add\n        /* \"BCStaking.sol\":1809:1922  require(... */\n      tag_219\n        /* \"#utility.yul\":3972:4372   */\n      jump\n        /* \"BCStaking.sol\":1809:1922  require(... */\n    tag_354:\n        /* \"BCStaking.sol\":1957:1959  BC */\n      sload(0x01)\n        /* \"BCStaking.sol\":1957:1981  BC.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"BCStaking.sol\":1970:1980  msg.sender */\n      caller\n        /* \"BCStaking.sol\":1957:1981  BC.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":711:762   */\n      mstore\n        /* \"BCStaking.sol\":1985:1991  amount */\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":1957:1959  BC */\n      and\n      swap1\n        /* \"BCStaking.sol\":1957:1969  BC.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":684:702   */\n      0x24\n      add\n        /* \"BCStaking.sol\":1957:1981  BC.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_359\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_359:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_360\n      swap2\n      swap1\n      tag_317\n      jump\t// in\n    tag_360:\n        /* \"BCStaking.sol\":1957:1991  BC.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"BCStaking.sol\":1935:2052  require(... */\n      tag_361\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4579:4581   */\n      0x20\n        /* \"BCStaking.sol\":1935:2052  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4561:4582   */\n      mstore\n        /* \"#utility.yul\":4618:4620   */\n      0x21\n        /* \"#utility.yul\":4598:4616   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4591:4621   */\n      mstore\n        /* \"#utility.yul\":4657:4691   */\n      0x4d757374206861766520656e6f7567682062616c616e636520746f207374616b\n        /* \"#utility.yul\":4637:4655   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4630:4692   */\n      mstore\n      shl(0xf8, 0x65)\n        /* \"#utility.yul\":4708:4726   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4701:4732   */\n      mstore\n        /* \"#utility.yul\":4749:4768   */\n      0x84\n      add\n        /* \"BCStaking.sol\":1935:2052  require(... */\n      tag_219\n        /* \"#utility.yul\":4377:4774   */\n      jump\n        /* \"BCStaking.sol\":1935:2052  require(... */\n    tag_361:\n        /* \"BCStaking.sol\":2087:2089  BC */\n      sload(0x01)\n        /* \"BCStaking.sol\":2087:2137  BC.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2103:2113  msg.sender */\n      caller\n        /* \"BCStaking.sol\":2087:2137  BC.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5019:5053   */\n      mstore\n        /* \"BCStaking.sol\":2123:2127  this */\n      address\n        /* \"#utility.yul\":5069:5087   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5062:5105   */\n      mstore\n        /* \"#utility.yul\":5121:5139   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":5114:5148   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2087:2089  BC */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BCStaking.sol\":2087:2102  BC.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":4954:4972   */\n      0x64\n      add\n        /* \"BCStaking.sol\":2087:2137  BC.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_367\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_367:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_368\n      swap2\n      swap1\n      tag_324\n      jump\t// in\n    tag_368:\n        /* \"BCStaking.sol\":2065:2208  require(... */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5361:5363   */\n      0x20\n        /* \"BCStaking.sol\":2065:2208  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5343:5364   */\n      mstore\n        /* \"#utility.yul\":5400:5402   */\n      0x2b\n        /* \"#utility.yul\":5380:5398   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5373:5403   */\n      mstore\n        /* \"#utility.yul\":5439:5473   */\n      0x5374616b65206661696c65642064756520746f206661696c656420616d6f756e\n        /* \"#utility.yul\":5419:5437   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5412:5474   */\n      mstore\n      shl(0xa9, 0x3a103a3930b739b332b917)\n        /* \"#utility.yul\":5490:5508   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5483:5524   */\n      mstore\n        /* \"#utility.yul\":5541:5560   */\n      0x84\n      add\n        /* \"BCStaking.sol\":2065:2208  require(... */\n      tag_219\n        /* \"#utility.yul\":5159:5566   */\n      jump\n        /* \"BCStaking.sol\":2065:2208  require(... */\n    tag_369:\n        /* \"BCStaking.sol\":2247:2257  msg.sender */\n      caller\n        /* \"BCStaking.sol\":2221:2238  User storage user */\n      0x00\n        /* \"BCStaking.sol\":2241:2258  users[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2241:2246  users */\n      0x07\n        /* \"BCStaking.sol\":2241:2258  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":2289:2302  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BCStaking.sol\":2289:2316  user.referrer == address(0) */\n      iszero\n        /* \"BCStaking.sol\":2289:2368  user.referrer == address(0) &&... */\n      dup1\n      iszero\n      tag_372\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2333:2348  users[referrer] */\n      dup4\n      and\n        /* \"BCStaking.sol\":2367:2368  0 */\n      0x00\n        /* \"BCStaking.sol\":2333:2348  users[referrer] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2333:2338  users */\n      0x07\n        /* \"BCStaking.sol\":2333:2348  users[referrer] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":2333:2364  users[referrer].deposits.length */\n      sload\n        /* \"BCStaking.sol\":2333:2368  users[referrer].deposits.length > 0 */\n      iszero\n      iszero\n        /* \"BCStaking.sol\":2289:2368  user.referrer == address(0) &&... */\n    tag_372:\n        /* \"BCStaking.sol\":2289:2407  user.referrer == address(0) &&... */\n      dup1\n      iszero\n      tag_373\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2385:2407  referrer != msg.sender */\n      dup4\n      and\n        /* \"BCStaking.sol\":2397:2407  msg.sender */\n      caller\n        /* \"BCStaking.sol\":2385:2407  referrer != msg.sender */\n      eq\n      iszero\n        /* \"BCStaking.sol\":2289:2407  user.referrer == address(0) &&... */\n    tag_373:\n        /* \"BCStaking.sol\":2271:2470  if (... */\n      iszero\n      tag_374\n      jumpi\n        /* \"BCStaking.sol\":2434:2447  user.referrer */\n      0x04\n      dup2\n      add\n        /* \"BCStaking.sol\":2434:2458  user.referrer = referrer */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup6\n      and\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":2271:2470  if (... */\n    tag_374:\n        /* \"BCStaking.sol\":2486:2499  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BCStaking.sol\":2486:2513  user.referrer != address(0) */\n      iszero\n        /* \"BCStaking.sol\":2482:3015  if (user.referrer != address(0)) {... */\n      tag_375\n      jumpi\n        /* \"BCStaking.sol\":2547:2560  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BCStaking.sol\":2581:2601  upline != address(0) */\n      dup1\n      iszero\n        /* \"BCStaking.sol\":2577:3004  if (upline != address(0)) {... */\n      tag_376\n      jumpi\n        /* \"BCStaking.sol\":2622:2637  uint256 _amount */\n      0x00\n        /* \"BCStaking.sol\":2640:2731  amount.mul(REFERRAL_PERCENTS).div(... */\n      tag_377\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":2640:2669  amount.mul(REFERRAL_PERCENTS) */\n      tag_156\n        /* \"BCStaking.sol\":2640:2646  amount */\n      dup7\n        /* \"BCStaking.sol\":465:468  120 */\n      0x78\n        /* \"BCStaking.sol\":2640:2650  amount.mul */\n      tag_160\n        /* \"BCStaking.sol\":2640:2669  amount.mul(REFERRAL_PERCENTS) */\n      jump\t// in\n        /* \"BCStaking.sol\":2640:2731  amount.mul(REFERRAL_PERCENTS).div(... */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2772:2785  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2772:2777  users */\n      0x07\n        /* \"BCStaking.sol\":2772:2785  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":2772:2791  users[upline].bonus */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":2622:2731  uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(... */\n      swap1\n      swap2\n      pop\n        /* \"BCStaking.sol\":2772:2804  users[upline].bonus.add(_amount) */\n      tag_379\n      swap1\n        /* \"BCStaking.sol\":2622:2731  uint256 _amount = amount.mul(REFERRAL_PERCENTS).div(... */\n      dup3\n        /* \"BCStaking.sol\":2772:2795  users[upline].bonus.add */\n      tag_206\n        /* \"BCStaking.sol\":2772:2804  users[upline].bonus.add(_amount) */\n      jump\t// in\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2750:2763  users[upline] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2750:2755  users */\n      0x07\n        /* \"BCStaking.sol\":2750:2763  users[upline] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":2750:2769  users[upline].bonus */\n      0x02\n      dup2\n      add\n        /* \"BCStaking.sol\":2750:2804  users[upline].bonus = users[upline].bonus.add(_amount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"BCStaking.sol\":2853:2880  users[upline].referralCount */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":2853:2927  users[upline].referralCount.add(... */\n      tag_380\n      swap1\n        /* \"BCStaking.sol\":2907:2908  1 */\n      0x01\n        /* \"BCStaking.sol\":2853:2884  users[upline].referralCount.add */\n      tag_206\n        /* \"BCStaking.sol\":2853:2927  users[upline].referralCount.add(... */\n      jump\t// in\n    tag_380:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":2823:2836  users[upline] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2823:2828  users */\n      0x07\n        /* \"BCStaking.sol\":2823:2836  users[upline] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"BCStaking.sol\":2823:2850  users[upline].referralCount */\n      0x03\n      add\n        /* \"BCStaking.sol\":2823:2927  users[upline].referralCount = users[upline].referralCount.add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BCStaking.sol\":2951:2988  RefBonus(upline, msg.sender, _amount) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"BCStaking.sol\":2968:2978  msg.sender */\n      caller\n      swap3\n        /* \"BCStaking.sol\":2951:2988  RefBonus(upline, msg.sender, _amount) */\n      0x328838ddfc48ad5ae5531b1ad95dfb22b42ff1866853e474375ffef2c63d8e50\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BCStaking.sol\":2951:2988  RefBonus(upline, msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BCStaking.sol\":2603:3004  {... */\n      pop\n        /* \"BCStaking.sol\":2577:3004  if (upline != address(0)) {... */\n    tag_376:\n        /* \"BCStaking.sol\":2515:3015  {... */\n      pop\n        /* \"BCStaking.sol\":2482:3015  if (user.referrer != address(0)) {... */\n    tag_375:\n        /* \"BCStaking.sol\":3031:3051  user.deposits.length */\n      dup1\n      sload\n        /* \"BCStaking.sol\":3027:3201  if (user.deposits.length == 0) {... */\n      tag_382\n      jumpi\n        /* \"BCStaking.sol\":3091:3106  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":3073:3088  user.checkpoint */\n      0x01\n      dup1\n      dup4\n      add\n        /* \"BCStaking.sol\":3073:3106  user.checkpoint = block.timestamp */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"BCStaking.sol\":3134:3144  totalUsers */\n      sload(0x02)\n        /* \"BCStaking.sol\":3134:3151  totalUsers.add(1) */\n      tag_383\n      swap2\n        /* \"BCStaking.sol\":3134:3148  totalUsers.add */\n      tag_206\n        /* \"BCStaking.sol\":3134:3151  totalUsers.add(1) */\n      jump\t// in\n    tag_383:\n        /* \"BCStaking.sol\":3121:3131  totalUsers */\n      0x02\n        /* \"BCStaking.sol\":3121:3151  totalUsers = totalUsers.add(1) */\n      sstore\n        /* \"BCStaking.sol\":3171:3189  Newbie(msg.sender) */\n      mload(0x40)\n        /* \"BCStaking.sol\":3178:3188  msg.sender */\n      caller\n        /* \"#utility.yul\":711:762   */\n      dup2\n      mstore\n        /* \"BCStaking.sol\":3171:3189  Newbie(msg.sender) */\n      0x9fd565cd14c3c391679eb0cad12a14dcf7534e9d3462bcb9b67a098a9bbbc24a\n      swap1\n        /* \"#utility.yul\":699:701   */\n      0x20\n        /* \"#utility.yul\":684:702   */\n      add\n        /* \"BCStaking.sol\":3171:3189  Newbie(msg.sender) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BCStaking.sol\":3027:3201  if (user.deposits.length == 0) {... */\n    tag_382:\n        /* \"BCStaking.sol\":3217:3230  user.referrer */\n      0x04\n      dup2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"BCStaking.sol\":3217:3244  user.referrer != address(0) */\n      iszero\n        /* \"BCStaking.sol\":3213:3915  if (user.referrer != address(0)) {... */\n      tag_385\n      jumpi\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"BCStaking.sol\":3261:3265  user */\n      dup2\n      swap1\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      dup1\n        /* \"BCStaking.sol\":3328:3439  amount.sub(... */\n      tag_386\n        /* \"BCStaking.sol\":3365:3416  amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER) */\n      tag_387\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":3365:3394  amount.mul(REFERRAL_PERCENTS) */\n      tag_156\n        /* \"BCStaking.sol\":3365:3371  amount */\n      dup9\n        /* \"BCStaking.sol\":465:468  120 */\n      0x78\n        /* \"BCStaking.sol\":3365:3375  amount.mul */\n      tag_160\n        /* \"BCStaking.sol\":3365:3394  amount.mul(REFERRAL_PERCENTS) */\n      jump\t// in\n        /* \"BCStaking.sol\":3365:3416  amount.mul(REFERRAL_PERCENTS).div(PERCENTS_DIVIDER) */\n    tag_387:\n        /* \"BCStaking.sol\":3328:3334  amount */\n      dup7\n      swap1\n        /* \"BCStaking.sol\":3328:3338  amount.sub */\n      tag_154\n        /* \"BCStaking.sol\":3328:3439  amount.sub(... */\n      jump\t// in\n    tag_386:\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":3462:3463  0 */\n      0x00\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":3486:3501  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":565:573  180 days */\n      0xed4e00\n        /* \"BCStaking.sol\":3524:3539  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":3524:3556  block.timestamp + STAKING_PERIOD */\n      tag_389\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_389:\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      dup2\n      mstore\n        /* \"BCStaking.sol\":3579:3584  false */\n      0x00\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"BCStaking.sol\":3261:3618  user.deposits.push(... */\n      dup4\n      sload\n        /* \"BCStaking.sol\":3298:3603  Deposit(... */\n      0x01\n        /* \"BCStaking.sol\":3261:3618  user.deposits.push(... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x05\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":3213:3915  if (user.referrer != address(0)) {... */\n      jump(tag_392)\n    tag_385:\n        /* \"BCStaking.sol\":3651:3655  user */\n      dup1\n        /* \"BCStaking.sol\":3651:3664  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"BCStaking.sol\":3718:3724  amount */\n      dup5\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":3747:3748  0 */\n      0x00\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":3771:3786  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":565:573  180 days */\n      0xed4e00\n        /* \"BCStaking.sol\":3809:3824  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":3809:3841  block.timestamp + STAKING_PERIOD */\n      tag_393\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_393:\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      dup2\n      mstore\n        /* \"BCStaking.sol\":3864:3869  false */\n      0x00\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"BCStaking.sol\":3651:3903  user.deposits.push(... */\n      dup4\n      sload\n        /* \"BCStaking.sol\":3688:3888  Deposit(... */\n      0x01\n        /* \"BCStaking.sol\":3651:3903  user.deposits.push(... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x05\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      dup2\n      add\n      mload\n      0x03\n      dup4\n      add\n      sstore\n      0x80\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":3213:3915  if (user.referrer != address(0)) {... */\n    tag_392:\n        /* \"BCStaking.sol\":3941:3952  totalStaked */\n      sload(0x03)\n        /* \"BCStaking.sol\":3941:3964  totalStaked.add(amount) */\n      tag_395\n      swap1\n        /* \"BCStaking.sol\":3957:3963  amount */\n      dup4\n        /* \"BCStaking.sol\":3941:3956  totalStaked.add */\n      tag_206\n        /* \"BCStaking.sol\":3941:3964  totalStaked.add(amount) */\n      jump\t// in\n    tag_395:\n        /* \"BCStaking.sol\":3927:3938  totalStaked */\n      0x03\n        /* \"BCStaking.sol\":3927:3964  totalStaked = totalStaked.add(amount) */\n      sstore\n        /* \"BCStaking.sol\":3995:4012  totalDepositCount */\n      sload(0x05)\n        /* \"BCStaking.sol\":3995:4019  totalDepositCount.add(1) */\n      tag_396\n      swap1\n        /* \"BCStaking.sol\":4017:4018  1 */\n      0x01\n        /* \"BCStaking.sol\":3995:4016  totalDepositCount.add */\n      tag_206\n        /* \"BCStaking.sol\":3995:4019  totalDepositCount.add(1) */\n      jump\t// in\n    tag_396:\n        /* \"BCStaking.sol\":3975:3992  totalDepositCount */\n      0x05\n        /* \"BCStaking.sol\":3975:4019  totalDepositCount = totalDepositCount.add(1) */\n      sstore\n        /* \"BCStaking.sol\":4037:4067  NewDeposit(msg.sender, amount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup3\n      dup2\n      mstore\n        /* \"BCStaking.sol\":4048:4058  msg.sender */\n      caller\n      swap1\n        /* \"BCStaking.sol\":4037:4067  NewDeposit(msg.sender, amount) */\n      0x2cb77763bc1e8490c1a904905c4d74b4269919aca114464f4bb4d911e60de364\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BCStaking.sol\":4037:4067  NewDeposit(msg.sender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"BCStaking.sol\":1798:4075  {... */\n      pop\n        /* \"BCStaking.sol\":1742:4075  function stake(address referrer, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"BCStaking.sol\":14349:14888  function getUserDepositInfo(address userAddress, uint256 index)... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":14615:14633  users[userAddress] */\n      dup3\n      and\n        /* \"BCStaking.sol\":14475:14482  uint256 */\n      0x00\n        /* \"BCStaking.sol\":14615:14633  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":14615:14620  users */\n      0x07\n        /* \"BCStaking.sol\":14615:14633  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BCStaking.sol\":14668:14688  user.deposits[index] */\n      dup1\n      sload\n        /* \"BCStaking.sol\":14475:14482  uint256 */\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n      dup3\n      swap2\n        /* \"BCStaking.sol\":14615:14633  users[userAddress] */\n      dup2\n      swap1\n        /* \"BCStaking.sol\":14682:14687  index */\n      dup9\n      swap1\n        /* \"BCStaking.sol\":14668:14688  user.deposits[index] */\n      dup2\n      lt\n      tag_400\n      jumpi\n      tag_400\n      tag_136\n      jump\t// in\n    tag_400:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":14668:14695  user.deposits[index].amount */\n      0x00\n      add\n      sload\n        /* \"BCStaking.sol\":14710:14714  user */\n      dup2\n        /* \"BCStaking.sol\":14710:14723  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":14724:14729  index */\n      dup9\n        /* \"BCStaking.sol\":14710:14730  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_403\n      jumpi\n      tag_403\n      tag_136\n      jump\t// in\n    tag_403:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":14710:14740  user.deposits[index].withdrawn */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":14755:14759  user */\n      dup3\n        /* \"BCStaking.sol\":14755:14768  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":14769:14774  index */\n      dup10\n        /* \"BCStaking.sol\":14755:14775  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_406\n      jumpi\n      tag_406\n      tag_136\n      jump\t// in\n    tag_406:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":14755:14785  user.deposits[index].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":14800:14804  user */\n      dup4\n        /* \"BCStaking.sol\":14800:14813  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":14814:14819  index */\n      dup11\n        /* \"BCStaking.sol\":14800:14820  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_409\n      jumpi\n      tag_409\n      tag_136\n      jump\t// in\n    tag_409:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":14800:14828  user.deposits[index].endTime */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":14843:14847  user */\n      dup5\n        /* \"BCStaking.sol\":14843:14856  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":14857:14862  index */\n      dup12\n        /* \"BCStaking.sol\":14843:14863  user.deposits[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_412\n      jumpi\n      tag_412\n      tag_136\n      jump\t// in\n    tag_412:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":14843:14869  user.deposits[index].ended */\n      0x04\n      add\n      sload\n        /* \"BCStaking.sol\":14646:14880  return (... */\n      swap4\n      swap13\n      swap3\n      swap12\n      pop\n      swap1\n      swap10\n      pop\n      swap8\n      pop\n        /* \"BCStaking.sol\":14843:14869  user.deposits[index].ended */\n      0xff\n      swap1\n      swap2\n      and\n      swap6\n      pop\n        /* \"BCStaking.sol\":14349:14888  function getUserDepositInfo(address userAddress, uint256 index)... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_220\n      jump\t// in\n    tag_420:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5906:5908   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5888:5909   */\n      mstore\n        /* \"#utility.yul\":5945:5947   */\n      0x26\n        /* \"#utility.yul\":5925:5943   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5918:5948   */\n      mstore\n        /* \"#utility.yul\":5984:6018   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5964:5982   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5957:6019   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6035:6053   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6028:6064   */\n      mstore\n        /* \"#utility.yul\":6081:6100   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_219\n        /* \"#utility.yul\":5704:6106   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_423:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_426\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_337\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_426:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"BCStaking.sol\":7526:10861  function compound() public onlyhodler {... */\n    tag_125:\n        /* \"BCStaking.sol\":1243:1244  0 */\n      0x00\n        /* \"BCStaking.sol\":1212:1240  getUserDividends(msg.sender) */\n      tag_428\n        /* \"BCStaking.sol\":1229:1239  msg.sender */\n      caller\n        /* \"BCStaking.sol\":1212:1228  getUserDividends */\n      tag_46\n        /* \"BCStaking.sol\":1212:1240  getUserDividends(msg.sender) */\n      jump\t// in\n    tag_428:\n        /* \"BCStaking.sol\":1212:1244  getUserDividends(msg.sender) > 0 */\n      gt\n        /* \"BCStaking.sol\":1204:1259  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6313:6315   */\n      0x20\n        /* \"BCStaking.sol\":1204:1259  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6295:6316   */\n      mstore\n        /* \"#utility.yul\":6352:6354   */\n      0x0a\n        /* \"#utility.yul\":6332:6350   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6325:6355   */\n      mstore\n      shl(0xb1, 0x2737ba102437b63232b9)\n        /* \"#utility.yul\":6371:6389   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6364:6404   */\n      mstore\n        /* \"#utility.yul\":6421:6439   */\n      0x64\n      add\n        /* \"BCStaking.sol\":1204:1259  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n      tag_219\n        /* \"#utility.yul\":6111:6445   */\n      jump\n        /* \"BCStaking.sol\":1204:1259  require(getUserDividends(msg.sender) > 0, \"Not Holder\") */\n    tag_429:\n        /* \"BCStaking.sol\":7601:7611  msg.sender */\n      caller\n        /* \"BCStaking.sol\":7575:7592  User storage user */\n      0x00\n        /* \"BCStaking.sol\":7595:7612  users[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"BCStaking.sol\":7595:7600  users */\n      0x07\n        /* \"BCStaking.sol\":7595:7612  users[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap2\n        /* \"BCStaking.sol\":7672:7700  getUserDividends(msg.sender) */\n      tag_433\n      swap1\n        /* \"BCStaking.sol\":7672:7688  getUserDividends */\n      tag_46\n        /* \"BCStaking.sol\":7672:7700  getUserDividends(msg.sender) */\n      jump\t// in\n    tag_433:\n        /* \"BCStaking.sol\":7651:7700  uint256 _dividends = getUserDividends(msg.sender) */\n      swap1\n      pop\n        /* \"BCStaking.sol\":7752:7771  uint256 totalAmount */\n      0x00\n        /* \"BCStaking.sol\":7782:7799  uint256 dividends */\n      dup1\n        /* \"BCStaking.sol\":7812:7816  user */\n      dup4\n        /* \"BCStaking.sol\":7812:7825  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"BCStaking.sol\":7871:7881  _dividends */\n      dup6\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":7900:7901  0 */\n      0x00\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":7920:7935  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"BCStaking.sol\":565:573  180 days */\n      0xed4e00\n        /* \"BCStaking.sol\":7954:7969  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":7954:7986  block.timestamp + STAKING_PERIOD */\n      tag_434\n      swap2\n      swap1\n      tag_390\n      jump\t// in\n    tag_434:\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      dup2\n      mstore\n        /* \"BCStaking.sol\":8005:8010  false */\n      0x00\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"BCStaking.sol\":7812:8036  user.deposits.push(... */\n      dup4\n      sload\n        /* \"BCStaking.sol\":7845:8025  Deposit(... */\n      0x01\n        /* \"BCStaking.sol\":7812:8036  user.deposits.push(... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      dup3\n      dup3\n      keccak256\n      dup5\n      mload\n      0x05\n      swap1\n      swap3\n      mul\n      add\n      swap1\n      dup2\n      sstore\n      swap2\n      dup4\n      add\n      mload\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":8049:10563  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_436:\n        /* \"BCStaking.sol\":8073:8093  user.deposits.length */\n      dup5\n      sload\n        /* \"BCStaking.sol\":8069:8093  i < user.deposits.length */\n      dup2\n      lt\n        /* \"BCStaking.sol\":8049:10563  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_437\n      jumpi\n        /* \"BCStaking.sol\":8119:8123  user */\n      dup5\n        /* \"BCStaking.sol\":8119:8132  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8133:8134  i */\n      dup2\n        /* \"BCStaking.sol\":8119:8135  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_440\n      jumpi\n      tag_440\n      tag_136\n      jump\t// in\n    tag_440:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":8119:8141  user.deposits[i].ended */\n      0x04\n        /* \"BCStaking.sol\":8119:8135  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":8119:8141  user.deposits[i].ended */\n      add\n      sload\n      0xff\n      and\n        /* \"BCStaking.sol\":8115:10552  if (user.deposits[i].ended == false) {... */\n      tag_442\n      jumpi\n        /* \"BCStaking.sol\":8202:8217  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":8175:8179  user */\n      dup6\n        /* \"BCStaking.sol\":8175:8188  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8189:8190  i */\n      dup3\n        /* \"BCStaking.sol\":8175:8191  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_444\n      jumpi\n      tag_444\n      tag_136\n      jump\t// in\n    tag_444:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":8175:8199  user.deposits[i].endTime */\n      0x03\n      add\n      sload\n        /* \"BCStaking.sol\":8175:8217  user.deposits[i].endTime > block.timestamp */\n      gt\n        /* \"BCStaking.sol\":8171:10318  if (user.deposits[i].endTime > block.timestamp) {... */\n      iszero\n      tag_446\n      jumpi\n        /* \"BCStaking.sol\":8275:8279  user */\n      dup5\n        /* \"BCStaking.sol\":8275:8290  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":8246:8250  user */\n      dup6\n        /* \"BCStaking.sol\":8246:8259  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8260:8261  i */\n      dup3\n        /* \"BCStaking.sol\":8246:8262  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_448\n      jumpi\n      tag_448\n      tag_136\n      jump\t// in\n    tag_448:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":8246:8272  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":8246:8290  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":8242:9132  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_450\n      jumpi\n        /* \"BCStaking.sol\":8331:8736  (... */\n      tag_451\n        /* \"BCStaking.sol\":8733:8735  60 */\n      0x3c\n        /* \"BCStaking.sol\":8331:8698  (... */\n      tag_156\n        /* \"BCStaking.sol\":8695:8697  60 */\n      0x3c\n        /* \"BCStaking.sol\":8331:8660  (... */\n      tag_156\n        /* \"BCStaking.sol\":8582:8629  block.timestamp.sub(user.deposits[i].startTime) */\n      tag_454\n        /* \"BCStaking.sol\":8602:8606  user */\n      dup11\n        /* \"BCStaking.sol\":8602:8615  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8616:8617  i */\n      dup8\n        /* \"BCStaking.sol\":8602:8618  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_152\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":8582:8629  block.timestamp.sub(user.deposits[i].startTime) */\n    tag_454:\n        /* \"BCStaking.sol\":8362:8486  user.deposits[i].amount.mul(DAILY_ROI).div(... */\n      tag_155\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":8362:8400  user.deposits[i].amount.mul(DAILY_ROI) */\n      tag_156\n        /* \"BCStaking.sol\":412:414  15 */\n      0x0f\n        /* \"BCStaking.sol\":8362:8366  user */\n      dup15\n        /* \"BCStaking.sol\":8362:8375  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8376:8377  i */\n      dup12\n        /* \"BCStaking.sol\":8362:8378  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":8331:8736  (... */\n    tag_451:\n        /* \"BCStaking.sol\":8319:8736  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":8171:10318  if (user.deposits[i].endTime > block.timestamp) {... */\n      jump(tag_495)\n        /* \"BCStaking.sol\":8242:9132  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_450:\n        /* \"BCStaking.sol\":8805:9108  (... */\n      tag_451\n        /* \"BCStaking.sol\":511:517  1 days */\n      0x015180\n        /* \"BCStaking.sol\":8805:9029  (... */\n      tag_156\n        /* \"BCStaking.sol\":8992:9028  block.timestamp.sub(user.checkpoint) */\n      tag_466\n        /* \"BCStaking.sol\":9012:9016  user */\n      dup9\n        /* \"BCStaking.sol\":9012:9027  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":8992:9007  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":8992:9011  block.timestamp.sub */\n      tag_154\n      swap1\n        /* \"BCStaking.sol\":8992:9028  block.timestamp.sub(user.checkpoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_466:\n        /* \"BCStaking.sol\":8836:8960  user.deposits[i].amount.mul(DAILY_ROI).div(... */\n      tag_155\n        /* \"BCStaking.sol\":365:369  1000 */\n      0x03e8\n        /* \"BCStaking.sol\":8836:8874  user.deposits[i].amount.mul(DAILY_ROI) */\n      tag_156\n        /* \"BCStaking.sol\":412:414  15 */\n      0x0f\n        /* \"BCStaking.sol\":8836:8840  user */\n      dup13\n        /* \"BCStaking.sol\":8836:8849  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":8850:8851  i */\n      dup10\n        /* \"BCStaking.sol\":8836:8852  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":8171:10318  if (user.deposits[i].endTime > block.timestamp) {... */\n    tag_446:\n        /* \"BCStaking.sol\":9213:9217  user */\n      dup5\n        /* \"BCStaking.sol\":9213:9228  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":9184:9188  user */\n      dup6\n        /* \"BCStaking.sol\":9184:9197  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":9198:9199  i */\n      dup3\n        /* \"BCStaking.sol\":9184:9200  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_474\n      jumpi\n      tag_474\n      tag_136\n      jump\t// in\n    tag_474:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":9184:9210  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":9184:9228  user.deposits[i].startTime > user.checkpoint */\n      gt\n        /* \"BCStaking.sol\":9180:10299  if (user.deposits[i].startTime > user.checkpoint) {... */\n      iszero\n      tag_476\n      jumpi\n        /* \"BCStaking.sol\":9269:9755  (... */\n      tag_477\n        /* \"BCStaking.sol\":9752:9754  60 */\n      0x3c\n        /* \"BCStaking.sol\":9269:9717  (... */\n      tag_156\n        /* \"BCStaking.sol\":9714:9716  60 */\n      0x3c\n        /* \"BCStaking.sol\":9269:9679  (... */\n      tag_156\n        /* \"BCStaking.sol\":9520:9648  user.deposits[i].endTime.sub(... */\n      tag_454\n        /* \"BCStaking.sol\":9587:9591  user */\n      dup11\n        /* \"BCStaking.sol\":9587:9600  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":9601:9602  i */\n      dup8\n        /* \"BCStaking.sol\":9587:9603  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_482\n      jumpi\n      tag_482\n      tag_136\n      jump\t// in\n    tag_482:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":9587:9613  user.deposits[i].startTime */\n      0x02\n      add\n      sload\n        /* \"BCStaking.sol\":9520:9524  user */\n      dup12\n        /* \"BCStaking.sol\":9520:9533  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":9534:9535  i */\n      dup9\n        /* \"BCStaking.sol\":9520:9536  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":9269:9755  (... */\n    tag_477:\n        /* \"BCStaking.sol\":9257:9755  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":9807:9811  true */\n      0x01\n        /* \"BCStaking.sol\":9782:9786  user */\n      dup6\n        /* \"BCStaking.sol\":9782:9795  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":9796:9797  i */\n      dup3\n        /* \"BCStaking.sol\":9782:9798  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_493\n      jumpi\n      tag_493\n      tag_136\n      jump\t// in\n    tag_493:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":9782:9804  user.deposits[i].ended */\n      0x04\n      add\n        /* \"BCStaking.sol\":9782:9811  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":9180:10299  if (user.deposits[i].startTime > user.checkpoint) {... */\n      jump(tag_495)\n    tag_476:\n        /* \"BCStaking.sol\":9880:10219  (... */\n      tag_496\n        /* \"BCStaking.sol\":10216:10218  60 */\n      0x3c\n        /* \"BCStaking.sol\":9880:10181  (... */\n      tag_156\n        /* \"BCStaking.sol\":10178:10180  60 */\n      0x3c\n        /* \"BCStaking.sol\":9880:10143  (... */\n      tag_156\n        /* \"BCStaking.sol\":10097:10142  user.deposits[i].endTime.sub(user.checkpoint) */\n      tag_454\n        /* \"BCStaking.sol\":10126:10130  user */\n      dup11\n        /* \"BCStaking.sol\":10126:10141  user.checkpoint */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":10097:10101  user */\n      dup12\n        /* \"BCStaking.sol\":10097:10110  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":10111:10112  i */\n      dup9\n        /* \"BCStaking.sol\":10097:10113  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":9880:10219  (... */\n    tag_496:\n        /* \"BCStaking.sol\":9868:10219  dividends = (... */\n      swap2\n      pop\n        /* \"BCStaking.sol\":10271:10275  true */\n      0x01\n        /* \"BCStaking.sol\":10246:10250  user */\n      dup6\n        /* \"BCStaking.sol\":10246:10259  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":10260:10261  i */\n      dup3\n        /* \"BCStaking.sol\":10246:10262  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_509\n      jumpi\n      tag_509\n      tag_136\n      jump\t// in\n    tag_509:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"BCStaking.sol\":10246:10268  user.deposits[i].ended */\n      0x04\n      add\n        /* \"BCStaking.sol\":10246:10275  user.deposits[i].ended = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BCStaking.sol\":9180:10299  if (user.deposits[i].startTime > user.checkpoint) {... */\n    tag_495:\n        /* \"BCStaking.sol\":10367:10448  user.deposits[i].withdrawn.add(... */\n      tag_511\n        /* \"BCStaking.sol\":10420:10429  dividends */\n      dup3\n        /* \"BCStaking.sol\":10367:10371  user */\n      dup7\n        /* \"BCStaking.sol\":10367:10380  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":10381:10382  i */\n      dup4\n        /* \"BCStaking.sol\":10367:10383  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_136\n      jump\t// in\n        /* \"BCStaking.sol\":10367:10448  user.deposits[i].withdrawn.add(... */\n    tag_511:\n        /* \"BCStaking.sol\":10338:10342  user */\n      dup6\n        /* \"BCStaking.sol\":10338:10351  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":10352:10353  i */\n      dup3\n        /* \"BCStaking.sol\":10338:10354  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_516\n      jumpi\n      tag_516\n      tag_136\n      jump\t// in\n    tag_516:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"BCStaking.sol\":10338:10364  user.deposits[i].withdrawn */\n      0x01\n        /* \"BCStaking.sol\":10338:10354  user.deposits[i] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"BCStaking.sol\":10338:10364  user.deposits[i].withdrawn */\n      add\n        /* \"BCStaking.sol\":10338:10448  user.deposits[i].withdrawn = user.deposits[i].withdrawn.add(... */\n      sstore\n        /* \"BCStaking.sol\":10510:10536  totalAmount.add(dividends) */\n      tag_518\n        /* \"BCStaking.sol\":10510:10521  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":10526:10535  dividends */\n      dup4\n        /* \"BCStaking.sol\":10510:10525  totalAmount.add */\n      tag_206\n        /* \"BCStaking.sol\":10510:10536  totalAmount.add(dividends) */\n      jump\t// in\n    tag_518:\n        /* \"BCStaking.sol\":10496:10536  totalAmount = totalAmount.add(dividends) */\n      swap3\n      pop\n        /* \"BCStaking.sol\":8115:10552  if (user.deposits[i].ended == false) {... */\n    tag_442:\n        /* \"BCStaking.sol\":8095:8098  i++ */\n      dup1\n      tag_519\n      dup2\n      tag_208\n      jump\t// in\n    tag_519:\n      swap2\n      pop\n      pop\n        /* \"BCStaking.sol\":8049:10563  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_436)\n    tag_437:\n      pop\n        /* \"BCStaking.sol\":10593:10608  block.timestamp */\n      timestamp\n        /* \"BCStaking.sol\":10575:10590  user.checkpoint */\n      0x01\n      dup6\n      add\n        /* \"BCStaking.sol\":10575:10608  user.checkpoint = block.timestamp */\n      sstore\n        /* \"BCStaking.sol\":10635:10646  totalStaked */\n      sload(0x03)\n        /* \"BCStaking.sol\":10635:10662  totalStaked.add(_dividends) */\n      tag_520\n      swap1\n        /* \"BCStaking.sol\":10651:10661  _dividends */\n      dup5\n        /* \"BCStaking.sol\":10635:10650  totalStaked.add */\n      tag_206\n        /* \"BCStaking.sol\":10635:10662  totalStaked.add(_dividends) */\n      jump\t// in\n    tag_520:\n        /* \"BCStaking.sol\":10621:10632  totalStaked */\n      0x03\n        /* \"BCStaking.sol\":10621:10662  totalStaked = totalStaked.add(_dividends) */\n      sstore\n        /* \"BCStaking.sol\":10693:10710  totalDepositCount */\n      sload(0x05)\n        /* \"BCStaking.sol\":10693:10717  totalDepositCount.add(1) */\n      tag_521\n      swap1\n        /* \"BCStaking.sol\":10715:10716  1 */\n      0x01\n        /* \"BCStaking.sol\":10693:10714  totalDepositCount.add */\n      tag_206\n        /* \"BCStaking.sol\":10693:10717  totalDepositCount.add(1) */\n      jump\t// in\n    tag_521:\n        /* \"BCStaking.sol\":10673:10690  totalDepositCount */\n      0x05\n        /* \"BCStaking.sol\":10673:10717  totalDepositCount = totalDepositCount.add(1) */\n      sstore\n        /* \"BCStaking.sol\":10745:10759  totalWithdrawn */\n      sload(0x04)\n        /* \"BCStaking.sol\":10745:10776  totalWithdrawn.add(totalAmount) */\n      tag_522\n      swap1\n        /* \"BCStaking.sol\":10764:10775  totalAmount */\n      dup4\n        /* \"BCStaking.sol\":10745:10763  totalWithdrawn.add */\n      tag_206\n        /* \"BCStaking.sol\":10745:10776  totalWithdrawn.add(totalAmount) */\n      jump\t// in\n    tag_522:\n        /* \"BCStaking.sol\":10728:10742  totalWithdrawn */\n      0x04\n        /* \"BCStaking.sol\":10728:10776  totalWithdrawn = totalWithdrawn.add(totalAmount) */\n      sstore\n        /* \"BCStaking.sol\":10815:10853  onReinvestment(msg.sender, _dividends) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"BCStaking.sol\":10830:10840  msg.sender */\n      caller\n      swap1\n        /* \"BCStaking.sol\":10815:10853  onReinvestment(msg.sender, _dividends) */\n      0x5d511c2070e5a2dbcc6fbfbb3fd6704a11ab5fa74b793b81aacece2c7cc29405\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BCStaking.sol\":10815:10853  onReinvestment(msg.sender, _dividends) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"BCStaking.sol\":7564:10861  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"BCStaking.sol\":7526:10861  function compound() public onlyhodler {... */\n      jump\t// out\n        /* \"BCStaking.sol\":15516:15877  function getUserTotalWithdrawn(address userAddress)... */\n    tag_128:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BCStaking.sol\":15661:15679  users[userAddress] */\n      dup2\n      and\n        /* \"BCStaking.sol\":15616:15623  uint256 */\n      0x00\n        /* \"BCStaking.sol\":15661:15679  users[userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"BCStaking.sol\":15661:15666  users */\n      0x07\n        /* \"BCStaking.sol\":15661:15679  users[userAddress] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BCStaking.sol\":15616:15623  uint256 */\n      dup2\n      dup1\n        /* \"BCStaking.sol\":15719:15844  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n    tag_525:\n        /* \"BCStaking.sol\":15743:15763  user.deposits.length */\n      dup3\n      sload\n        /* \"BCStaking.sol\":15739:15763  i < user.deposits.length */\n      dup2\n      lt\n        /* \"BCStaking.sol\":15719:15844  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"BCStaking.sol\":15794:15832  amount.add(user.deposits[i].withdrawn) */\n      tag_528\n        /* \"BCStaking.sol\":15805:15809  user */\n      dup4\n        /* \"BCStaking.sol\":15805:15818  user.deposits */\n      0x00\n      add\n        /* \"BCStaking.sol\":15819:15820  i */\n      dup3\n        /* \"BCStaking.sol\":15805:15821  user.deposits[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_530\n      jumpi\n      tag_530\n      tag_136\n      jump\t// in\n    tag_530:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"BCStaking.sol\":15805:15831  user.deposits[i].withdrawn */\n      0x01\n      add\n      sload\n        /* \"BCStaking.sol\":15794:15800  amount */\n      dup4\n        /* \"BCStaking.sol\":15794:15804  amount.add */\n      tag_206\n      swap1\n        /* \"BCStaking.sol\":15794:15832  amount.add(user.deposits[i].withdrawn) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_528:\n        /* \"BCStaking.sol\":15785:15832  amount = amount.add(user.deposits[i].withdrawn) */\n      swap2\n      pop\n        /* \"BCStaking.sol\":15765:15768  i++ */\n      dup1\n      tag_532\n      dup2\n      tag_208\n      jump\t// in\n    tag_532:\n      swap2\n      pop\n      pop\n        /* \"BCStaking.sol\":15719:15844  for (uint256 i = 0; i < user.deposits.length; i++) {... */\n      jump(tag_525)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_534\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_535\n      jump\t// in\n    tag_534:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_534\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_538\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_534\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_541\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_534\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_390\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:369   */\n    tag_546:\n        /* \"#utility.yul\":264:284   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":313:344   */\n      dup2\n      and\n        /* \"#utility.yul\":303:345   */\n      dup2\n      eq\n        /* \"#utility.yul\":293:363   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":359:360   */\n      0x00\n        /* \"#utility.yul\":356:357   */\n      dup1\n        /* \"#utility.yul\":349:361   */\n      revert\n        /* \"#utility.yul\":293:363   */\n    tag_551:\n        /* \"#utility.yul\":196:369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":374:560   */\n    tag_45:\n        /* \"#utility.yul\":433:439   */\n      0x00\n        /* \"#utility.yul\":486:488   */\n      0x20\n        /* \"#utility.yul\":474:483   */\n      dup3\n        /* \"#utility.yul\":465:472   */\n      dup5\n        /* \"#utility.yul\":461:484   */\n      sub\n        /* \"#utility.yul\":457:489   */\n      slt\n        /* \"#utility.yul\":454:506   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":502:503   */\n      0x00\n        /* \"#utility.yul\":499:500   */\n      dup1\n        /* \"#utility.yul\":492:504   */\n      revert\n        /* \"#utility.yul\":454:506   */\n    tag_553:\n        /* \"#utility.yul\":525:554   */\n      tag_534\n        /* \"#utility.yul\":544:553   */\n      dup3\n        /* \"#utility.yul\":525:554   */\n      tag_546\n      jump\t// in\n        /* \"#utility.yul\":773:953   */\n    tag_71:\n        /* \"#utility.yul\":832:838   */\n      0x00\n        /* \"#utility.yul\":885:887   */\n      0x20\n        /* \"#utility.yul\":873:882   */\n      dup3\n        /* \"#utility.yul\":864:871   */\n      dup5\n        /* \"#utility.yul\":860:883   */\n      sub\n        /* \"#utility.yul\":856:888   */\n      slt\n        /* \"#utility.yul\":853:905   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":901:902   */\n      0x00\n        /* \"#utility.yul\":898:899   */\n      dup1\n        /* \"#utility.yul\":891:903   */\n      revert\n        /* \"#utility.yul\":853:905   */\n    tag_557:\n      pop\n        /* \"#utility.yul\":924:947   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":773:953   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":958:1212   */\n    tag_96:\n        /* \"#utility.yul\":1026:1032   */\n      0x00\n        /* \"#utility.yul\":1034:1040   */\n      dup1\n        /* \"#utility.yul\":1087:1089   */\n      0x40\n        /* \"#utility.yul\":1075:1084   */\n      dup4\n        /* \"#utility.yul\":1066:1073   */\n      dup6\n        /* \"#utility.yul\":1062:1085   */\n      sub\n        /* \"#utility.yul\":1058:1090   */\n      slt\n        /* \"#utility.yul\":1055:1107   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":1103:1104   */\n      0x00\n        /* \"#utility.yul\":1100:1101   */\n      dup1\n        /* \"#utility.yul\":1093:1105   */\n      revert\n        /* \"#utility.yul\":1055:1107   */\n    tag_559:\n        /* \"#utility.yul\":1126:1155   */\n      tag_560\n        /* \"#utility.yul\":1145:1154   */\n      dup4\n        /* \"#utility.yul\":1126:1155   */\n      tag_546\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":1116:1155   */\n      swap5\n        /* \"#utility.yul\":1202:1204   */\n      0x20\n        /* \"#utility.yul\":1187:1205   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1174:1206   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":958:1212   */\n      jump\t// out\n        /* \"#utility.yul\":1695:1822   */\n    tag_136:\n        /* \"#utility.yul\":1756:1766   */\n      0x4e487b71\n        /* \"#utility.yul\":1751:1754   */\n      0xe0\n        /* \"#utility.yul\":1747:1767   */\n      shl\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1737:1768   */\n      mstore\n        /* \"#utility.yul\":1787:1791   */\n      0x32\n        /* \"#utility.yul\":1784:1785   */\n      0x04\n        /* \"#utility.yul\":1777:1792   */\n      mstore\n        /* \"#utility.yul\":1811:1815   */\n      0x24\n        /* \"#utility.yul\":1808:1809   */\n      0x00\n        /* \"#utility.yul\":1801:1816   */\n      revert\n        /* \"#utility.yul\":1827:1954   */\n    tag_547:\n        /* \"#utility.yul\":1888:1898   */\n      0x4e487b71\n        /* \"#utility.yul\":1883:1886   */\n      0xe0\n        /* \"#utility.yul\":1879:1899   */\n      shl\n        /* \"#utility.yul\":1876:1877   */\n      0x00\n        /* \"#utility.yul\":1869:1900   */\n      mstore\n        /* \"#utility.yul\":1919:1923   */\n      0x11\n        /* \"#utility.yul\":1916:1917   */\n      0x04\n        /* \"#utility.yul\":1909:1924   */\n      mstore\n        /* \"#utility.yul\":1943:1947   */\n      0x24\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1933:1948   */\n      revert\n        /* \"#utility.yul\":1959:2094   */\n    tag_208:\n        /* \"#utility.yul\":1998:2001   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":2019:2036   */\n      dup3\n      eq\n        /* \"#utility.yul\":2016:2059   */\n      iszero\n      tag_566\n      jumpi\n        /* \"#utility.yul\":2039:2057   */\n      tag_566\n      tag_547\n      jump\t// in\n    tag_566:\n      pop\n        /* \"#utility.yul\":2086:2087   */\n      0x01\n        /* \"#utility.yul\":2075:2088   */\n      add\n      swap1\n        /* \"#utility.yul\":1959:2094   */\n      jump\t// out\n        /* \"#utility.yul\":2099:2455   */\n    tag_220:\n        /* \"#utility.yul\":2301:2303   */\n      0x20\n        /* \"#utility.yul\":2283:2304   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2320:2338   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2313:2343   */\n      mstore\n        /* \"#utility.yul\":2379:2413   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":2374:2376   */\n      0x40\n        /* \"#utility.yul\":2359:2377   */\n      dup3\n      add\n        /* \"#utility.yul\":2352:2414   */\n      mstore\n        /* \"#utility.yul\":2446:2448   */\n      0x60\n        /* \"#utility.yul\":2431:2449   */\n      add\n      swap1\n        /* \"#utility.yul\":2099:2455   */\n      jump\t// out\n        /* \"#utility.yul\":2810:2994   */\n    tag_317:\n        /* \"#utility.yul\":2880:2886   */\n      0x00\n        /* \"#utility.yul\":2933:2935   */\n      0x20\n        /* \"#utility.yul\":2921:2930   */\n      dup3\n        /* \"#utility.yul\":2912:2919   */\n      dup5\n        /* \"#utility.yul\":2908:2931   */\n      sub\n        /* \"#utility.yul\":2904:2936   */\n      slt\n        /* \"#utility.yul\":2901:2953   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":2949:2950   */\n      0x00\n        /* \"#utility.yul\":2946:2947   */\n      dup1\n        /* \"#utility.yul\":2939:2951   */\n      revert\n        /* \"#utility.yul\":2901:2953   */\n    tag_570:\n      pop\n        /* \"#utility.yul\":2972:2988   */\n      mload\n      swap2\n        /* \"#utility.yul\":2810:2994   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:3555   */\n    tag_324:\n        /* \"#utility.yul\":3345:3351   */\n      0x00\n        /* \"#utility.yul\":3398:3400   */\n      0x20\n        /* \"#utility.yul\":3386:3395   */\n      dup3\n        /* \"#utility.yul\":3377:3384   */\n      dup5\n        /* \"#utility.yul\":3373:3396   */\n      sub\n        /* \"#utility.yul\":3369:3401   */\n      slt\n        /* \"#utility.yul\":3366:3418   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":3414:3415   */\n      0x00\n        /* \"#utility.yul\":3411:3412   */\n      dup1\n        /* \"#utility.yul\":3404:3416   */\n      revert\n        /* \"#utility.yul\":3366:3418   */\n    tag_573:\n        /* \"#utility.yul\":3446:3455   */\n      dup2\n        /* \"#utility.yul\":3440:3456   */\n      mload\n        /* \"#utility.yul\":3499:3504   */\n      dup1\n        /* \"#utility.yul\":3492:3505   */\n      iszero\n        /* \"#utility.yul\":3485:3506   */\n      iszero\n        /* \"#utility.yul\":3478:3483   */\n      dup2\n        /* \"#utility.yul\":3475:3507   */\n      eq\n        /* \"#utility.yul\":3465:3525   */\n      tag_534\n      jumpi\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3518:3519   */\n      dup1\n        /* \"#utility.yul\":3511:3523   */\n      revert\n        /* \"#utility.yul\":5571:5699   */\n    tag_390:\n        /* \"#utility.yul\":5611:5614   */\n      0x00\n        /* \"#utility.yul\":5642:5643   */\n      dup3\n        /* \"#utility.yul\":5638:5644   */\n      not\n        /* \"#utility.yul\":5635:5636   */\n      dup3\n        /* \"#utility.yul\":5632:5645   */\n      gt\n        /* \"#utility.yul\":5629:5668   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":5648:5666   */\n      tag_582\n      tag_547\n      jump\t// in\n    tag_582:\n      pop\n        /* \"#utility.yul\":5684:5693   */\n      add\n      swap1\n        /* \"#utility.yul\":5571:5699   */\n      jump\t// out\n        /* \"#utility.yul\":6450:6575   */\n    tag_535:\n        /* \"#utility.yul\":6490:6494   */\n      0x00\n        /* \"#utility.yul\":6518:6519   */\n      dup3\n        /* \"#utility.yul\":6515:6516   */\n      dup3\n        /* \"#utility.yul\":6512:6520   */\n      lt\n        /* \"#utility.yul\":6509:6543   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":6523:6541   */\n      tag_587\n      tag_547\n      jump\t// in\n    tag_587:\n      pop\n        /* \"#utility.yul\":6560:6569   */\n      sub\n      swap1\n        /* \"#utility.yul\":6450:6575   */\n      jump\t// out\n        /* \"#utility.yul\":6580:6748   */\n    tag_538:\n        /* \"#utility.yul\":6620:6627   */\n      0x00\n        /* \"#utility.yul\":6686:6687   */\n      dup2\n        /* \"#utility.yul\":6682:6683   */\n      0x00\n        /* \"#utility.yul\":6678:6684   */\n      not\n        /* \"#utility.yul\":6674:6688   */\n      div\n        /* \"#utility.yul\":6671:6672   */\n      dup4\n        /* \"#utility.yul\":6668:6689   */\n      gt\n        /* \"#utility.yul\":6663:6664   */\n      dup3\n        /* \"#utility.yul\":6656:6665   */\n      iszero\n        /* \"#utility.yul\":6649:6666   */\n      iszero\n        /* \"#utility.yul\":6645:6690   */\n      and\n        /* \"#utility.yul\":6642:6713   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":6693:6711   */\n      tag_590\n      tag_547\n      jump\t// in\n    tag_590:\n      pop\n        /* \"#utility.yul\":6733:6742   */\n      mul\n      swap1\n        /* \"#utility.yul\":6580:6748   */\n      jump\t// out\n        /* \"#utility.yul\":6753:6970   */\n    tag_541:\n        /* \"#utility.yul\":6793:6794   */\n      0x00\n        /* \"#utility.yul\":6819:6820   */\n      dup3\n        /* \"#utility.yul\":6809:6941   */\n      tag_592\n      jumpi\n        /* \"#utility.yul\":6863:6873   */\n      0x4e487b71\n        /* \"#utility.yul\":6858:6861   */\n      0xe0\n        /* \"#utility.yul\":6854:6874   */\n      shl\n        /* \"#utility.yul\":6851:6852   */\n      0x00\n        /* \"#utility.yul\":6844:6875   */\n      mstore\n        /* \"#utility.yul\":6898:6902   */\n      0x12\n        /* \"#utility.yul\":6895:6896   */\n      0x04\n        /* \"#utility.yul\":6888:6903   */\n      mstore\n        /* \"#utility.yul\":6926:6930   */\n      0x24\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6916:6931   */\n      revert\n        /* \"#utility.yul\":6809:6941   */\n    tag_592:\n      pop\n        /* \"#utility.yul\":6955:6964   */\n      div\n      swap1\n        /* \"#utility.yul\":6753:6970   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209d1ae62a712be378c13cbfb029be6450c0c633d22938646ac72ef68a8aab0b1864736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1254": {
									"entryPoint": null,
									"id": 1254,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 108,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_contract$_ERC20_$690_fromMemory": {
									"entryPoint": 188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:319:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "108:209:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "154:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "163:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "156:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "156:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "156:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "129:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "138:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "125:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "150:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "121:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:32:7"
															},
															"nodeType": "YulIf",
															"src": "118:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "179:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "192:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "192:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "183:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "271:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "280:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "283:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "273:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "273:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "273:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "256:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "261:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "252:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "252:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "265:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "248:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "248:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "237:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "227:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:50:7"
															},
															"nodeType": "YulIf",
															"src": "217:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "296:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "306:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC20_$690_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "74:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "85:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "97:6:7",
														"type": ""
													}
												],
												"src": "14:303:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_ERC20_$690_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B28 CODESIZE SUB DUP1 PUSH3 0x1B28 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x3E SWAP2 PUSH2 0xBC JUMP JUMPDEST PUSH2 0x47 CALLER PUSH2 0x6C JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A2C DUP1 PUSH3 0xFC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC8A22EB4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE85ABE09 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xFB4CB32B EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8A22EB4 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xD6343867 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB8A3C6B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAB8A3C6B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4BE4D790 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4BE4D790 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x44038F90 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x4B319713 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x104DB1B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18E1FBFC EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x203 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23C JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x317 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x436 JUMPI PUSH2 0x436 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x63D JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x467 JUMPI PUSH2 0x467 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x565 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP14 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x17E1 JUMP JUMPDEST SWAP1 PUSH2 0x17ED JUMP JUMPDEST SWAP1 PUSH2 0x17E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x62D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x63A DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x647 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x418 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0x667 DUP4 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F8 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x94C JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x729 JUMPI PUSH2 0x729 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x7E0 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x75B JUMPI PUSH2 0x75B PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x79F JUMPI PUSH2 0x798 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x798 PUSH3 0x15180 PUSH2 0x52E PUSH2 0x7C0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP12 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7FA JUMPI PUSH2 0x7FA PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x877 JUMPI PUSH2 0x837 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI PUSH2 0x850 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x8A1 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8BA JUMPI PUSH2 0x8BA PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x916 DUP3 DUP6 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x17F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92B PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x949 DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x956 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6DA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x993 JUMPI PUSH2 0x982 DUP4 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP7 ADD SSTORE SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA56 JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xB33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D206661696C65642064756520746F206661696C656420616D6F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3A103A3930B739B332B917 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB40 SWAP1 DUP6 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0xBB3 PUSH1 0x0 PUSH2 0x1805 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xC3C JUMPI PUSH2 0xC39 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP4 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC46 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207374616B65207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x363AB297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0x194B JUMP JUMPDEST LT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206861766520656E6F7567682062616C616E636520746F207374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65206661696C65642064756520746F206661696C656420616D6F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3A103A3930B739B332B917 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEA9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xECC JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xFB4 JUMPI PUSH1 0x0 PUSH2 0xF06 PUSH2 0x3E8 PUSH2 0x52E DUP7 PUSH1 0x78 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xF2F SWAP1 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 ADD SLOAD PUSH2 0xF5E SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 PUSH32 0x328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0x1009 JUMPI TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xFD2 SWAP2 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP1 PUSH2 0x1045 PUSH2 0x103E PUSH2 0x3E8 PUSH2 0x52E DUP9 PUSH1 0x78 PUSH2 0x17E1 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1166 SWAP1 DUP4 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1177 SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x120F JUMPI PUSH2 0x120F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x1236 JUMPI PUSH2 0x1236 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x125D JUMPI PUSH2 0x125D PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x1284 JUMPI PUSH2 0x1284 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD SLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x1805 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1356 CALLER PUSH2 0x3FC JUMP JUMPDEST GT PUSH2 0x1390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102437B63232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x13A9 SWAP1 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x13DF SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE DUP3 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x16EA JUMPI DUP5 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x145D JUMPI PUSH2 0x145D PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x16D8 JUMPI TIMESTAMP DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x1565 JUMPI DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14C0 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x151D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP15 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH2 0x1689 JUMP JUMPDEST PUSH2 0x151D PUSH3 0x15180 PUSH2 0x52E PUSH2 0x1545 DUP9 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP13 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x157F JUMPI PUSH2 0x157F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x1623 JUMPI PUSH2 0x15E3 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x15BC JUMPI PUSH2 0x15BC PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP12 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FC PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1689 JUMP JUMPDEST PUSH2 0x164D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x1 ADD SLOAD DUP12 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1666 JUMPI PUSH2 0x1666 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x16A2 DUP3 DUP7 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x18CF JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x16D5 DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x16E2 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x143F JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x16FE SWAP1 DUP5 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x170F SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x4 SLOAD PUSH2 0x171F SWAP1 DUP4 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI PUSH2 0x17BA DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1799 JUMPI PUSH2 0x1799 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x17F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x17C6 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x199E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x186C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DA DUP3 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C1 DUP4 PUSH2 0x1855 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x190F JUMPI PUSH2 0x190F PUSH2 0x18E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1999 PUSH2 0x18E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19B0 JUMPI PUSH2 0x19B0 PUSH2 0x18E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CF PUSH2 0x18E5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BYTE 0xE6 0x2A PUSH18 0x2BE378C13CBFB029BE6450C0C633D2293864 PUSH11 0xC72EF68A8AAB0B1864736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "241:15840:6:-:0;;;774:12;739:47;;1639:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;1715:2:6;:11;;-1:-1:-1;;;;;;1715:11:6;-1:-1:-1;;;;;1715:11:6;;;;;;;;;;241:15840;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:303:7:-;97:6;150:2;138:9;129:7;125:23;121:32;118:52;;;166:1;163;156:12;118:52;192:16;;-1:-1:-1;;;;;237:31:7;;227:42;;217:70;;283:1;280;273:12;217:70;306:5;14:303;-1:-1:-1;;;14:303:7:o;:::-;241:15840:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DAILY_ROI_1143": {
									"entryPoint": null,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PERCENTS_DIVIDER_1140": {
									"entryPoint": null,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@REFERRAL_PERCENTS_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@STAKING_PERIOD_1152": {
									"entryPoint": null,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TIME_STEP_1149": {
									"entryPoint": null,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_805": {
									"entryPoint": null,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 6149,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_991": {
									"entryPoint": 6137,
									"id": 991,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claim_1823": {
									"entryPoint": 1735,
									"id": 1823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@compound_2124": {
									"entryPoint": 4939,
									"id": 2124,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@div_1036": {
									"entryPoint": 6125,
									"id": 1036,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getUserAmountOfDeposits_2473": {
									"entryPoint": null,
									"id": 2473,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserAvailable_2407": {
									"entryPoint": 1625,
									"id": 2407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserCheckpoint_2390": {
									"entryPoint": null,
									"id": 2390,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserDepositInfo_2459": {
									"entryPoint": 4532,
									"id": 2459,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"@getUserDividends_2338": {
									"entryPoint": 1020,
									"id": 2338,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferralBonus_2351": {
									"entryPoint": null,
									"id": 2351,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferralCount_2364": {
									"entryPoint": null,
									"id": 2364,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserReferrer_2377": {
									"entryPoint": null,
									"id": 2377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserTotalDeposits_2527": {
									"entryPoint": 2997,
									"id": 2527,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserTotalWithdrawn_2572": {
									"entryPoint": 5981,
									"id": 2572,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@minimumStakeValue_1170": {
									"entryPoint": null,
									"id": 1170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1021": {
									"entryPoint": 6113,
									"id": 1021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2943,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMinimumStakeValue_2584": {
									"entryPoint": 1679,
									"id": 2584,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_1496": {
									"entryPoint": 3158,
									"id": 1496,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1006": {
									"entryPoint": 6094,
									"id": 1006,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalDepositCount_1163": {
									"entryPoint": null,
									"id": 1163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_1159": {
									"entryPoint": null,
									"id": 1159,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalUsers_1157": {
									"entryPoint": null,
									"id": 1157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalWithdrawn_1161": {
									"entryPoint": null,
									"id": 1161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4784,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4103c10ee21b93fb098ff2fcd90d4858f0f01ac3821e0db37737aa5108ca8b01__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5efd31b65f0444fe7b042d8613f358d2103fad037715fec653b6d2fd96c776b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7f4d52890f3e51149cd51d1af67cb9d78fb62c13187ef2f547e03259819dd3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb7a83071538e27737dd244c3853ba7e93cb1faa7d1062627afe1253e091c06d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6581,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6558,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6972:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "277:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "264:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "255:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "347:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "356:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "359:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "349:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "349:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "349:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "306:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "317:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "332:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "337:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "328:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "328:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "341:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "324:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "324:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "313:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "313:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "303:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "303:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "296:50:7"
															},
															"nodeType": "YulIf",
															"src": "293:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "224:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "235:5:7",
														"type": ""
													}
												],
												"src": "196:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "444:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "490:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "492:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "492:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "492:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "465:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "474:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "461:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "461:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "486:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "457:32:7"
															},
															"nodeType": "YulIf",
															"src": "454:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "515:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "525:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "410:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "421:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "433:6:7",
														"type": ""
													}
												],
												"src": "374:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "688:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "699:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "684:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "676:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "718:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "733:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "749:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "754:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "745:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "745:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "758:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "741:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "741:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "729:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "729:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "711:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "711:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "635:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "646:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "657:4:7",
														"type": ""
													}
												],
												"src": "565:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "889:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "898:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "901:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "891:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "891:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "891:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "864:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "873:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "860:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "860:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "885:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "856:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:32:7"
															},
															"nodeType": "YulIf",
															"src": "853:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "914:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "937:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "924:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "924:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "914:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "809:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "820:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "832:6:7",
														"type": ""
													}
												],
												"src": "773:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1045:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1091:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1103:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1093:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1093:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1093:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1066:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1075:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1062:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1062:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1087:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1058:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:32:7"
															},
															"nodeType": "YulIf",
															"src": "1055:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1116:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1145:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1126:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1116:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1164:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1191:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1202:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1187:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1187:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1174:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1003:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1014:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1026:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1034:6:7",
														"type": ""
													}
												],
												"src": "958:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1424:266:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1434:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1457:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1477:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1470:25:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1515:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1526:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1511:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1511:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1531:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1504:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1504:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1558:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1569:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1554:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1554:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1574:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1547:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1547:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1601:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1612:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1597:18:7"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "1617:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1590:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1590:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1644:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1655:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1640:19:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "1675:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1668:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1668:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1661:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1633:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1361:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1372:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1380:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1388:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1396:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1404:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1415:4:7",
														"type": ""
													}
												],
												"src": "1217:473:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1727:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1744:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1751:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1756:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1784:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1787:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1777:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1777:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1777:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1811:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1801:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1801:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1801:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "1695:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1859:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1876:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1888:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1879:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1879:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1869:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1869:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1869:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1919:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1940:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1943:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1933:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1933:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1933:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1827:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2006:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2037:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2039:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2039:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2039:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2022:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2033:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2029:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2029:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2019:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2019:17:7"
															},
															"nodeType": "YulIf",
															"src": "2016:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2068:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2079:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2075:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1988:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "1998:3:7",
														"type": ""
													}
												],
												"src": "1959:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:182:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2290:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2301:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2324:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2335:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2340:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2313:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2313:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2313:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2363:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2374:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2379:34:7",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2352:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2352:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2352:62:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2423:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2435:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2446:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2423:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2250:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2264:4:7",
														"type": ""
													}
												],
												"src": "2099:356:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2634:171:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2651:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2662:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2644:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2696:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2701:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2724:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2735:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:18:7"
																	},
																	{
																		"hexValue": "5573657220686173206e6f206469766964656e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2740:23:7",
																		"type": "",
																		"value": "User has no dividends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2713:51:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2773:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2785:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2796:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2781:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2773:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2611:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2625:4:7",
														"type": ""
													}
												],
												"src": "2460:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2891:103:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2937:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2949:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2939:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2939:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2939:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2912:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2921:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2908:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2908:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2904:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:32:7"
															},
															"nodeType": "YulIf",
															"src": "2901:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2962:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2978:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2972:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2962:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2857:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2868:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2880:6:7",
														"type": ""
													}
												],
												"src": "2810:184:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3128:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3138:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3150:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3161:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3146:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3138:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3180:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3195:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3211:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3216:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3207:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3207:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3220:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3203:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3203:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3191:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3191:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3173:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3173:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3244:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3255:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3240:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3240:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3260:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3233:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3233:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3089:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3100:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3108:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3119:4:7",
														"type": ""
													}
												],
												"src": "2999:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3356:199:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3402:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3411:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3414:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3404:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3404:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3404:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3377:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3386:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3373:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3373:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3398:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3369:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:32:7"
															},
															"nodeType": "YulIf",
															"src": "3366:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3427:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3446:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3440:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3431:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3509:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3511:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3511:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3478:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "3499:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "3492:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3492:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3485:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3485:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3475:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3468:40:7"
															},
															"nodeType": "YulIf",
															"src": "3465:60:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3534:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3544:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3534:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3322:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3333:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3345:6:7",
														"type": ""
													}
												],
												"src": "3278:277:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3734:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3751:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3744:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3744:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3744:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3785:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3796:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3801:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3824:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3835:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3820:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3820:18:7"
																	},
																	{
																		"hexValue": "436c61696d206661696c65642064756520746f206661696c656420616d6f756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3840:34:7",
																		"type": "",
																		"value": "Claim failed due to failed amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3813:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3813:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3813:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3895:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3906:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3891:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3891:18:7"
																	},
																	{
																		"hexValue": "74207472616e736665722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3911:13:7",
																		"type": "",
																		"value": "t transfer."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3884:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3884:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3884:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3934:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3946:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3942:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3942:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3934:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5efd31b65f0444fe7b042d8613f358d2103fad037715fec653b6d2fd96c776b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3711:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3725:4:7",
														"type": ""
													}
												],
												"src": "3560:407:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4146:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4163:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4174:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4156:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4156:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4156:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4197:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4208:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4193:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4193:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4213:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4186:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4186:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4186:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4236:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4247:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4232:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4232:18:7"
																	},
																	{
																		"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207374616b65207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4252:34:7",
																		"type": "",
																		"value": "Amount is below minimum stake va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4225:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4225:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4225:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4307:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4318:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4303:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4303:18:7"
																	},
																	{
																		"hexValue": "6c75652e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4323:6:7",
																		"type": "",
																		"value": "lue."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4296:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4296:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4296:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4339:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4351:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4347:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4347:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4339:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb7a83071538e27737dd244c3853ba7e93cb1faa7d1062627afe1253e091c06d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4123:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4137:4:7",
														"type": ""
													}
												],
												"src": "3972:400:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4551:223:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4568:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4579:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4561:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4561:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4602:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4613:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4598:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4618:2:7",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4591:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4591:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4591:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4641:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4652:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4637:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4637:18:7"
																	},
																	{
																		"hexValue": "4d757374206861766520656e6f7567682062616c616e636520746f207374616b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4657:34:7",
																		"type": "",
																		"value": "Must have enough balance to stak"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4630:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4712:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4723:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4708:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4708:18:7"
																	},
																	{
																		"hexValue": "65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4728:3:7",
																		"type": "",
																		"value": "e"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4701:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4701:31:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4741:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4749:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4749:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4741:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4103c10ee21b93fb098ff2fcd90d4858f0f01ac3821e0db37737aa5108ca8b01__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4528:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4542:4:7",
														"type": ""
													}
												],
												"src": "4377:397:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4936:218:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4946:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4958:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4969:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4954:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4954:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4946:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4981:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4999:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5004:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4995:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4995:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5008:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4991:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4985:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5026:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5041:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5049:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5037:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5037:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5019:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5019:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5073:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5084:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5069:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5069:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5093:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5101:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5089:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5089:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5062:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5062:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5062:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5125:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5136:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5121:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5121:18:7"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5141:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5114:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5114:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4900:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4908:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4916:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4927:4:7",
														"type": ""
													}
												],
												"src": "4779:375:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:233:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5350:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5361:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5384:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5395:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5380:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5380:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5400:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5373:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5373:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5373:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5423:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5434:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5419:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5419:18:7"
																	},
																	{
																		"hexValue": "5374616b65206661696c65642064756520746f206661696c656420616d6f756e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5439:34:7",
																		"type": "",
																		"value": "Stake failed due to failed amoun"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5412:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5412:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5412:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5494:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5505:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5490:18:7"
																	},
																	{
																		"hexValue": "74207472616e736665722e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5510:13:7",
																		"type": "",
																		"value": "t transfer."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5483:41:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5533:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5545:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5556:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5541:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5541:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5533:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7f4d52890f3e51149cd51d1af67cb9d78fb62c13187ef2f547e03259819dd3f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5310:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5324:4:7",
														"type": ""
													}
												],
												"src": "5159:407:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5619:80:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5646:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5648:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5648:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5648:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5635:1:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5642:1:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5638:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5638:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:13:7"
															},
															"nodeType": "YulIf",
															"src": "5629:39:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5677:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5688:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5691:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5684:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5677:3:7"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5602:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5605:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5611:3:7",
														"type": ""
													}
												],
												"src": "5571:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5878:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5895:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5906:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5888:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5888:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5888:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5929:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5940:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5925:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5925:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5945:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5918:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5918:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5918:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5968:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5979:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5964:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5964:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5984:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5957:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5957:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5957:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6039:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6050:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6035:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6055:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6028:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6028:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6073:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6085:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6096:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6081:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6073:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5855:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5869:4:7",
														"type": ""
													}
												],
												"src": "5704:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6285:160:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6302:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6313:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6295:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6295:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6295:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6347:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6332:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:7",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6325:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6325:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:7"
																	},
																	{
																		"hexValue": "4e6f7420486f6c646572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6391:12:7",
																		"type": "",
																		"value": "Not Holder"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:40:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6413:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6425:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6436:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6421:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6413:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6262:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6276:4:7",
														"type": ""
													}
												],
												"src": "6111:334:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6499:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6521:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6523:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6523:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6523:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6515:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6518:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6512:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6512:8:7"
															},
															"nodeType": "YulIf",
															"src": "6509:34:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6552:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6564:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6567:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6560:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6560:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6552:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6481:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6484:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6490:4:7",
														"type": ""
													}
												],
												"src": "6450:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6632:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6691:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6693:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6693:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6693:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6663:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6656:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6656:9:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "6649:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6649:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6671:1:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6682:1:7",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6678:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6678:6:7"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "6686:1:7"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6674:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6674:14:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6668:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6668:21:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6645:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6645:45:7"
															},
															"nodeType": "YulIf",
															"src": "6642:71:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6722:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6737:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6740:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "6733:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "6722:7:7"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6611:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6614:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6620:7:7",
														"type": ""
													}
												],
												"src": "6580:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6799:171:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6830:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6851:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6858:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6863:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "6854:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6854:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6844:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6844:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6844:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6895:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6898:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6888:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6888:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6888:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6923:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6926:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6916:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6916:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6916:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6819:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6812:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6812:9:7"
															},
															"nodeType": "YulIf",
															"src": "6809:132:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6950:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6959:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6962:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6955:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6955:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6950:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6784:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6787:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "6793:1:7",
														"type": ""
													}
												],
												"src": "6753:217:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"User has no dividends\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5efd31b65f0444fe7b042d8613f358d2103fad037715fec653b6d2fd96c776b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Claim failed due to failed amoun\")\n        mstore(add(headStart, 96), \"t transfer.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cb7a83071538e27737dd244c3853ba7e93cb1faa7d1062627afe1253e091c06d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Amount is below minimum stake va\")\n        mstore(add(headStart, 96), \"lue.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4103c10ee21b93fb098ff2fcd90d4858f0f01ac3821e0db37737aa5108ca8b01__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Must have enough balance to stak\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c7f4d52890f3e51149cd51d1af67cb9d78fb62c13187ef2f547e03259819dd3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Stake failed due to failed amoun\")\n        mstore(add(headStart, 96), \"t transfer.\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"Not Holder\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC8A22EB4 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE85ABE09 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE85ABE09 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0xF69E2046 EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xFB4CB32B EQ PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC8A22EB4 EQ PUSH2 0x341 JUMPI DUP1 PUSH4 0xD6343867 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0xD7FFCA91 EQ PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAB8A3C6B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0xAB8A3C6B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0xBFF1F9E1 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xC0806B03 EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xA8AEB6C2 EQ PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x4BE4D790 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x4BE4D790 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x7E3ABEEA EQ PUSH2 0x28A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x36144C9A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x44038F90 EQ PUSH2 0x254 JUMPI DUP1 PUSH4 0x4B319713 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x104DB1B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x40A772E EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x153AB9DF EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18E1FBFC EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x32BC298C EQ PUSH2 0x203 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B8 PUSH3 0xED4E00 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B8 PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x3FC JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x659 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH3 0x15180 DUP2 JUMP JUMPDEST PUSH2 0x23C PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x78 DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x188C JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x278 PUSH2 0x6C7 JUMP JUMPDEST PUSH2 0x278 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x23C JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0xF DUP2 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x317 PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x18A5 JUMP JUMPDEST PUSH2 0x11B4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x34F CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x384 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x12B0 JUMP JUMPDEST PUSH2 0x278 PUSH2 0x134B JUMP JUMPDEST PUSH2 0x1B8 PUSH2 0x3F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1871 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x64F JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x436 JUMPI PUSH2 0x436 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x63D JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x467 JUMPI PUSH2 0x467 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x565 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x499 JUMPI PUSH2 0x499 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x541 JUMPI PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP14 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD SWAP1 PUSH2 0x17E1 JUMP JUMPDEST SWAP1 PUSH2 0x17ED JUMP JUMPDEST SWAP1 PUSH2 0x17E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x630 JUMP JUMPDEST PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x57F JUMPI PUSH2 0x57F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x603 JUMPI PUSH2 0x53A PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x62D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH2 0x63A DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x647 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x418 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x689 PUSH2 0x667 DUP4 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP1 JUMPDEST DUP4 SLOAD DUP2 LT ISZERO PUSH2 0x95E JUMPI DUP4 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x6F8 JUMPI PUSH2 0x6F8 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x94C JUMPI TIMESTAMP DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x729 JUMPI PUSH2 0x729 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x7E0 JUMPI DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x75B JUMPI PUSH2 0x75B PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x79F JUMPI PUSH2 0x798 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x798 PUSH3 0x15180 PUSH2 0x52E PUSH2 0x7C0 DUP8 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP12 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7FA JUMPI PUSH2 0x7FA PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x877 JUMPI PUSH2 0x837 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x5BC JUMPI PUSH2 0x5BC PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x850 JUMPI PUSH2 0x850 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x8DD JUMP JUMPDEST PUSH2 0x8A1 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x4F7 DUP10 PUSH1 0x1 ADD SLOAD DUP11 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8BA JUMPI PUSH2 0x8BA PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x916 DUP3 DUP6 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x17F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x92B JUMPI PUSH2 0x92B PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x949 DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x956 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6DA JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD DUP1 ISZERO PUSH2 0x993 JUMPI PUSH2 0x982 DUP4 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 ADD DUP2 SWAP1 SSTORE PUSH1 0x3 DUP7 ADD SSTORE SWAP3 POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x9DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x5573657220686173206E6F206469766964656E6473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA48 SWAP2 SWAP1 PUSH2 0x194B JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xA56 JUMPI DUP1 SWAP4 POP JUMPDEST TIMESTAMP PUSH1 0x1 DUP7 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAD3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xB33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436C61696D206661696C65642064756520746F206661696C656420616D6F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3A103A3930B739B332B917 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0xB40 SWAP1 DUP6 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH2 0xBB3 PUSH1 0x0 PUSH2 0x1805 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP3 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xBEE JUMPI PUSH2 0xBEE PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0xC3C JUMPI PUSH2 0xC39 DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC21 JUMPI PUSH2 0xC21 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD DUP4 SWAP1 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP1 PUSH2 0xC46 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD0 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732062656C6F77206D696E696D756D207374616B65207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x363AB297 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCFC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD20 SWAP2 SWAP1 PUSH2 0x194B JUMP JUMPDEST LT ISZERO PUSH2 0xD78 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D757374206861766520656E6F7567682062616C616E636520746F207374616B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x1964 JUMP JUMPDEST PUSH2 0xE53 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B65206661696C65642064756520746F206661696C656420616D6F756E PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3A103A3930B739B332B917 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO DUP1 ISZERO PUSH2 0xE94 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xEA9 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xECC JUMPI PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0xFB6 JUMPI PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0xFB4 JUMPI PUSH1 0x0 PUSH2 0xF06 PUSH2 0x3E8 PUSH2 0x52E DUP7 PUSH1 0x78 PUSH2 0x17E1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SWAP2 POP PUSH2 0xF2F SWAP1 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 ADD SLOAD PUSH2 0xF5E SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x3 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 PUSH32 0x328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST POP JUMPDEST DUP1 SLOAD PUSH2 0x1009 JUMPI TIMESTAMP PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SLOAD PUSH2 0xFD2 SWAP2 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH32 0x9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x10C9 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE DUP2 SWAP1 DUP1 PUSH2 0x1045 PUSH2 0x103E PUSH2 0x3E8 PUSH2 0x52E DUP9 PUSH1 0x78 PUSH2 0x17E1 JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x17CE JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x1066 SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1159 JUMP JUMPDEST DUP1 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP4 ADD SSTORE PUSH1 0x80 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x1166 SWAP1 DUP4 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1177 SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH32 0x2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP3 SWAP2 DUP2 SWAP1 DUP9 SWAP1 DUP2 LT PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x120F JUMPI PUSH2 0x120F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x1236 JUMPI PUSH2 0x1236 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 PUSH1 0x0 ADD DUP11 DUP2 SLOAD DUP2 LT PUSH2 0x125D JUMPI PUSH2 0x125D PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x1284 JUMPI PUSH2 0x1284 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD SLOAD SWAP4 SWAP13 SWAP3 SWAP12 POP SWAP1 SWAP10 POP SWAP8 POP PUSH1 0xFF SWAP1 SWAP2 AND SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B9 SWAP1 PUSH2 0x1916 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B9 JUMP JUMPDEST PUSH2 0x1348 DUP2 PUSH2 0x1805 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1356 CALLER PUSH2 0x3FC JUMP JUMPDEST GT PUSH2 0x1390 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x2737BA102437B63232B9 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 PUSH2 0x13A9 SWAP1 PUSH2 0x3FC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP4 PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xED4E00 TIMESTAMP PUSH2 0x13DF SWAP2 SWAP1 PUSH2 0x1986 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE DUP3 DUP3 KECCAK256 DUP5 MLOAD PUSH1 0x5 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE SWAP2 DUP4 ADD MLOAD SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x16EA JUMPI DUP5 PUSH1 0x0 ADD DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x145D JUMPI PUSH2 0x145D PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x16D8 JUMPI TIMESTAMP DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD GT ISZERO PUSH2 0x1565 JUMPI DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x14C0 JUMPI PUSH2 0x14C0 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x1524 JUMPI PUSH2 0x151D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH2 0x4D6 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP15 PUSH1 0x0 ADD DUP12 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH2 0x1689 JUMP JUMPDEST PUSH2 0x151D PUSH3 0x15180 PUSH2 0x52E PUSH2 0x1545 DUP9 PUSH1 0x1 ADD SLOAD TIMESTAMP PUSH2 0x17CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x534 PUSH2 0x3E8 PUSH2 0x52E PUSH1 0xF DUP13 PUSH1 0x0 ADD DUP10 DUP2 SLOAD DUP2 LT PUSH2 0x517 JUMPI PUSH2 0x517 PUSH2 0x18CF JUMP JUMPDEST DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x157F JUMPI PUSH2 0x157F PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD GT ISZERO PUSH2 0x1623 JUMPI PUSH2 0x15E3 PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x0 ADD DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x15BC JUMPI PUSH2 0x15BC PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD SLOAD DUP12 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x15FC JUMPI PUSH2 0x15FC PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x1689 JUMP JUMPDEST PUSH2 0x164D PUSH1 0x3C PUSH2 0x52E PUSH1 0x3C PUSH2 0x52E PUSH2 0x14FD DUP11 PUSH1 0x1 ADD SLOAD DUP12 PUSH1 0x0 ADD DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x5E3 JUMPI PUSH2 0x5E3 PUSH2 0x18CF JUMP JUMPDEST SWAP2 POP PUSH1 0x1 DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1666 JUMPI PUSH2 0x1666 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH2 0x16A2 DUP3 DUP7 PUSH1 0x0 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x8F6 JUMPI PUSH2 0x8F6 PUSH2 0x18CF JUMP JUMPDEST DUP6 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16B7 JUMPI PUSH2 0x16B7 PUSH2 0x18CF JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SSTORE PUSH2 0x16D5 DUP4 DUP4 PUSH2 0x17F9 JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 PUSH2 0x16E2 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x143F JUMP JUMPDEST POP TIMESTAMP PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x3 SLOAD PUSH2 0x16FE SWAP1 DUP5 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x170F SWAP1 PUSH1 0x1 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH1 0x4 SLOAD PUSH2 0x171F SWAP1 DUP4 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP1 JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI PUSH2 0x17BA DUP4 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1799 JUMPI PUSH2 0x1799 PUSH2 0x18CF JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x17F9 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x17C6 DUP2 PUSH2 0x18FB JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1778 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x199E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x19B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x19D4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17DA DUP3 DUP5 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x186C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1883 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DA DUP3 PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x189E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x18C1 DUP4 PUSH2 0x1855 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x190F JUMPI PUSH2 0x190F PUSH2 0x18E5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x195D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1976 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x17DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1999 PUSH2 0x18E5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x19B0 JUMPI PUSH2 0x19B0 PUSH2 0x18E5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x19CF JUMPI PUSH2 0x19CF PUSH2 0x18E5 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 BYTE 0xE6 0x2A PUSH18 0x2BE378C13CBFB029BE6450C0C633D2293864 PUSH11 0xC72EF68A8AAB0B1864736F PUSH13 0x634300080A0033000000000000 ",
							"sourceMap": "241:15840:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;524:49;;565:8;524:49;;;;;160:25:7;;;148:2;133:18;524:49:6;;;;;;;;322:47;;365:4;322:47;;10869:2524;;;;;;:::i;:::-;;:::i;14093:248::-;;;;;;:::i;:::-;;:::i;739:47::-;;;;;;475:42;;511:6;475:42;;13751:161;;;;;;:::i;:::-;-1:-1:-1;;;;;13877:18:6;;;13845:7;13877:18;;;:5;:18;;;;;:27;;;;;13751:161;;;;-1:-1:-1;;;;;729:32:7;;;711:51;;699:2;684:18;13751:161:6;565:203:7;421:47:6;;465:3;421:47;;664:29;;;;;;15921:157;;;;;;:::i;:::-;;:::i;:::-;;4083:3435;;;:::i;1668:101:0:-;;;:::i;15080:428:6:-;;;;;;:::i;:::-;;:::i;631:26::-;;;;;;1036:85:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;14896:176:6;;;;;;:::i;:::-;-1:-1:-1;;;;;15030:18:6;14998:7;15030:18;;;:5;:18;;;;;:34;;14896:176;376:38;;412:2;376:38;;1742:2333;;;;;;:::i;:::-;;:::i;599:25::-;;;;;;14349:539;;;;;;:::i;:::-;;:::i;:::-;;;;1470:25:7;;;1526:2;1511:18;;1504:34;;;;1554:18;;;1547:34;;;;1612:2;1597:18;;1590:34;1668:14;1661:22;1655:3;1640:19;;1633:51;1457:3;1442:19;14349:539:6;1217:473:7;13572:171:6;;;;;;:::i;:::-;-1:-1:-1;;;;;13703:18:6;13671:7;13703:18;;;:5;:18;;;;;:32;;;;13572:171;700:32;;;;;;13920:165;;;;;;:::i;:::-;-1:-1:-1;;;;;14048:18:6;14016:7;14048:18;;;:5;:18;;;;;:29;;;;13920:165;13401:163;;;;;;:::i;:::-;-1:-1:-1;;;;;13532:18:6;13500:7;13532:18;;;:5;:18;;;;;:24;;;;13401:163;1918:198:0;;;;;;:::i;:::-;;:::i;7526:3335:6:-;;;:::i;15516:361::-;;;;;;:::i;:::-;;:::i;10869:2524::-;-1:-1:-1;;;;;11009:18:6;;10964:7;11009:18;;;:5;:18;;;;;10964:7;;;11103:2249;11127:20;;11123:24;;11103:2249;;;11173:4;:13;;11187:1;11173:16;;;;;;;;:::i;:::-;;;;;;;;;:22;:16;;;;;:22;;;;11169:2172;;11256:15;11229:4;:13;;11243:1;11229:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;11225:2036;;;11329:4;:15;;;11300:4;:13;;11314:1;11300:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;11296:891;;;11385:405;11787:2;11385:367;11749:2;11385:329;11636:47;11656:4;:13;;11670:1;11656:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;11636:15;:19;;:47;;;;:::i;:::-;11416:124;365:4;11416:38;412:2;11416:4;:13;;11430:1;11416:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;;:27;:38::i;:::-;:42;;:124::i;:::-;11385:216;;:329::i;:405::-;11373:417;;11225:2036;;11296:891;11859:304;12130:2;11859:232;12088:2;11859:224;12046:36;12066:4;:15;;;12046;:19;;:36;;;;:::i;11225:2036::-;12268:4;:15;;;12239:4;:13;;12253:1;12239:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;12235:1007;;;12324:486;12807:2;12324:448;12769:2;12324:410;12575:128;12642:4;:13;;12656:1;12642:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;12575:4;:13;;12589:1;12575:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:28;;:128;;;;:::i;12235:1007::-;12879:339;13215:2;12879:301;13177:2;12879:263;13096:45;13125:4;:15;;;13096:4;:13;;13110:1;13096:16;;;;;;;;:::i;12879:339::-;12867:351;;12235:1007;13296:29;:14;13315:9;13296:18;:29::i;:::-;13279:46;;11169:2172;11149:3;;;;:::i;:::-;;;;11103:2249;;;-1:-1:-1;13371:14:6;;10869:2524;-1:-1:-1;;;;10869:2524:6:o;14093:248::-;14188:7;14233:100;14289:29;14306:11;14289:16;:29::i;:::-;-1:-1:-1;;;;;13532:18:6;;13500:7;13532:18;;;:5;:18;;;;;:24;;;14233:37;;:100::i;:::-;14213:120;14093:248;-1:-1:-1;;14093:248:6:o;15921:157::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;16032:17:6::1;:38:::0;15921:157::o;4083:3435::-;4144:10;4118:17;4138;;;:5;:17;;;;;;4118;;4228:2514;4252:20;;4248:24;;4228:2514;;;4298:4;:13;;4312:1;4298:16;;;;;;;;:::i;:::-;;;;;;;;;:22;:16;;;;;:22;;;;4294:2437;;4381:15;4354:4;:13;;4368:1;4354:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;4350:2147;;;4454:4;:15;;;4425:4;:13;;4439:1;4425:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;4421:890;;;4510:405;4912:2;4510:367;4874:2;4510:329;4761:47;4781:4;:13;;4795:1;4781:16;;;;;;;;:::i;4510:405::-;4498:417;;4350:2147;;4421:890;4984:303;511:6;4984:224;5171:36;5191:4;:15;;;5171;:19;;:36;;;;:::i;:::-;5015:124;365:4;5015:38;412:2;5015:4;:13;;5029:1;5015:16;;;;;;;;:::i;4350:2147::-;5392:4;:15;;;5363:4;:13;;5377:1;5363:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;5359:1119;;;5448:486;5931:2;5448:448;5893:2;5448:410;5699:128;5766:4;:13;;5780:1;5766:16;;;;;;;;:::i;5448:486::-;5436:498;;5986:4;5961;:13;;5975:1;5961:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;:29;;-1:-1:-1;;5961:29:6;;;;;;;;;;5359:1119;;;6059:339;6395:2;6059:301;6357:2;6059:263;6276:45;6305:4;:15;;;6276:4;:13;;6290:1;6276:16;;;;;;;;:::i;6059:339::-;6047:351;;6450:4;6425;:13;;6439:1;6425:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:22;;:29;;-1:-1:-1;;6425:29:6;;;;;;;;;;5359:1119;6546:81;6599:9;6546:4;:13;;6560:1;6546:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:30;;:81;;;;:::i;:::-;6517:4;:13;;6531:1;6517:16;;;;;;;;:::i;:::-;;;;;;;;;:26;:16;;;;;:26;:110;6689:26;:11;6705:9;6689:15;:26::i;:::-;6675:40;;4294:2437;4274:3;;;;:::i;:::-;;;;4228:2514;;;-1:-1:-1;6799:10:6;6754:21;13532:18;;;:5;:18;;;;;:24;;;6825:17;;6821:160;;6873:30;:11;6889:13;6873:15;:30::i;:::-;6931:1;6918:10;;;:14;;;6947:18;;;:22;6859:44;-1:-1:-1;6821:160:6;7015:1;7001:11;:15;6993:49;;;;-1:-1:-1;;;6993:49:6;;2662:2:7;6993:49:6;;;2644:21:7;2701:2;2681:18;;;2674:30;-1:-1:-1;;;2720:18:7;;;2713:51;2781:18;;6993:49:6;2460:345:7;6993:49:6;7081:2;;:27;;-1:-1:-1;;;7081:27:6;;7102:4;7081:27;;;711:51:7;7055:23:6;;-1:-1:-1;;;;;7081:2:6;;:12;;684:18:7;;7081:27:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7055:53;;7141:11;7123:15;:29;7119:91;;;7183:15;7169:29;;7119:91;7240:15;7222;;;;:33;;;;7290:2;:36;;-1:-1:-1;;;7290:36:6;;7302:10;7290:36;;;3173:51:7;3240:18;;;3233:34;;;-1:-1:-1;;;;;7290:2:6;;;;:11;;3146:18:7;;7290:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7268:129;;;;-1:-1:-1;;;7268:129:6;;3762:2:7;7268:129:6;;;3744:21:7;3801:2;3781:18;;;3774:30;3840:34;3820:18;;;3813:62;-1:-1:-1;;;3891:18:7;;;3884:41;3942:19;;7268:129:6;3560:407:7;7268:129:6;7427:14;;:31;;7446:11;7427:18;:31::i;:::-;7410:14;:48;7476:34;;160:25:7;;;7486:10:6;;7476:34;;148:2:7;133:18;7476:34:6;;;;;;;4107:3411;;;;;4083:3435::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;15080:428:6:-;-1:-1:-1;;;;;15224:18:6;;15179:7;15224:18;;;:5;:18;;;;;15179:7;;15282:193;15306:20;;15302:24;;15282:193;;;15352:4;:13;;15366:1;15352:16;;;;;;;;:::i;:::-;;;;;;;;;:22;:16;;;;;:22;;;;15348:116;;15413:35;15424:4;:13;;15438:1;15424:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:23;15413:6;;:10;:35::i;:::-;15404:44;;15348:116;15328:3;;;;:::i;:::-;;;;15282:193;;;-1:-1:-1;15494:6:6;15080:428;-1:-1:-1;;;15080:428:6:o;1742:2333::-;1841:17;;1831:6;:27;;1809:113;;;;-1:-1:-1;;;1809:113:6;;4174:2:7;1809:113:6;;;4156:21:7;4213:2;4193:18;;;4186:30;4252:34;4232:18;;;4225:62;-1:-1:-1;;;4303:18:7;;;4296:34;4347:19;;1809:113:6;3972:400:7;1809:113:6;1957:2;;:24;;-1:-1:-1;;;1957:24:6;;1970:10;1957:24;;;711:51:7;1985:6:6;;-1:-1:-1;;;;;1957:2:6;;:12;;684:18:7;;1957:24:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;1935:117;;;;-1:-1:-1;;;1935:117:6;;4579:2:7;1935:117:6;;;4561:21:7;4618:2;4598:18;;;4591:30;4657:34;4637:18;;;4630:62;-1:-1:-1;;;4708:18:7;;;4701:31;4749:19;;1935:117:6;4377:397:7;1935:117:6;2087:2;;:50;;-1:-1:-1;;;2087:50:6;;2103:10;2087:50;;;5019:34:7;2123:4:6;5069:18:7;;;5062:43;5121:18;;;5114:34;;;-1:-1:-1;;;;;2087:2:6;;;;:15;;4954:18:7;;2087:50:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2065:143;;;;-1:-1:-1;;;2065:143:6;;5361:2:7;2065:143:6;;;5343:21:7;5400:2;5380:18;;;5373:30;5439:34;5419:18;;;5412:62;-1:-1:-1;;;5490:18:7;;;5483:41;5541:19;;2065:143:6;5159:407:7;2065:143:6;2247:10;2221:17;2241;;;:5;:17;;;;;2289:13;;;;-1:-1:-1;;;;;2289:13:6;:27;:79;;;;-1:-1:-1;;;;;;2333:15:6;;2367:1;2333:15;;;:5;:15;;;;;:31;:35;;2289:79;:118;;;;-1:-1:-1;;;;;;2385:22:6;;2397:10;2385:22;;2289:118;2271:199;;;2434:13;;;:24;;-1:-1:-1;;;;;;2434:24:6;-1:-1:-1;;;;;2434:24:6;;;;;2271:199;2486:13;;;;-1:-1:-1;;;;;2486:13:6;:27;2482:533;;2547:13;;;;-1:-1:-1;;;;;2547:13:6;2581:20;;2577:427;;2622:15;2640:91;365:4;2640:29;:6;465:3;2640:10;:29::i;:91::-;-1:-1:-1;;;;;2772:13:6;;;;;;:5;:13;;;;;:19;;;2622:109;;-1:-1:-1;2772:32:6;;2622:109;2772:23;:32::i;:::-;-1:-1:-1;;;;;2750:13:6;;;;;;:5;:13;;;;;:19;;;:54;;;;2853:27;;;:74;;2907:1;2853:31;:74::i;:::-;-1:-1:-1;;;;;2823:13:6;;;;;;:5;:13;;;;;;;;;:27;;:104;;;;2951:37;160:25:7;;;2968:10:6;;2951:37;;133:18:7;2951:37:6;;;;;;;2603:401;2577:427;2515:500;2482:533;3031:20;;3027:174;;3091:15;3073;;;;:33;;;;3134:10;;:17;;:14;:17::i;:::-;3121:10;:30;3171:18;;3178:10;711:51:7;;3171:18:6;;699:2:7;684:18;3171::6;;;;;;;3027:174;3217:13;;;;-1:-1:-1;;;;;3217:13:6;:27;3213:702;;3298:305;;;;;;;;;3261:4;;3298:305;3328:111;3365:51;365:4;3365:29;:6;465:3;3365:10;:29::i;:51::-;3328:6;;:10;:111::i;:::-;3298:305;;;;3462:1;3298:305;;;;3486:15;3298:305;;;;565:8;3524:15;:32;;;;:::i;:::-;3298:305;;3579:5;3298:305;;;;;;;3261:357;;3298:305;3261:357;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3261:357:6;;;;;;;;;;3213:702;;;3651:4;:13;;3688:200;;;;;;;;3718:6;3688:200;;;;3747:1;3688:200;;;;3771:15;3688:200;;;;565:8;3809:15;:32;;;;:::i;:::-;3688:200;;3864:5;3688:200;;;;;;;3651:252;;3688:200;3651:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3651:252:6;;;;;;;;;;3213:702;3941:11;;:23;;3957:6;3941:15;:23::i;:::-;3927:11;:37;3995:17;;:24;;4017:1;3995:21;:24::i;:::-;3975:17;:44;4037:30;;160:25:7;;;4048:10:6;;4037:30;;148:2:7;133:18;4037:30:6;;;;;;;1798:2277;1742:2333;;:::o;14349:539::-;-1:-1:-1;;;;;14615:18:6;;14475:7;14615:18;;;:5;:18;;;;;14668:20;;14475:7;;;;;;;;14615:18;;14682:5;;14668:20;;;;;;:::i;:::-;;;;;;;;;;;:27;;;14710:4;:13;;14724:5;14710:20;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;14755:4;:13;;14769:5;14755:20;;;;;;;;:::i;:::-;;;;;;;;;;;:30;;;14800:4;:13;;14814:5;14800:20;;;;;;;;:::i;:::-;;;;;;;;;;;:28;;;14843:4;:13;;14857:5;14843:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:26;;;14646:234;;;;-1:-1:-1;14646:234:6;;-1:-1:-1;14646:234:6;-1:-1:-1;14843:26:6;;;;;-1:-1:-1;14349:539:6;-1:-1:-1;;;;14349:539:6:o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;5906:2:7;1998:73:0::1;::::0;::::1;5888:21:7::0;5945:2;5925:18;;;5918:30;5984:34;5964:18;;;5957:62;-1:-1:-1;;;6035:18:7;;;6028:36;6081:19;;1998:73:0::1;5704:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;7526:3335:6:-;1243:1;1212:28;1229:10;1212:16;:28::i;:::-;:32;1204:55;;;;-1:-1:-1;;;1204:55:6;;6313:2:7;1204:55:6;;;6295:21:7;6352:2;6332:18;;;6325:30;-1:-1:-1;;;6371:18:7;;;6364:40;6421:18;;1204:55:6;6111:334:7;1204:55:6;7601:10:::1;7575:17;7595::::0;;;:5:::1;:17;::::0;;;;;7672:28:::1;::::0;:16:::1;:28::i;:::-;7651:49;;7752:19;7782:17:::0;7812:4:::1;:13;;7845:180;;;;;;;;7871:10;7845:180;;;;7900:1;7845:180;;;;7920:15;7845:180;;;;565:8;7954:15;:32;;;;:::i;:::-;7845:180:::0;;8005:5:::1;7845:180;::::0;;::::1;::::0;;;7812:224;;7845:180;7812:224;;::::1;::::0;;;;;;;;;;::::1;::::0;;::::1;;::::0;;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;7812:224:6::1;::::0;::::1;;::::0;;;::::1;::::0;;8049:2514:::1;8073:20:::0;;8069:24;::::1;8049:2514;;;8119:4;:13;;8133:1;8119:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:22:::1;:16;::::0;;::::1;;:22;::::0;::::1;;8115:2437;;8202:15;8175:4;:13;;8189:1;8175:16;;;;;;;;:::i;:::-;;;;;;;;;;;:24;;;:42;8171:2147;;;8275:4;:15;;;8246:4;:13;;8260:1;8246:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;8242:890;;;8331:405;8733:2;8331:367;8695:2;8331:329;8582:47;8602:4;:13;;8616:1;8602:16;;;;;;;;:::i;8582:47::-;8362:124;365:4;8362:38;412:2;8362:4;:13;;8376:1;8362:16;;;;;;;;:::i;8331:405::-;8319:417;;8171:2147;;8242:890;8805:303;511:6;8805:224;8992:36;9012:4;:15;;;8992;:19;;:36;;;;:::i;:::-;8836:124;365:4;8836:38;412:2;8836:4;:13;;8850:1;8836:16;;;;;;;;:::i;8171:2147::-;9213:4;:15;;;9184:4;:13;;9198:1;9184:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;:44;9180:1119;;;9269:486;9752:2;9269:448;9714:2;9269:410;9520:128;9587:4;:13;;9601:1;9587:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;9520:4;:13;;9534:1;9520:16;;;;;;;;:::i;9269:486::-;9257:498;;9807:4;9782;:13;;9796:1;9782:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22;;:29:::0;;-1:-1:-1;;9782:29:6::1;::::0;::::1;;::::0;;;::::1;::::0;;9180:1119:::1;;;9880:339;10216:2;9880:301;10178:2;9880:263;10097:45;10126:4;:15;;;10097:4;:13;;10111:1;10097:16;;;;;;;;:::i;9880:339::-;9868:351;;10271:4;10246;:13;;10260:1;10246:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22;;:29:::0;;-1:-1:-1;;10246:29:6::1;::::0;::::1;;::::0;;;::::1;::::0;;9180:1119:::1;10367:81;10420:9;10367:4;:13;;10381:1;10367:16;;;;;;;;:::i;:81::-;10338:4;:13;;10352:1;10338:16;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;:26:::1;:16;::::0;;::::1;;:26;:110:::0;10510:26:::1;:11:::0;10526:9;10510:15:::1;:26::i;:::-;10496:40;;8115:2437;8095:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8049:2514;;;-1:-1:-1::0;10593:15:6::1;10575;::::0;::::1;:33:::0;10635:11:::1;::::0;:27:::1;::::0;10651:10;10635:15:::1;:27::i;:::-;10621:11;:41:::0;10693:17:::1;::::0;:24:::1;::::0;10715:1:::1;10693:21;:24::i;:::-;10673:17;:44:::0;10745:14:::1;::::0;:31:::1;::::0;10764:11;10745:18:::1;:31::i;:::-;10728:14;:48:::0;10815:38:::1;::::0;160:25:7;;;10830:10:6::1;::::0;10815:38:::1;::::0;148:2:7;133:18;10815:38:6::1;;;;;;;7564:3297;;;;7526:3335::o:0;15516:361::-;-1:-1:-1;;;;;15661:18:6;;15616:7;15661:18;;;:5;:18;;;;;15616:7;;15719:125;15743:20;;15739:24;;15719:125;;;15794:38;15805:4;:13;;15819:1;15805:16;;;;;;;;:::i;:::-;;;;;;;;;;;:26;;;15794:6;:10;;:38;;;;:::i;:::-;15785:47;-1:-1:-1;15765:3:6;;;;:::i;:::-;;;;15719:125;;3122:96:5;3180:7;3206:5;3210:1;3206;:5;:::i;:::-;3199:12;3122:96;-1:-1:-1;;;3122:96:5:o;3465:::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:173:7:-;264:20;;-1:-1:-1;;;;;313:31:7;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;773:180::-;832:6;885:2;873:9;864:7;860:23;856:32;853:52;;;901:1;898;891:12;853:52;-1:-1:-1;924:23:7;;773:180;-1:-1:-1;773:180:7:o;958:254::-;1026:6;1034;1087:2;1075:9;1066:7;1062:23;1058:32;1055:52;;;1103:1;1100;1093:12;1055:52;1126:29;1145:9;1126:29;:::i;:::-;1116:39;1202:2;1187:18;;;;1174:32;;-1:-1:-1;;;958:254:7:o;1695:127::-;1756:10;1751:3;1747:20;1744:1;1737:31;1787:4;1784:1;1777:15;1811:4;1808:1;1801:15;1827:127;1888:10;1883:3;1879:20;1876:1;1869:31;1919:4;1916:1;1909:15;1943:4;1940:1;1933:15;1959:135;1998:3;-1:-1:-1;;2019:17:7;;2016:43;;;2039:18;;:::i;:::-;-1:-1:-1;2086:1:7;2075:13;;1959:135::o;2099:356::-;2301:2;2283:21;;;2320:18;;;2313:30;2379:34;2374:2;2359:18;;2352:62;2446:2;2431:18;;2099:356::o;2810:184::-;2880:6;2933:2;2921:9;2912:7;2908:23;2904:32;2901:52;;;2949:1;2946;2939:12;2901:52;-1:-1:-1;2972:16:7;;2810:184;-1:-1:-1;2810:184:7:o;3278:277::-;3345:6;3398:2;3386:9;3377:7;3373:23;3369:32;3366:52;;;3414:1;3411;3404:12;3366:52;3446:9;3440:16;3499:5;3492:13;3485:21;3478:5;3475:32;3465:60;;3521:1;3518;3511:12;5571:128;5611:3;5642:1;5638:6;5635:1;5632:13;5629:39;;;5648:18;;:::i;:::-;-1:-1:-1;5684:9:7;;5571:128::o;6450:125::-;6490:4;6518:1;6515;6512:8;6509:34;;;6523:18;;:::i;:::-;-1:-1:-1;6560:9:7;;6450:125::o;6580:168::-;6620:7;6686:1;6682;6678:6;6674:14;6671:1;6668:21;6663:1;6656:9;6649:17;6645:45;6642:71;;;6693:18;;:::i;:::-;-1:-1:-1;6733:9:7;;6580:168::o;6753:217::-;6793:1;6819;6809:132;;6863:10;6858:3;6854:20;6851:1;6844:31;6898:4;6895:1;6888:15;6926:4;6923:1;6916:15;6809:132;-1:-1:-1;6955:9:7;;6753:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1340000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DAILY_ROI()": "229",
								"PERCENTS_DIVIDER()": "230",
								"REFERRAL_PERCENTS()": "252",
								"STAKING_PERIOD()": "208",
								"TIME_STEP()": "318",
								"claim()": "infinite",
								"compound()": "infinite",
								"getUserAmountOfDeposits(address)": "2616",
								"getUserAvailable(address)": "infinite",
								"getUserCheckpoint(address)": "2621",
								"getUserDepositInfo(address,uint256)": "22286",
								"getUserDividends(address)": "infinite",
								"getUserReferralBonus(address)": "2576",
								"getUserReferralCount(address)": "2577",
								"getUserReferrer(address)": "2619",
								"getUserTotalDeposits(address)": "infinite",
								"getUserTotalWithdrawn(address)": "infinite",
								"minimumStakeValue()": "2396",
								"owner()": "2399",
								"renounceOwnership()": "28203",
								"setMinimumStakeValue(uint256)": "24509",
								"stake(address,uint256)": "infinite",
								"totalDepositCount()": "2351",
								"totalStaked()": "2330",
								"totalUsers()": "2373",
								"totalWithdrawn()": "2374",
								"transferOwnership(address)": "28375"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 774,
									"end": 786,
									"name": "PUSH",
									"source": 6,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 739,
									"end": 786,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 739,
									"end": 786,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1639,
									"end": 1734,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1715,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1715,
									"end": 1726,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 97,
									"end": 103,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 152,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 138,
									"end": 147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 129,
									"end": 136,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 125,
									"end": 148,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 121,
									"end": 153,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 166,
									"end": 167,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 163,
									"end": 164,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 156,
									"end": 168,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 118,
									"end": 170,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 118,
									"end": 170,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 192,
									"end": 208,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 192,
									"end": 208,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 237,
									"end": 268,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 237,
									"end": 268,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 227,
									"end": 269,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 227,
									"end": 269,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 217,
									"end": 287,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 283,
									"end": 284,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 280,
									"end": 281,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 273,
									"end": 285,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 217,
									"end": 287,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 217,
									"end": 287,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 306,
									"end": 311,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 317,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 16081,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209d1ae62a712be378c13cbfb029be6450c0c633d22938646ac72ef68a8aab0b1864736f6c634300080a0033",
									".code": [
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "817B1CD2"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "C8A22EB4"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "E85ABE09"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "E85ABE09"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "F69E2046"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "FB4CB32B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "C8A22EB4"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "D6343867"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "D7FFCA91"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "AB8A3C6B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "AB8A3C6B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "ADC9772E"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "BFF1F9E1"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "C0806B03"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "817B1CD2"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "A8AEB6C2"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "36144C9A"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "4BE4D790"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "4BE4D790"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "4E71D92D"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "7E3ABEEA"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "36144C9A"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "44038F90"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "4B319713"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "104DB1B"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "1C234A8"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "40A772E"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "153AB9DF"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "18E1FBFC"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "32BC298C"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 241,
											"end": 16081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 565,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 524,
											"end": 573,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 524,
											"end": 573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 524,
											"end": 573,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 322,
											"end": 369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 322,
											"end": 369,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 739,
											"end": 786,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 739,
											"end": 786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 739,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 739,
											"end": 786,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 739,
											"end": 786,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 739,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 739,
											"end": 786,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 475,
											"end": 517,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 475,
											"end": 517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 475,
											"end": 517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 475,
											"end": 517,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 475,
											"end": 517,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13845,
											"end": 13852,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13882,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13895,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13904,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13877,
											"end": 13904,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13904,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13904,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13877,
											"end": 13904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 729,
											"end": 761,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 729,
											"end": 761,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13751,
											"end": 13912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 565,
											"end": 768,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 468,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 421,
											"end": 468,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 421,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 421,
											"end": 468,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 421,
											"end": 468,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 664,
											"end": 693,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 664,
											"end": 693,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 631,
											"end": 657,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 631,
											"end": 657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 631,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 631,
											"end": 657,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 631,
											"end": 657,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 631,
											"end": 657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 631,
											"end": 657,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14998,
											"end": 15005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15035,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15030,
											"end": 15064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14896,
											"end": 15072,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 376,
											"end": 414,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 376,
											"end": 414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 376,
											"end": 414,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 376,
											"end": 414,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 599,
											"end": 624,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 599,
											"end": 624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 599,
											"end": 624,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1470,
											"end": 1495,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1526,
											"end": 1528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1538,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1538,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1538,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1504,
											"end": 1538,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1547,
											"end": 1581,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1590,
											"end": 1624,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1682,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1683,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1655,
											"end": 1658,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1640,
											"end": 1659,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1633,
											"end": 1684,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1457,
											"end": 1460,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 1442,
											"end": 1461,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1217,
											"end": 1690,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13671,
											"end": 13678,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13708,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13735,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 13703,
											"end": 13735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13703,
											"end": 13735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13572,
											"end": 13743,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 700,
											"end": 732,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 700,
											"end": 732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 700,
											"end": 732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 700,
											"end": 732,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 700,
											"end": 732,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 700,
											"end": 732,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 700,
											"end": 732,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14053,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14066,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14077,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14048,
											"end": 14077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14077,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14048,
											"end": 14077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13920,
											"end": 14085,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13500,
											"end": 13507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13537,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13401,
											"end": 13564,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11014,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11009,
											"end": 11027,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11127,
											"end": 11147,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11127,
											"end": 11147,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11123,
											"end": 11147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11123,
											"end": 11147,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11187,
											"end": 11188,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11195,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11189,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11195,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11173,
											"end": 11195,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11173,
											"end": 11195,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11169,
											"end": 13341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 11169,
											"end": 13341,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11256,
											"end": 11271,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11233,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11242,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11242,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11243,
											"end": 11244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11253,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11229,
											"end": 11253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11253,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11329,
											"end": 11333,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11329,
											"end": 11344,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11329,
											"end": 11344,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11329,
											"end": 11344,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11313,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11314,
											"end": 11315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11326,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11300,
											"end": 11326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11326,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11300,
											"end": 11344,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11296,
											"end": 12187,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11296,
											"end": 12187,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 11296,
											"end": 12187,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11790,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 11787,
											"end": 11789,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 11385,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11749,
											"end": 11751,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 11385,
											"end": 11714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 11656,
											"end": 11660,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11656,
											"end": 11669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11672,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11682,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11656,
											"end": 11682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11656,
											"end": 11682,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11651,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 11636,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 11416,
											"end": 11454,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 11416,
											"end": 11420,
											"name": "DUP14",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11432,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11439,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11439,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11416,
											"end": 11454,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11454,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 11416,
											"end": 11454,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11416,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 11416,
											"end": 11540,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11416,
											"end": 11540,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 11416,
											"end": 11540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11385,
											"end": 11601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 11385,
											"end": 11714,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11385,
											"end": 11790,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 11385,
											"end": 11790,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11790,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11373,
											"end": 11790,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11296,
											"end": 12187,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 11296,
											"end": 12187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11859,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 12130,
											"end": 12132,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 11859,
											"end": 12091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12088,
											"end": 12090,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 11859,
											"end": 12083,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 12066,
											"end": 12070,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12066,
											"end": 12081,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12061,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 12046,
											"end": 12065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12046,
											"end": 12082,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 11225,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12268,
											"end": 12272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12268,
											"end": 12283,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12268,
											"end": 12283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12268,
											"end": 12283,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12243,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12253,
											"end": 12254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12265,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12239,
											"end": 12265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12239,
											"end": 12283,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12324,
											"end": 12810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 12807,
											"end": 12809,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 12324,
											"end": 12772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12769,
											"end": 12771,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 12324,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 12642,
											"end": 12646,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12655,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12656,
											"end": 12657,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12658,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12668,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12642,
											"end": 12668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12642,
											"end": 12668,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12579,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12599,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 12575,
											"end": 12599,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12599,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 12575,
											"end": 12603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12575,
											"end": 12703,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12879,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 13215,
											"end": 13217,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 12879,
											"end": 13180,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 13177,
											"end": 13179,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 12879,
											"end": 13142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 13096,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 13125,
											"end": 13129,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13140,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13125,
											"end": 13140,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13125,
											"end": 13140,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13100,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13096,
											"end": 13109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13110,
											"end": 13111,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 13096,
											"end": 13112,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 12879,
											"end": 13218,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12879,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12867,
											"end": 13218,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12867,
											"end": 13218,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 12235,
											"end": 13242,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13296,
											"end": 13310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13324,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13279,
											"end": 13325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13279,
											"end": 13325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11169,
											"end": 13341,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 11169,
											"end": 13341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 11103,
											"end": 13352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13371,
											"end": 13385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13371,
											"end": 13385,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10869,
											"end": 13393,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14188,
											"end": 14195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14233,
											"end": 14333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 14289,
											"end": 14318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 14306,
											"end": 14317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14289,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 14289,
											"end": 14318,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14289,
											"end": 14318,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 14289,
											"end": 14318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13500,
											"end": 13507,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13537,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14233,
											"end": 14270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14233,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 14233,
											"end": 14333,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14233,
											"end": 14333,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 14233,
											"end": 14333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14213,
											"end": 14333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14093,
											"end": 14341,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16049,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 16032,
											"end": 16070,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 15921,
											"end": 16078,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4144,
											"end": 4154,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4138,
											"end": 4155,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4135,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4272,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4272,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4302,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4311,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4311,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4314,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4298,
											"end": 4320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4294,
											"end": 6731,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4381,
											"end": 4396,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4358,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4370,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4378,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4354,
											"end": 4378,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4354,
											"end": 4396,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4454,
											"end": 4469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4429,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4439,
											"end": 4440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4451,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4425,
											"end": 4451,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4451,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4425,
											"end": 4469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 5311,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4421,
											"end": 5311,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4912,
											"end": 4914,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 4510,
											"end": 4877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4874,
											"end": 4876,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 4510,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 4761,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 4781,
											"end": 4785,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 4796,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4781,
											"end": 4797,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4510,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 4510,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4498,
											"end": 4915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 5311,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4421,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4984,
											"end": 5287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 4984,
											"end": 5208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5191,
											"end": 5195,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5206,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5191,
											"end": 5206,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5191,
											"end": 5206,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5186,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 5171,
											"end": 5190,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 5171,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5015,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5029,
											"end": 5030,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5015,
											"end": 5031,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 4350,
											"end": 6497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5396,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5407,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5392,
											"end": 5407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5392,
											"end": 5407,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5367,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5376,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5379,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5389,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5407,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 5448,
											"end": 5896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5893,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 5448,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5699,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 5766,
											"end": 5770,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5781,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5766,
											"end": 5782,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5448,
											"end": 5934,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 5448,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5436,
											"end": 5934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5986,
											"end": 5990,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5961,
											"end": 5965,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5974,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5975,
											"end": 5976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5961,
											"end": 5983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5961,
											"end": 5990,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6395,
											"end": 6397,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 6059,
											"end": 6360,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6357,
											"end": 6359,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 6059,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6276,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6305,
											"end": 6309,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6280,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6276,
											"end": 6292,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6059,
											"end": 6398,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6059,
											"end": 6398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6398,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6047,
											"end": 6398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6454,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6425,
											"end": 6429,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6438,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6439,
											"end": 6440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6441,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6447,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6425,
											"end": 6447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6425,
											"end": 6454,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5359,
											"end": 6478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6599,
											"end": 6608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6560,
											"end": 6561,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6562,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6572,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6546,
											"end": 6572,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6572,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6576,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6546,
											"end": 6576,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6546,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6521,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6530,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "tag",
											"source": 6,
											"value": "303"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6543,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6543,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6517,
											"end": 6627,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6689,
											"end": 6700,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6705,
											"end": 6714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 6715,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 6715,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4294,
											"end": 6731,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 4294,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4274,
											"end": 4277,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4228,
											"end": 6742,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6799,
											"end": 6809,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6754,
											"end": 6775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13537,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13532,
											"end": 13556,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6825,
											"end": 6842,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6821,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6821,
											"end": 6981,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6873,
											"end": 6884,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6902,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6873,
											"end": 6888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 6873,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6932,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6928,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6918,
											"end": 6928,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6928,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6932,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6932,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6918,
											"end": 6932,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6965,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6947,
											"end": 6969,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6859,
											"end": 6903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6821,
											"end": 6981,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 6821,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7001,
											"end": 7012,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7001,
											"end": 7016,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2665,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5573657220686173206E6F206469766964656E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2713,
											"end": 2764,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2781,
											"end": 2799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2460,
											"end": 2805,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 6993,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7102,
											"end": 7106,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7078,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7083,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7093,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7081,
											"end": 7093,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 7081,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7108,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7141,
											"end": 7152,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7138,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7123,
											"end": 7152,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7210,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7119,
											"end": 7210,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7183,
											"end": 7198,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7198,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7169,
											"end": 7198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7119,
											"end": 7210,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7119,
											"end": 7210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7255,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7237,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7222,
											"end": 7237,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7237,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7237,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7255,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7255,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7312,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3224,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3240,
											"end": 3258,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3267,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3267,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7292,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7301,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 7290,
											"end": 7301,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3146,
											"end": 3164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 7290,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3803,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3799,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3840,
											"end": 3874,
											"name": "PUSH",
											"source": 7,
											"value": "436C61696D206661696C65642064756520746F206661696C656420616D6F756E"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3820,
											"end": 3838,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3813,
											"end": 3875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A103A3930B739B332B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3891,
											"end": 3909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3884,
											"end": 3925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3942,
											"end": 3961,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3560,
											"end": 3967,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 7268,
											"end": 7397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7441,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7427,
											"end": 7441,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7446,
											"end": 7457,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7427,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 7427,
											"end": 7458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7410,
											"end": 7424,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7410,
											"end": 7458,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7486,
											"end": 7496,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7486,
											"end": 7496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "PUSH",
											"source": 6,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7476,
											"end": 7510,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 7518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 7518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 7518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 7518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4107,
											"end": 7518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 7518,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15229,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15224,
											"end": 15242,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15179,
											"end": 15186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15306,
											"end": 15326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15306,
											"end": 15326,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15302,
											"end": 15326,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15365,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15352,
											"end": 15365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15366,
											"end": 15367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15368,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 15352,
											"end": 15374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15348,
											"end": 15464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 15348,
											"end": 15464,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15413,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 15424,
											"end": 15428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15437,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15424,
											"end": 15437,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15438,
											"end": 15439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "tag",
											"source": 6,
											"value": "348"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15424,
											"end": 15447,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15413,
											"end": 15419,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15413,
											"end": 15419,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15413,
											"end": 15423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 15413,
											"end": 15448,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15413,
											"end": 15448,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 15413,
											"end": 15448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15348,
											"end": 15464,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 15348,
											"end": 15464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "tag",
											"source": 6,
											"value": "350"
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15328,
											"end": 15331,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 15282,
											"end": 15475,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15494,
											"end": 15500,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15080,
											"end": 15508,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1841,
											"end": 1858,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1841,
											"end": 1858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1831,
											"end": 1858,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4156,
											"end": 4177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4186,
											"end": 4216,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4252,
											"end": 4286,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E742069732062656C6F77206D696E696D756D207374616B65207661"
										},
										{
											"begin": 4232,
											"end": 4250,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4232,
											"end": 4250,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4232,
											"end": 4250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4225,
											"end": 4287,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "363AB297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4296,
											"end": 4330,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4347,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4347,
											"end": 4366,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3972,
											"end": 4372,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 1809,
											"end": 1922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1959,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1957,
											"end": 1959,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1980,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1957,
											"end": 1959,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1957,
											"end": 1969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1957,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 1991,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4579,
											"end": 4581,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4620,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4598,
											"end": 4616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4621,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4691,
											"name": "PUSH",
											"source": 7,
											"value": "4D757374206861766520656E6F7567682062616C616E636520746F207374616B"
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4637,
											"end": 4655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4692,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4708,
											"end": 4726,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4732,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 4749,
											"end": 4768,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4377,
											"end": 4774,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 1935,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2103,
											"end": 2113,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5019,
											"end": 5053,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2127,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5069,
											"end": 5087,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5105,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5148,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5114,
											"end": 5148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2102,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2087,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "tag",
											"source": 6,
											"value": "368"
										},
										{
											"begin": 2087,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5361,
											"end": 5363,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5364,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5400,
											"end": 5402,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 5398,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5439,
											"end": 5473,
											"name": "PUSH",
											"source": 7,
											"value": "5374616B65206661696C65642064756520746F206661696C656420616D6F756E"
										},
										{
											"begin": 5419,
											"end": 5437,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5419,
											"end": 5437,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5419,
											"end": 5437,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5412,
											"end": 5474,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A103A3930B739B332B917"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5483,
											"end": 5524,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5541,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5541,
											"end": 5560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 5159,
											"end": 5566,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "tag",
											"source": 6,
											"value": "369"
										},
										{
											"begin": 2065,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2247,
											"end": 2257,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2221,
											"end": 2238,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2246,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2241,
											"end": 2258,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2289,
											"end": 2302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2316,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2348,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2364,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2368,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2289,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2397,
											"end": 2407,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2385,
											"end": 2407,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2289,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2470,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 2271,
											"end": 2470,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2458,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2470,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 2271,
											"end": 2470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2499,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2513,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 2482,
											"end": 3015,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2547,
											"end": 2560,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2581,
											"end": 2601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 2577,
											"end": 3004,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2640,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2640,
											"end": 2669,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2640,
											"end": 2731,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2640,
											"end": 2731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2777,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2785,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2791,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2772,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 2772,
											"end": 2804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2731,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2772,
											"end": 2795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2772,
											"end": 2804,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2772,
											"end": 2804,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 2772,
											"end": 2804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2755,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2763,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2750,
											"end": 2804,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2880,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2853,
											"end": 2880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2880,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2853,
											"end": 2884,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 2853,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2836,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2850,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2823,
											"end": 2850,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2927,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2927,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2927,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2823,
											"end": 2927,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 2978,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "328838DDFC48AD5AE5531B1AD95DFB22B42FF1866853E474375FFEF2C63D8E50"
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2951,
											"end": 2988,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2603,
											"end": 3004,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2577,
											"end": 3004,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 2577,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 3015,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 2482,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3051,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3031,
											"end": 3051,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3027,
											"end": 3201,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3091,
											"end": 3106,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3073,
											"end": 3106,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3144,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3134,
											"end": 3144,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 3134,
											"end": 3151,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3121,
											"end": 3151,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3178,
											"end": 3188,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 711,
											"end": 762,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 711,
											"end": 762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "9FD565CD14C3C391679EB0CAD12A14DCF7534E9D3462BCB9B67A098A9BBBC24A"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3189,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3201,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3027,
											"end": 3201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3217,
											"end": 3230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3244,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 3365,
											"end": 3416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3365,
											"end": 3371,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3365,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3365,
											"end": 3394,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3416,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3365,
											"end": 3416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3334,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3328,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3328,
											"end": 3439,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3328,
											"end": 3439,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 3328,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3501,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 565,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 3524,
											"end": 3539,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3524,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3298,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3618,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3747,
											"end": 3748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 565,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 3809,
											"end": 3824,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3688,
											"end": 3888,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3903,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 3213,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3952,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3941,
											"end": 3952,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3963,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 3941,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3927,
											"end": 3938,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3927,
											"end": 3964,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3995,
											"end": 4012,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4017,
											"end": 4018,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3995,
											"end": 4016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "tag",
											"source": 6,
											"value": "396"
										},
										{
											"begin": 3995,
											"end": 4019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3975,
											"end": 3992,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3975,
											"end": 4019,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4048,
											"end": 4058,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "2CB77763BC1E8490C1A904905C4D74B4269919ACA114464F4BB4D911E60DE364"
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4067,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 4075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1742,
											"end": 4075,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14620,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14475,
											"end": 14482,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14682,
											"end": 14687,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 14682,
											"end": 14687,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14688,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14668,
											"end": 14695,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14714,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14723,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14724,
											"end": 14729,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14740,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 14710,
											"end": 14740,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14710,
											"end": 14740,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14769,
											"end": 14774,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14775,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14804,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14800,
											"end": 14813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14814,
											"end": 14819,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14820,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14828,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 14800,
											"end": 14828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14800,
											"end": 14828,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14847,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14856,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14857,
											"end": 14862,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP13",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP12",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14646,
											"end": 14880,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 14843,
											"end": 14869,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14349,
											"end": 14888,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "420"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5906,
											"end": 5908,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5888,
											"end": 5909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5947,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5925,
											"end": 5943,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5925,
											"end": 5943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5925,
											"end": 5943,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5918,
											"end": 5948,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5984,
											"end": 6018,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5964,
											"end": 5982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 6019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6035,
											"end": 6053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6028,
											"end": 6064,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6081,
											"end": 6100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 5704,
											"end": 6106,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "426"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1243,
											"end": 1244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 1229,
											"end": 1239,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 1212,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6313,
											"end": 6315,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6295,
											"end": 6316,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA102437B63232B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6364,
											"end": 6404,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6421,
											"end": 6439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6111,
											"end": 6445,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7601,
											"end": 7611,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7575,
											"end": 7592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7600,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 7672,
											"end": 7700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7672,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 7672,
											"end": 7700,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7672,
											"end": 7700,
											"name": "tag",
											"source": 6,
											"value": "433"
										},
										{
											"begin": 7672,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7700,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7651,
											"end": 7700,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7752,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7799,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 7816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 7825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7825,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7871,
											"end": 7881,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7920,
											"end": 7935,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 565,
											"end": 573,
											"name": "PUSH",
											"source": 6,
											"value": "ED4E00"
										},
										{
											"begin": 7954,
											"end": 7969,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 7954,
											"end": 7986,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8005,
											"end": 8010,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 8025,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 8036,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "tag",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8093,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8069,
											"end": 8093,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8133,
											"end": 8134,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "tag",
											"source": 6,
											"value": "440"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8135,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8119,
											"end": 8141,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8115,
											"end": 10552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 8115,
											"end": 10552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8217,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "tag",
											"source": 6,
											"value": "444"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8191,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8199,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8175,
											"end": 8199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8199,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8175,
											"end": 8217,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8275,
											"end": 8290,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8250,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8260,
											"end": 8261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8246,
											"end": 8272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8272,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8246,
											"end": 8290,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 9132,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 9132,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 8242,
											"end": 9132,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8331,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8331,
											"end": 8698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8695,
											"end": 8697,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 8331,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8602,
											"end": 8606,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8602,
											"end": 8615,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8616,
											"end": 8617,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8602,
											"end": 8618,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 8582,
											"end": 8629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 8362,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 8362,
											"end": 8366,
											"name": "DUP15",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8362,
											"end": 8375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8362,
											"end": 8378,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8331,
											"end": 8736,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 8331,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8736,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8319,
											"end": 8736,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8242,
											"end": 9132,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 8242,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8805,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 511,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 8805,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 9012,
											"end": 9016,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9027,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9007,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 8992,
											"end": 9028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 365,
											"end": 369,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 8836,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 412,
											"end": 414,
											"name": "PUSH",
											"source": 6,
											"value": "F"
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP13",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8836,
											"end": 8849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8836,
											"end": 8852,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 8171,
											"end": 10318,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9228,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9213,
											"end": 9228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9228,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9188,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9200,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9210,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9184,
											"end": 9210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9210,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9184,
											"end": 9228,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9269,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 9752,
											"end": 9754,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9269,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9714,
											"end": 9716,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9269,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9520,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9600,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9601,
											"end": 9602,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "tag",
											"source": 6,
											"value": "482"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9534,
											"end": 9535,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 9520,
											"end": 9536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9269,
											"end": 9755,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 9269,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9257,
											"end": 9755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9807,
											"end": 9811,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9782,
											"end": 9786,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9804,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9782,
											"end": 9804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9782,
											"end": 9811,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "tag",
											"source": 6,
											"value": "476"
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9880,
											"end": 10219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 10216,
											"end": 10218,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9880,
											"end": 10181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10178,
											"end": 10180,
											"name": "PUSH",
											"source": 6,
											"value": "3C"
										},
										{
											"begin": 9880,
											"end": 10143,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10097,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 10126,
											"end": 10130,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 10126,
											"end": 10141,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10126,
											"end": 10141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10126,
											"end": 10141,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10101,
											"name": "DUP12",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10110,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10112,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10097,
											"end": 10113,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9880,
											"end": 10219,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 9880,
											"end": 10219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9868,
											"end": 10219,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9868,
											"end": 10219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10271,
											"end": 10275,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10246,
											"end": 10250,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10260,
											"end": 10261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10268,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10246,
											"end": 10268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10246,
											"end": 10275,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 9180,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10371,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10380,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10367,
											"end": 10380,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10381,
											"end": 10382,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10367,
											"end": 10383,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10367,
											"end": 10448,
											"name": "tag",
											"source": 6,
											"value": "511"
										},
										{
											"begin": 10367,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10342,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10351,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "tag",
											"source": 6,
											"value": "516"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10364,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10354,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10338,
											"end": 10448,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 10510,
											"end": 10521,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "tag",
											"source": 6,
											"value": "518"
										},
										{
											"begin": 10510,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10536,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8115,
											"end": 10552,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 8115,
											"end": 10552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "tag",
											"source": 6,
											"value": "519"
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8095,
											"end": 8098,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "436"
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 8049,
											"end": 10563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10593,
											"end": 10608,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10575,
											"end": 10590,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10575,
											"end": 10608,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10646,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10635,
											"end": 10646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 10635,
											"end": 10662,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10651,
											"end": 10661,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10635,
											"end": 10650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10635,
											"end": 10662,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10635,
											"end": 10662,
											"name": "tag",
											"source": 6,
											"value": "520"
										},
										{
											"begin": 10635,
											"end": 10662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10621,
											"end": 10632,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 10621,
											"end": 10662,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10693,
											"end": 10710,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10693,
											"end": 10717,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 10693,
											"end": 10717,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10693,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10693,
											"end": 10717,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10693,
											"end": 10717,
											"name": "tag",
											"source": 6,
											"value": "521"
										},
										{
											"begin": 10693,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10673,
											"end": 10717,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10759,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10745,
											"end": 10759,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 10745,
											"end": 10776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10764,
											"end": 10775,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10745,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 10745,
											"end": 10776,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10745,
											"end": 10776,
											"name": "tag",
											"source": 6,
											"value": "522"
										},
										{
											"begin": 10745,
											"end": 10776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10728,
											"end": 10742,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10728,
											"end": 10776,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10840,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10830,
											"end": 10840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "5D511C2070E5A2DBCC6FBFBB3FD6704A11AB5FA74B793B81AACECE2C7CC29405"
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10815,
											"end": 10853,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 10861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 10861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 10861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7564,
											"end": 10861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7526,
											"end": 10861,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 15516,
											"end": 15877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15666,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15661,
											"end": 15679,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15616,
											"end": 15623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "tag",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15743,
											"end": 15763,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15739,
											"end": 15763,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15739,
											"end": 15763,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 15805,
											"end": 15809,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15819,
											"end": 15820,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "tag",
											"source": 6,
											"value": "530"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15821,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15831,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 15805,
											"end": 15831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15805,
											"end": 15831,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15800,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 15794,
											"end": 15804,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "tag",
											"source": 6,
											"value": "528"
										},
										{
											"begin": 15794,
											"end": 15832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15785,
											"end": 15832,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "tag",
											"source": 6,
											"value": "532"
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15765,
											"end": 15768,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "525"
										},
										{
											"begin": 15719,
											"end": 15844,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "535"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "538"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "541"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "534"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "390"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 264,
											"end": 284,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 313,
											"end": 344,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 313,
											"end": 344,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 303,
											"end": 345,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 359,
											"end": 360,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 349,
											"end": 361,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 293,
											"end": 363,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 293,
											"end": 363,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 196,
											"end": 369,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 374,
											"end": 560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 433,
											"end": 439,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 486,
											"end": 488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 474,
											"end": 483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 465,
											"end": 472,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 461,
											"end": 484,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 457,
											"end": 489,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 502,
											"end": 503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 499,
											"end": 500,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 492,
											"end": 504,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 454,
											"end": 506,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 454,
											"end": 506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 544,
											"end": 553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 525,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 525,
											"end": 554,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 773,
											"end": 953,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 773,
											"end": 953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 832,
											"end": 838,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 887,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 882,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 864,
											"end": 871,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 860,
											"end": 883,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 856,
											"end": 888,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 853,
											"end": 905,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 853,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 853,
											"end": 905,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 901,
											"end": 902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 891,
											"end": 903,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 853,
											"end": 905,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 853,
											"end": 905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 773,
											"end": 953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 773,
											"end": 953,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1032,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1089,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1084,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1066,
											"end": 1073,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1085,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1058,
											"end": 1090,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1103,
											"end": 1104,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1093,
											"end": 1105,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 1055,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 1145,
											"end": 1154,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1126,
											"end": 1155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 1126,
											"end": 1155,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1126,
											"end": 1155,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 1126,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1116,
											"end": 1155,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1202,
											"end": 1204,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1205,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1206,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 958,
											"end": 1212,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1695,
											"end": 1822,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 1695,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1766,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1751,
											"end": 1754,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1747,
											"end": 1767,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1791,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1784,
											"end": 1785,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1777,
											"end": 1792,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1811,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1801,
											"end": 1816,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1954,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 1827,
											"end": 1954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1898,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1883,
											"end": 1886,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1879,
											"end": 1899,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1900,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1909,
											"end": 1924,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1943,
											"end": 1947,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1948,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2094,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 1959,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2001,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2019,
											"end": 2036,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2016,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 2016,
											"end": 2059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "tag",
											"source": 7,
											"value": "566"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2086,
											"end": 2087,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2075,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2094,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2099,
											"end": 2455,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2099,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2301,
											"end": 2303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2283,
											"end": 2304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2338,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2320,
											"end": 2338,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2313,
											"end": 2343,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2413,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 2374,
											"end": 2376,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2352,
											"end": 2414,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2446,
											"end": 2448,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2449,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2455,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2810,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2810,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 2935,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2921,
											"end": 2930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 2919,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2908,
											"end": 2931,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2904,
											"end": 2936,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2951,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 2901,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2994,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 3555,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3278,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3345,
											"end": 3351,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3386,
											"end": 3395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3384,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3373,
											"end": 3396,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3415,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3411,
											"end": 3412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3404,
											"end": 3416,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 3366,
											"end": 3418,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3446,
											"end": 3455,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3499,
											"end": 3504,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3492,
											"end": 3505,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3485,
											"end": 3506,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3483,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3507,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 3465,
											"end": 3525,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5699,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 5571,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5642,
											"end": 5643,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5638,
											"end": 5644,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5632,
											"end": 5645,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 5629,
											"end": 5668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "tag",
											"source": 7,
											"value": "582"
										},
										{
											"begin": 5648,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5684,
											"end": 5693,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5699,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6450,
											"end": 6575,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 6450,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6515,
											"end": 6516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6520,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6543,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6543,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 6509,
											"end": 6543,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6569,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6560,
											"end": 6569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6450,
											"end": 6575,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6580,
											"end": 6748,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 6580,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6682,
											"end": 6683,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6688,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6672,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6668,
											"end": 6689,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6656,
											"end": 6665,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6666,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6645,
											"end": 6690,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6713,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6642,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 6642,
											"end": 6713,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 6693,
											"end": 6711,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6742,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 6742,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6748,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6753,
											"end": 6970,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 6753,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6793,
											"end": 6794,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 6809,
											"end": 6941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6863,
											"end": 6873,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 6858,
											"end": 6861,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 6854,
											"end": 6874,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6875,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6902,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6888,
											"end": 6903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6926,
											"end": 6930,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6931,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6809,
											"end": 6941,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 6809,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6955,
											"end": 6964,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6955,
											"end": 6964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6753,
											"end": 6970,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DAILY_ROI()": "ab8a3c6b",
							"PERCENTS_DIVIDER()": "01c234a8",
							"REFERRAL_PERCENTS()": "44038f90",
							"STAKING_PERIOD()": "0104db1b",
							"TIME_STEP()": "32bc298c",
							"claim()": "4e71d92d",
							"compound()": "f69e2046",
							"getUserAmountOfDeposits(address)": "a8aeb6c2",
							"getUserAvailable(address)": "153ab9df",
							"getUserCheckpoint(address)": "d7ffca91",
							"getUserDepositInfo(address,uint256)": "c0806b03",
							"getUserDividends(address)": "040a772e",
							"getUserReferralBonus(address)": "e85abe09",
							"getUserReferralCount(address)": "c8a22eb4",
							"getUserReferrer(address)": "36144c9a",
							"getUserTotalDeposits(address)": "7e3abeea",
							"getUserTotalWithdrawn(address)": "fb4cb32b",
							"minimumStakeValue()": "18e1fbfc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setMinimumStakeValue(uint256)": "4be4d790",
							"stake(address,uint256)": "adc9772e",
							"totalDepositCount()": "d6343867",
							"totalStaked()": "817b1cd2",
							"totalUsers()": "bff1f9e1",
							"totalWithdrawn()": "4b319713",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NewDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"Newbie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefBonus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reinvestAmount\",\"type\":\"uint256\"}],\"name\":\"onReinvestment\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAILY_ROI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"REFERRAL_PERCENTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"STAKING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TIME_STEP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAmountOfDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserCheckpoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUserDepositInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserDividends\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralBonus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferralCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserReferrer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalDeposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getUserTotalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumStakeValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumStakeValue\",\"type\":\"uint256\"}],\"name\":\"setMinimumStakeValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BCStaking.sol\":\"BillionCashStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838\",\"dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"BCStaking.sol\":{\"keccak256\":\"0x482f9efe86f85ef54b9fe1e1dc66c534eedfe4fbd8ae162e5e64abb038a3c4aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ad9e42a8333e769daff82d387e5ec318dd25141d12162b870e1cc525aa8e8a3\",\"dweb:/ipfs/QmYphrMPh2mqRbyxtQ5wvCwW9QpVHmAAjJJwnZ7wWTZGiw\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1155,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "BC",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)690"
							},
							{
								"astId": 1157,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "totalUsers",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1161,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "totalWithdrawn",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1163,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "totalDepositCount",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1170,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "minimumStakeValue",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1199,
								"contract": "BCStaking.sol:BillionCashStaking",
								"label": "users",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_struct(User)1194_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Deposit)1181_storage)dyn_storage": {
								"base": "t_struct(Deposit)1181_storage",
								"encoding": "dynamic_array",
								"label": "struct BillionCashStaking.Deposit[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)690": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(User)1194_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct BillionCashStaking.User)",
								"numberOfBytes": "32",
								"value": "t_struct(User)1194_storage"
							},
							"t_struct(Deposit)1181_storage": {
								"encoding": "inplace",
								"label": "struct BillionCashStaking.Deposit",
								"members": [
									{
										"astId": 1172,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1174,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "withdrawn",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1176,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "startTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1178,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "endTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1180,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "ended",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(User)1194_storage": {
								"encoding": "inplace",
								"label": "struct BillionCashStaking.User",
								"members": [
									{
										"astId": 1185,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "deposits",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_struct(Deposit)1181_storage)dyn_storage"
									},
									{
										"astId": 1187,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "checkpoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1189,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "bonus",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1191,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "referralCount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1193,
										"contract": "BCStaking.sol:BillionCashStaking",
										"label": "referrer",
										"offset": 0,
										"slot": "4",
										"type": "t_address"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 816,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								815
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 805,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 691,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 769,
							"src": "130:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 108,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 794,
							"src": "153:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 109,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 691,
							"sourceUnit": 816,
							"src": "195:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 111,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "1421:7:1"
									},
									"id": 112,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:1"
								},
								{
									"baseName": {
										"id": 113,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "1430:6:1"
									},
									"id": 114,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:1"
								},
								{
									"baseName": {
										"id": 115,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 793,
										"src": "1438:14:1"
									},
									"id": 116,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 110,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 690,
							"linearizedBaseContracts": [
								690,
								793,
								768,
								815
							],
							"name": "ERC20",
							"nameLocation": "1412:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 120,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1459:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 119,
										"keyType": {
											"id": 117,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 118,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 126,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1511:67:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 125,
										"keyType": {
											"id": 121,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 124,
											"keyType": {
												"id": 122,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 128,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1585:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1620:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 129,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 690,
									"src": "1646:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 131,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "2034:57:1",
										"statements": [
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2044:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "2052:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2044:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "2044:13:1"
											},
											{
												"expression": {
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 144,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "2067:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 145,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "2077:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2067:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "2067:17:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1675:298:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 149,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2004:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "1990:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 134,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1990:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2025:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "2011:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 136,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1989:44:1"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2034:0:1"
									},
									"scope": 690,
									"src": "1978:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										780
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2225:29:1",
										"statements": [
											{
												"expression": {
													"id": 156,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "2242:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 155,
												"id": 157,
												"nodeType": "Return",
												"src": "2235:12:1"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "2097:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2165:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2192:8:1"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2169:2:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2210:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:15:1"
									},
									"scope": 690,
									"src": "2156:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "2438:31:1",
										"statements": [
											{
												"expression": {
													"id": 166,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "2455:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 165,
												"id": 167,
												"nodeType": "Return",
												"src": "2448:14:1"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "2260:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2376:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2405:8:1"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:2:1"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "2423:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 163,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2423:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2422:15:1"
									},
									"scope": 690,
									"src": "2367:102:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										792
									],
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "3158:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3175:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 175,
												"id": 177,
												"nodeType": "Return",
												"src": "3168:9:1"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "2475:613:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3102:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 172,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3133:8:1"
									},
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3110:2:1"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "3151:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 173,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3150:7:1"
									},
									"scope": 690,
									"src": "3093:91:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										717
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "3314:36:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 128,
													"src": "3331:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 185,
												"id": 187,
												"nodeType": "Return",
												"src": "3324:19:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "3190:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3253:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 182,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3287:8:1"
									},
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3264:2:1"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "3305:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3305:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3304:9:1"
									},
									"scope": 690,
									"src": "3244:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										725
									],
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "3491:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 198,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "3508:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 200,
													"indexExpression": {
														"id": 199,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3518:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3508:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 201,
												"nodeType": "Return",
												"src": "3501:25:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "3356:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3417:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3464:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3435:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3427:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:17:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "3482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:9:1"
									},
									"scope": 690,
									"src": "3408:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										735
									],
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3814:104:1",
										"statements": [
											{
												"assignments": [
													215
												],
												"declarations": [
													{
														"constant": false,
														"id": 215,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3832:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "3824:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 214,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3824:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 218,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 216,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "3840:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3840:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3824:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "3872:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 221,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3879:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3883:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 219,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "3862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3862:28:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 213,
												"id": 226,
												"nodeType": "Return",
												"src": "3900:11:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "3539:185:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3738:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 210,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3790:8:1"
									},
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3755:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3747:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3747:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3767:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3759:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3759:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3746:28:1"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:6:1"
									},
									"scope": 690,
									"src": "3729:189:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										745
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "4074:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 239,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4091:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 241,
														"indexExpression": {
															"id": 240,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "4103:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4091:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 243,
													"indexExpression": {
														"id": 242,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "4110:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4091:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 238,
												"id": 244,
												"nodeType": "Return",
												"src": "4084:34:1"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "3924:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3985:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4047:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4003:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3995:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4018:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4010:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4010:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3994:32:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "4065:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4064:9:1"
									},
									"scope": 690,
									"src": "3976:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										755
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "4522:108:1",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4540:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 270,
														"src": "4532:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 257,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4532:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "4548:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4548:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4532:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 263,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 264,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "4586:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "4595:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 262,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4570:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4570:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "4570:32:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4619:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 256,
												"id": 269,
												"nodeType": "Return",
												"src": "4612:11:1"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "4131:297:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4442:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 253,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4498:8:1"
									},
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4458:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4450:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4475:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4467:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4467:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:33:1"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "4516:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4516:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4515:6:1"
									},
									"scope": 690,
									"src": "4433:197:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										767
									],
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "5325:153:1",
										"statements": [
											{
												"assignments": [
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5343:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 303,
														"src": "5335:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 284,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5335:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 288,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 286,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5353:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5353:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5335:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 290,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5391:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 291,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "5397:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 292,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5406:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 289,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "5375:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "5375:38:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 296,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5433:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "5439:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "5443:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 295,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "5423:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5423:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "5423:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5467:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 283,
												"id": 302,
												"nodeType": "Return",
												"src": "5460:11:1"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "4636:551:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5201:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5301:8:1"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5231:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5223:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5253:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5245:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5273:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5265:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5213:72:1"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "5319:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 281,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:6:1"
									},
									"scope": 690,
									"src": "5192:286:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "5967:140:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5985:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 332,
														"src": "5977:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5977:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "5993:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5993:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5977:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "6024:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6031:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "6050:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 324,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6057:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 322,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "6040:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6040:25:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 326,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6068:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6040:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6015:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6015:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 329,
												"nodeType": "ExpressionStatement",
												"src": "6015:64:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6096:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 331,
												"nodeType": "Return",
												"src": "6089:11:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "5484:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5882:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5908:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5900:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5925:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5917:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5917:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5899:37:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "5961:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5961:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5960:6:1"
									},
									"scope": 690,
									"src": "5873:234:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "6693:328:1",
										"statements": [
											{
												"assignments": [
													344
												],
												"declarations": [
													{
														"constant": false,
														"id": 344,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6711:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6703:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6703:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 345,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "6719:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6719:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6703:28:1"
											},
											{
												"assignments": [
													349
												],
												"declarations": [
													{
														"constant": false,
														"id": 349,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6749:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 373,
														"src": "6741:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"arguments": [
														{
															"id": 351,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "6778:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "6785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 350,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "6768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6768:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6741:52:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 356,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "6811:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 357,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "6831:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6811:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6848:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 355,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6803:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6803:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "ExpressionStatement",
												"src": "6803:85:1"
											},
											{
												"id": 370,
												"nodeType": "UncheckedBlock",
												"src": "6898:95:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 363,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "6931:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 364,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6938:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 365,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 349,
																		"src": "6947:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 366,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "6966:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6947:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 362,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "6922:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6922:60:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 369,
														"nodeType": "ExpressionStatement",
														"src": "6922:60:1"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7010:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 342,
												"id": 372,
												"nodeType": "Return",
												"src": "7003:11:1"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "6113:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6603:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6621:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6621:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6646:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6638:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6620:42:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "6687:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6687:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6686:6:1"
									},
									"scope": 690,
									"src": "6594:427:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "7592:543:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 385,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "7610:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7626:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7618:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 386,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7618:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7618:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7610:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7630:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7602:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7602:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "7602:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 400,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "7688:2:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7702:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7694:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 396,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7694:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7694:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7688:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7706:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7680:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7680:64:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "7680:64:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7776:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "7782:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "7786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "7755:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7755:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "7755:38:1"
											},
											{
												"assignments": [
													411
												],
												"declarations": [
													{
														"constant": false,
														"id": 411,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7812:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 450,
														"src": "7804:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 410,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 415,
												"initialValue": {
													"baseExpression": {
														"id": 412,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "7826:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 414,
													"indexExpression": {
														"id": 413,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "7836:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7826:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7804:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "7859:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 418,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "7874:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7859:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7882:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:1"
											},
											{
												"id": 431,
												"nodeType": "UncheckedBlock",
												"src": "7933:73:1",
												"statements": [
													{
														"expression": {
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 423,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "7957:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 425,
																"indexExpression": {
																	"id": 424,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "7967:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7957:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 426,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "7975:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 427,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "7989:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7975:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7957:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "7957:38:1"
													}
												]
											},
											{
												"expression": {
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 432,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8015:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8025:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8015:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 435,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "8032:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8015:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "8015:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 439,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8063:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8069:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8073:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 438,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8054:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8054:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 443,
												"nodeType": "EmitStatement",
												"src": "8049:31:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 445,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "8111:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 446,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "8117:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "8121:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 444,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8091:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 449,
												"nodeType": "ExpressionStatement",
												"src": "8091:37:1"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "7027:452:1",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7493:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7520:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7512:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7512:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7542:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7534:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7534:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7562:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "7554:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7554:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7502:72:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7592:0:1"
									},
									"scope": 690,
									"src": "7484:651:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "8476:324:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 460,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "8494:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8513:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8505:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 461,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8505:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8505:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8494:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8517:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 459,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8486:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8486:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "8486:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8591:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8583:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8583:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8583:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8595:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8604:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 469,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "8562:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "8562:49:1"
											},
											{
												"expression": {
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 478,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "8622:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 479,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8638:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8622:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "8622:22:1"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 482,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 120,
															"src": "8654:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 484,
														"indexExpression": {
															"id": 483,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8664:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8654:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 485,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "8676:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8654:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "8654:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8714:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8706:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 489,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8706:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8706:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8718:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8727:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 488,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "8697:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8697:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "8692:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8773:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8765:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 498,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8765:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8765:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 502,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "8777:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 503,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "8786:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 497,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "8745:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8745:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "8745:48:1"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "8141:265:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8420:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8434:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8426:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8451:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "8443:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8425:33:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8476:0:1"
									},
									"scope": 690,
									"src": "8411:389:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "9185:511:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "9203:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9222:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9214:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 517,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9214:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9214:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9203:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9226:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9195:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9195:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "9195:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9294:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9311:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9303:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9303:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9303:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9315:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "9273:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9273:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "9273:49:1"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9341:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "9333:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 539,
												"initialValue": {
													"baseExpression": {
														"id": 536,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "9358:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 538,
													"indexExpression": {
														"id": 537,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "9368:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9358:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9333:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 541,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 535,
																"src": "9394:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 542,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "9412:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9394:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9420:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 540,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9386:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9386:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "9386:71:1"
											},
											{
												"id": 555,
												"nodeType": "UncheckedBlock",
												"src": "9467:79:1",
												"statements": [
													{
														"expression": {
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "9491:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "9501:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9491:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 550,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 535,
																	"src": "9512:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 551,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 512,
																	"src": "9529:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9512:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9491:44:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 554,
														"nodeType": "ExpressionStatement",
														"src": "9491:44:1"
													}
												]
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 556,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "9555:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 557,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "9571:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9555:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "9555:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 561,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9602:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9619:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9611:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9611:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9611:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9623:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "9593:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9593:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "EmitStatement",
												"src": "9588:42:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 570,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "9661:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9678:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9670:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 571,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9670:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9670:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "9682:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 569,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "9641:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 577,
												"nodeType": "ExpressionStatement",
												"src": "9641:48:1"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "8806:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9129:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9143:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9135:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9160:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "9152:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9152:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9134:33:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9185:0:1"
									},
									"scope": 690,
									"src": "9120:576:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "10232:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10250:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10267:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 592,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10259:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 591,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10259:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10259:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10250:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 596,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10271:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 589,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10242:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "10242:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 600,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "10328:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10347:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10339:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 601,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10339:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10339:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10328:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10351:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10320:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10320:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "10320:68:1"
											},
											{
												"expression": {
													"id": 615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 609,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "10399:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 612,
															"indexExpression": {
																"id": 610,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "10411:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10399:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 613,
														"indexExpression": {
															"id": 611,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10418:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10399:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 614,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "10429:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10399:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 616,
												"nodeType": "ExpressionStatement",
												"src": "10399:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 618,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "10459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "10466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "10475:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "10450:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10450:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "EmitStatement",
												"src": "10445:37:1"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "9702:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10128:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10154:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10146:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10146:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10177:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10169:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10202:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "10194:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10194:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10136:78:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10232:0:1"
									},
									"scope": 690,
									"src": "10119:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10890:321:1",
										"statements": [
											{
												"assignments": [
													635
												],
												"declarations": [
													{
														"constant": false,
														"id": 635,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10908:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 666,
														"src": "10900:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10900:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 640,
												"initialValue": {
													"arguments": [
														{
															"id": 637,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "10937:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10944:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 636,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "10927:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10900:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 641,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "10966:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10991:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 643,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10991:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 642,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10986:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10986:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10986:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "10962:243:1",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "11005:200:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 649,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 635,
																			"src": "11027:16:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 650,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 631,
																			"src": "11047:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11027:26:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 652,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11055:31:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 648,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11019:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11019:68:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 654,
															"nodeType": "ExpressionStatement",
															"src": "11019:68:1"
														},
														{
															"id": 663,
															"nodeType": "UncheckedBlock",
															"src": "11101:94:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 656,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 627,
																				"src": "11138:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 657,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 629,
																				"src": "11145:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 658,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 635,
																					"src": "11154:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 659,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 631,
																					"src": "11173:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11154:25:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 655,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 624,
																			"src": "11129:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11129:51:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 662,
																	"nodeType": "ExpressionStatement",
																	"src": "11129:51:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "10495:270:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10779:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10812:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10804:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10804:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10835:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10827:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10860:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10852:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10852:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10794:78:1"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10890:0:1"
									},
									"scope": 690,
									"src": "10770:441:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "11914:2:1",
										"statements": []
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "11217:573:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11804:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11842:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11834:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11834:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11864:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11856:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11856:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11884:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "11876:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11824:72:1"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11914:0:1"
									},
									"scope": 690,
									"src": "11795:121:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "12622:2:1",
										"statements": []
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "11922:577:1",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12513:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12550:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12542:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12572:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12564:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12592:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "12584:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12532:72:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12622:0:1"
									},
									"scope": 690,
									"src": "12504:120:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 691,
							"src": "1403:11223:1",
							"usedErrors": []
						}
					],
					"src": "105:12522:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						]
					},
					"id": 769,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 692,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 768,
							"linearizedBaseContracts": [
								768
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 702,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 711,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 768,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 768,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 768,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 768,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 768,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 768,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 769,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						]
					},
					"id": 794,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 770,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 771,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 794,
							"sourceUnit": 769,
							"src": "135:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 773,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 768,
										"src": "305:6:3"
									},
									"id": 774,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 772,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 793,
							"linearizedBaseContracts": [
								793,
								768
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 775,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 780,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 793,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 783,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 793,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 789,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 793,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 794,
							"src": "277:405:3",
							"usedErrors": []
						}
					],
					"src": "110:573:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							815
						]
					},
					"id": 816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 795,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 796,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 815,
							"linearizedBaseContracts": [
								815
							],
							"name": "Context",
							"nameLocation": "626:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "702:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 801,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 800,
												"id": 803,
												"nodeType": "Return",
												"src": "712:17:4"
											}
										]
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:4"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "693:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:4"
									},
									"scope": 815,
									"src": "640:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "809:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 810,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 809,
												"id": 812,
												"nodeType": "Return",
												"src": "819:15:4"
											}
										]
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:4"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "793:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:4"
									},
									"scope": 815,
									"src": "742:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 816,
							"src": "608:235:4",
							"usedErrors": []
						}
					],
					"src": "86:758:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1127
						]
					},
					"id": 1128,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 818,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1127,
							"linearizedBaseContracts": [
								1127
							],
							"name": "SafeMath",
							"nameLocation": "490:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "717:140:5",
										"statements": [
											{
												"id": 848,
												"nodeType": "UncheckedBlock",
												"src": "727:124:5",
												"statements": [
													{
														"assignments": [
															831
														],
														"declarations": [
															{
																"constant": false,
																"id": 831,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 848,
																"src": "751:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 830,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 835,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "763:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 833,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "767:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 836,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "786:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 837,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "790:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 843,
														"nodeType": "IfStatement",
														"src": "782:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 841,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 829,
															"id": 842,
															"nodeType": "Return",
															"src": "793:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 845,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "838:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 846,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 829,
														"id": 847,
														"nodeType": "Return",
														"src": "824:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "657:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "668:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:5"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "702:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "708:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:5"
									},
									"scope": 1127,
									"src": "641:216:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "1078:113:5",
										"statements": [
											{
												"id": 876,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 855,
																"src": "1116:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 863,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "1120:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 869,
														"nodeType": "IfStatement",
														"src": "1112:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 867,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 861,
															"id": 868,
															"nodeType": "Return",
															"src": "1123:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 870,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 871,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 853,
																		"src": "1168:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 872,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 855,
																		"src": "1172:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 874,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 861,
														"id": 875,
														"nodeType": "Return",
														"src": "1154:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:5",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1018:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1029:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:5"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1063:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 857,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "1069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:5"
									},
									"scope": 1127,
									"src": "1002:189:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "1415:417:5",
										"statements": [
											{
												"id": 918,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1683:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 897,
														"nodeType": "IfStatement",
														"src": "1679:28:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 895,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 896,
															"nodeType": "Return",
															"src": "1691:16:5"
														}
													},
													{
														"assignments": [
															899
														],
														"declarations": [
															{
																"constant": false,
																"id": 899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:5",
																"nodeType": "VariableDeclaration",
																"scope": 918,
																"src": "1721:9:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "1733:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1737:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 904,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 905,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 881,
																	"src": "1760:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 907,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "1765:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 913,
														"nodeType": "IfStatement",
														"src": "1752:33:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 911,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 889,
															"id": 912,
															"nodeType": "Return",
															"src": "1768:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 915,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "1813:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 916,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 889,
														"id": 917,
														"nodeType": "Return",
														"src": "1799:16:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1355:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1366:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:5"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1400:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 885,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "1406:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:5"
									},
									"scope": 1127,
									"src": "1339:493:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2057:114:5",
										"statements": [
											{
												"id": 946,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 932,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2095:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 939,
														"nodeType": "IfStatement",
														"src": "2091:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 931,
															"id": 938,
															"nodeType": "Return",
															"src": "2103:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 941,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "2148:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 942,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "2152:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 944,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 931,
														"id": 945,
														"nodeType": "Return",
														"src": "2134:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "1997:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:5"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2042:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2048:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:5"
									},
									"scope": 1127,
									"src": "1981:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2406:114:5",
										"statements": [
											{
												"id": 974,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:5",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "2444:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 961,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 967,
														"nodeType": "IfStatement",
														"src": "2440:29:5",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 959,
															"id": 966,
															"nodeType": "Return",
															"src": "2452:17:5"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 969,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "2497:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 970,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "2501:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 972,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 959,
														"id": 973,
														"nodeType": "Return",
														"src": "2483:20:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2346:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2357:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:5"
									},
									"returnParameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2391:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 955,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "2397:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:5"
									},
									"scope": 1127,
									"src": "2330:190:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "2822:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 986,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2839:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 987,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "2843:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 985,
												"id": 989,
												"nodeType": "Return",
												"src": "2832:12:5"
											}
										]
									},
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2768:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2779:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:5"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "2813:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:5"
									},
									"scope": 1127,
									"src": "2755:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "3189:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1001,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "3206:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1002,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "3210:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1000,
												"id": 1004,
												"nodeType": "Return",
												"src": "3199:12:5"
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3135:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3146:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "3180:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:5"
									},
									"scope": 1127,
									"src": "3122:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "3532:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1016,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "3549:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1017,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "3553:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1019,
												"nodeType": "Return",
												"src": "3542:12:5"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3478:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3489:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "3523:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1013,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:5"
									},
									"scope": 1127,
									"src": "3465:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "3917:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1031,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "3934:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1032,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "3938:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1030,
												"id": 1034,
												"nodeType": "Return",
												"src": "3927:12:5"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3863:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3874:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:5"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "3908:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:5"
									},
									"scope": 1127,
									"src": "3850:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "4466:29:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1039,
														"src": "4483:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "4487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1049,
												"nodeType": "Return",
												"src": "4476:12:5"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4412:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4423:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:5"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "4457:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:5"
									},
									"scope": 1127,
									"src": "4399:96:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "5084:106:5",
										"statements": [
											{
												"id": 1074,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1056,
																		"src": "5126:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "5131:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1067,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "5134:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1063,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "5168:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1071,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "5172:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1062,
														"id": 1073,
														"nodeType": "Return",
														"src": "5161:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "4981:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5000:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5019:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1057,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "5075:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:5"
									},
									"scope": 1127,
									"src": "4959:231:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "5799:105:5",
										"statements": [
											{
												"id": 1099,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1089,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "5841:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1092,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1083,
																	"src": "5848:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1088,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1094,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1095,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1079,
																"src": "5882:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1096,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1081,
																"src": "5886:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1087,
														"id": 1098,
														"nodeType": "Return",
														"src": "5875:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5696:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5715:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5734:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:5"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "5790:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:5"
									},
									"scope": 1127,
									"src": "5674:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "6675:105:5",
										"statements": [
											{
												"id": 1124,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1114,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1106,
																		"src": "6717:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1117,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1108,
																	"src": "6724:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1113,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1119,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:5"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "6758:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1121,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1106,
																"src": "6762:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1112,
														"id": 1123,
														"nodeType": "Return",
														"src": "6751:12:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6572:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6591:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6610:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1107,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "6666:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:5"
									},
									"scope": 1127,
									"src": "6550:230:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1128,
							"src": "482:6300:5",
							"usedErrors": []
						}
					],
					"src": "107:6676:5"
				},
				"id": 5
			},
			"BCStaking.sol": {
				"ast": {
					"absolutePath": "BCStaking.sol",
					"exportedSymbols": {
						"BillionCashStaking": [
							2585
						],
						"Context": [
							815
						],
						"ERC20": [
							690
						],
						"IERC20": [
							768
						],
						"IERC20Metadata": [
							793
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							1127
						]
					},
					"id": 2586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1129,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:32:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2586,
							"sourceUnit": 105,
							"src": "69:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2586,
							"sourceUnit": 1128,
							"src": "123:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2586,
							"sourceUnit": 691,
							"src": "182:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1133,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "272:7:6"
									},
									"id": 1134,
									"nodeType": "InheritanceSpecifier",
									"src": "272:7:6"
								}
							],
							"canonicalName": "BillionCashStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2585,
							"linearizedBaseContracts": [
								2585,
								104,
								815
							],
							"name": "BillionCashStaking",
							"nameLocation": "250:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1137,
									"libraryName": {
										"id": 1135,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1127,
										"src": "293:8:6"
									},
									"nodeType": "UsingForDirective",
									"src": "287:27:6",
									"typeName": {
										"id": 1136,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 1140,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "346:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "322:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1138,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "322:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1139,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "365:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ab8a3c6b",
									"id": 1143,
									"mutability": "constant",
									"name": "DAILY_ROI",
									"nameLocation": "400:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "376:38:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "376:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 1142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "412:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44038f90",
									"id": 1146,
									"mutability": "constant",
									"name": "REFERRAL_PERCENTS",
									"nameLocation": "445:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "421:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1144,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "421:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313230",
										"id": 1145,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "465:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_120_by_1",
											"typeString": "int_const 120"
										},
										"value": "120"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "32bc298c",
									"id": 1149,
									"mutability": "constant",
									"name": "TIME_STEP",
									"nameLocation": "499:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "475:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1148,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "511:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0104db1b",
									"id": 1152,
									"mutability": "constant",
									"name": "STAKING_PERIOD",
									"nameLocation": "548:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "524:49:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1150,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "524:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313830",
										"id": 1151,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "565:8:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15552000_by_1",
											"typeString": "int_const 15552000"
										},
										"value": "180"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1155,
									"mutability": "mutable",
									"name": "BC",
									"nameLocation": "588:2:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "582:8:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$690",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 1154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1153,
											"name": "ERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 690,
											"src": "582:5:6"
										},
										"referencedDeclaration": 690,
										"src": "582:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$690",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "bff1f9e1",
									"id": 1157,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "614:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "599:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1159,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "646:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "631:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "631:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4b319713",
									"id": 1161,
									"mutability": "mutable",
									"name": "totalWithdrawn",
									"nameLocation": "679:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "664:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "664:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d6343867",
									"id": 1163,
									"mutability": "mutable",
									"name": "totalDepositCount",
									"nameLocation": "715:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "700:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "700:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18e1fbfc",
									"id": 1170,
									"mutability": "mutable",
									"name": "minimumStakeValue",
									"nameLocation": "754:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "739:47:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "739:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										},
										"id": 1169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "323030",
											"id": 1165,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "774:3:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1168,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1166,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "780:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1167,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "784:2:6",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "780:6:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "774:12:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "BillionCashStaking.Deposit",
									"id": 1181,
									"members": [
										{
											"constant": false,
											"id": 1172,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "829:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "821:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1171,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "821:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "withdrawn",
											"nameLocation": "854:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "846:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1173,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "846:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1176,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "882:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "874:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "874:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1178,
											"mutability": "mutable",
											"name": "endTime",
											"nameLocation": "910:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "902:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "902:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1180,
											"mutability": "mutable",
											"name": "ended",
											"nameLocation": "933:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1181,
											"src": "928:10:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1179,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "928:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Deposit",
									"nameLocation": "802:7:6",
									"nodeType": "StructDefinition",
									"scope": 2585,
									"src": "795:151:6",
									"visibility": "public"
								},
								{
									"canonicalName": "BillionCashStaking.User",
									"id": 1194,
									"members": [
										{
											"constant": false,
											"id": 1185,
											"mutability": "mutable",
											"name": "deposits",
											"nameLocation": "987:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "977:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr",
												"typeString": "struct BillionCashStaking.Deposit[]"
											},
											"typeName": {
												"baseType": {
													"id": 1183,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1182,
														"name": "Deposit",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1181,
														"src": "977:7:6"
													},
													"referencedDeclaration": 1181,
													"src": "977:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Deposit_$1181_storage_ptr",
														"typeString": "struct BillionCashStaking.Deposit"
													}
												},
												"id": 1184,
												"nodeType": "ArrayTypeName",
												"src": "977:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr",
													"typeString": "struct BillionCashStaking.Deposit[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1187,
											"mutability": "mutable",
											"name": "checkpoint",
											"nameLocation": "1014:10:6",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1006:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1186,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1006:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1189,
											"mutability": "mutable",
											"name": "bonus",
											"nameLocation": "1043:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1035:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1188,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1035:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1191,
											"mutability": "mutable",
											"name": "referralCount",
											"nameLocation": "1067:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1059:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1190,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1059:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "referrer",
											"nameLocation": "1099:8:6",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1091:16:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1091:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "User",
									"nameLocation": "961:4:6",
									"nodeType": "StructDefinition",
									"scope": 2585,
									"src": "954:161:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1199,
									"mutability": "mutable",
									"name": "users",
									"nameLocation": "1157:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 2585,
									"src": "1123:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
										"typeString": "mapping(address => struct BillionCashStaking.User)"
									},
									"typeName": {
										"id": 1198,
										"keyType": {
											"id": 1195,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1131:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1123:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
											"typeString": "mapping(address => struct BillionCashStaking.User)"
										},
										"valueType": {
											"id": 1197,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1196,
												"name": "User",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1194,
												"src": "1142:4:6"
											},
											"referencedDeclaration": 1194,
											"src": "1142:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
												"typeString": "struct BillionCashStaking.User"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "1193:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1203,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1229:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1229:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1202,
																	"name": "getUserDividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2338,
																	"src": "1212:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1212:28:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1243:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1212:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420486f6c646572",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1246:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8",
																"typeString": "literal_string \"Not Holder\""
															},
															"value": "Not Holder"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da9ed353d8fc4f92f359ab1dafc8aa41786bf2ce64033f4be93169d07dbb84f8",
																"typeString": "literal_string \"Not Holder\""
															}
														],
														"id": 1201,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1204:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1204:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "1204:55:6"
											},
											{
												"id": 1211,
												"nodeType": "PlaceholderStatement",
												"src": "1270:1:6"
											}
										]
									},
									"id": 1213,
									"name": "onlyhodler",
									"nameLocation": "1180:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:2:6"
									},
									"src": "1171:108:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 1217,
									"name": "Newbie",
									"nameLocation": "1293:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1308:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "1300:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1300:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:14:6"
									},
									"src": "1287:27:6"
								},
								{
									"anonymous": false,
									"id": 1223,
									"name": "NewDeposit",
									"nameLocation": "1326:10:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1353:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1337:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1367:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1359:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1359:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:38:6"
									},
									"src": "1320:55:6"
								},
								{
									"anonymous": false,
									"id": 1229,
									"name": "Withdrawn",
									"nameLocation": "1387:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1413:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1397:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1427:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "1419:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1419:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:38:6"
									},
									"src": "1381:54:6"
								},
								{
									"anonymous": false,
									"id": 1235,
									"name": "onReinvestment",
									"nameLocation": "1447:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1478:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1462:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "reinvestAmount",
												"nameLocation": "1492:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1484:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1484:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:46:6"
									},
									"src": "1441:67:6"
								},
								{
									"anonymous": false,
									"id": 1243,
									"name": "RefBonus",
									"nameLocation": "1520:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"indexed": true,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1555:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1539:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1539:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"indexed": true,
												"mutability": "mutable",
												"name": "referral",
												"nameLocation": "1590:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1574:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1617:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "1609:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1528:102:6"
									},
									"src": "1514:117:6"
								},
								{
									"body": {
										"id": 1253,
										"nodeType": "Block",
										"src": "1665:69:6",
										"statements": [
											{
												"expression": {
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "BC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "1715:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$690",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1250,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "1720:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$690",
															"typeString": "contract ERC20"
														}
													},
													"src": "1715:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$690",
														"typeString": "contract ERC20"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "1715:11:6"
											}
										]
									},
									"id": 1254,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1657:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "1651:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC20_$690",
													"typeString": "contract ERC20"
												},
												"typeName": {
													"id": 1245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1244,
														"name": "ERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 690,
														"src": "1651:5:6"
													},
													"referencedDeclaration": 690,
													"src": "1651:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$690",
														"typeString": "contract ERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1650:14:6"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:6"
									},
									"scope": 2585,
									"src": "1639:95:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "1798:2277:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1262,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "1831:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1263,
																"name": "minimumStakeValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "1841:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1831:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e742069732062656c6f77206d696e696d756d207374616b652076616c75652e",
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1873:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb7a83071538e27737dd244c3853ba7e93cb1faa7d1062627afe1253e091c06d",
																"typeString": "literal_string \"Amount is below minimum stake value.\""
															},
															"value": "Amount is below minimum stake value."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb7a83071538e27737dd244c3853ba7e93cb1faa7d1062627afe1253e091c06d",
																"typeString": "literal_string \"Amount is below minimum stake value.\""
															}
														],
														"id": 1261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1809:113:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "1809:113:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1271,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1970:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1970:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1269,
																		"name": "BC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1155,
																		"src": "1957:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$690",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 203,
																	"src": "1957:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1957:24:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1274,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "1985:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1957:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206861766520656e6f7567682062616c616e636520746f207374616b65",
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2006:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4103c10ee21b93fb098ff2fcd90d4858f0f01ac3821e0db37737aa5108ca8b01",
																"typeString": "literal_string \"Must have enough balance to stake\""
															},
															"value": "Must have enough balance to stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4103c10ee21b93fb098ff2fcd90d4858f0f01ac3821e0db37737aa5108ca8b01",
																"typeString": "literal_string \"Must have enough balance to stake\""
															}
														],
														"id": 1268,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1935:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1935:117:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "1935:117:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1282,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2103:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2103:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2123:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_BillionCashStaking_$2585",
																				"typeString": "contract BillionCashStaking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_BillionCashStaking_$2585",
																				"typeString": "contract BillionCashStaking"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1288,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1258,
																	"src": "2130:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1280,
																	"name": "BC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "2087:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$690",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 304,
																"src": "2087:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2087:50:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65206661696c65642064756520746f206661696c656420616d6f756e74207472616e736665722e",
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2152:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7f4d52890f3e51149cd51d1af67cb9d78fb62c13187ef2f547e03259819dd3f",
																"typeString": "literal_string \"Stake failed due to failed amount transfer.\""
															},
															"value": "Stake failed due to failed amount transfer."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7f4d52890f3e51149cd51d1af67cb9d78fb62c13187ef2f547e03259819dd3f",
																"typeString": "literal_string \"Stake failed due to failed amount transfer.\""
															}
														],
														"id": 1279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2065:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2065:143:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "2065:143:6"
											},
											{
												"assignments": [
													1295
												],
												"declarations": [
													{
														"constant": false,
														"id": 1295,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "2234:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1495,
														"src": "2221:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1294,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1293,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "2221:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "2221:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1300,
												"initialValue": {
													"baseExpression": {
														"id": 1296,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "2241:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1299,
													"indexExpression": {
														"expression": {
															"id": 1297,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2247:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2247:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2241:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2221:37:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1301,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "2289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																		"typeString": "struct BillionCashStaking.User storage pointer"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1193,
																"src": "2289:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1305,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2314:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2306:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1303,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2306:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2306:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2289:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1308,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1199,
																			"src": "2333:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																				"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																			}
																		},
																		"id": 1310,
																		"indexExpression": {
																			"id": 1309,
																			"name": "referrer",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1256,
																			"src": "2339:8:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2333:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage",
																			"typeString": "struct BillionCashStaking.User storage ref"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "2333:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2333:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2367:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2333:35:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2289:79:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1316,
															"name": "referrer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "2385:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"expression": {
																"id": 1317,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2397:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2397:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2385:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2289:118:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1328,
												"nodeType": "IfStatement",
												"src": "2271:199:6",
												"trueBody": {
													"id": 1327,
													"nodeType": "Block",
													"src": "2419:51:6",
													"statements": [
														{
															"expression": {
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1321,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "2434:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "referrer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1193,
																	"src": "2434:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1324,
																	"name": "referrer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "2450:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2434:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "2434:24:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1329,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "2486:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1193,
														"src": "2486:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2511:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2503:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1331,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2503:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2503:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2486:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1393,
												"nodeType": "IfStatement",
												"src": "2482:533:6",
												"trueBody": {
													"id": 1392,
													"nodeType": "Block",
													"src": "2515:500:6",
													"statements": [
														{
															"assignments": [
																1337
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1337,
																	"mutability": "mutable",
																	"name": "upline",
																	"nameLocation": "2538:6:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1392,
																	"src": "2530:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1336,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2530:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1340,
															"initialValue": {
																"expression": {
																	"id": 1338,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "2547:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																		"typeString": "struct BillionCashStaking.User storage pointer"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "referrer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1193,
																"src": "2547:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2530:30:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1341,
																	"name": "upline",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1337,
																	"src": "2581:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2599:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2591:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1342,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2591:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2591:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2581:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1391,
															"nodeType": "IfStatement",
															"src": "2577:427:6",
															"trueBody": {
																"id": 1390,
																"nodeType": "Block",
																"src": "2603:401:6",
																"statements": [
																	{
																		"assignments": [
																			1348
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1348,
																				"mutability": "mutable",
																				"name": "_amount",
																				"nameLocation": "2630:7:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1390,
																				"src": "2622:15:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1347,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "2622:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1356,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1354,
																					"name": "PERCENTS_DIVIDER",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "2696:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1351,
																							"name": "REFERRAL_PERCENTS",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1146,
																							"src": "2651:17:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"id": 1349,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1258,
																							"src": "2640:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1350,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1021,
																						"src": "2640:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2640:29:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1036,
																				"src": "2640:33:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1355,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2640:91:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "2622:109:6"
																	},
																	{
																		"expression": {
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1357,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "2750:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																							"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																						}
																					},
																					"id": 1359,
																					"indexExpression": {
																						"id": 1358,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1337,
																						"src": "2756:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2750:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1194_storage",
																						"typeString": "struct BillionCashStaking.User storage ref"
																					}
																				},
																				"id": 1360,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "bonus",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1189,
																				"src": "2750:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1366,
																						"name": "_amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1348,
																						"src": "2796:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1361,
																								"name": "users",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1199,
																								"src": "2772:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																									"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																								}
																							},
																							"id": 1363,
																							"indexExpression": {
																								"id": 1362,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1337,
																								"src": "2778:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2772:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage",
																								"typeString": "struct BillionCashStaking.User storage ref"
																							}
																						},
																						"id": 1364,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "bonus",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1189,
																						"src": "2772:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "2772:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1367,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2772:32:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2750:54:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1369,
																		"nodeType": "ExpressionStatement",
																		"src": "2750:54:6"
																	},
																	{
																		"expression": {
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 1370,
																						"name": "users",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1199,
																						"src": "2823:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																							"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																						}
																					},
																					"id": 1372,
																					"indexExpression": {
																						"id": 1371,
																						"name": "upline",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1337,
																						"src": "2829:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2823:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_User_$1194_storage",
																						"typeString": "struct BillionCashStaking.User storage ref"
																					}
																				},
																				"id": 1373,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "referralCount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1191,
																				"src": "2823:27:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "31",
																						"id": 1379,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2907:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"id": 1374,
																								"name": "users",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1199,
																								"src": "2853:5:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																									"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																								}
																							},
																							"id": 1376,
																							"indexExpression": {
																								"id": 1375,
																								"name": "upline",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1337,
																								"src": "2859:6:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "2853:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage",
																								"typeString": "struct BillionCashStaking.User storage ref"
																							}
																						},
																						"id": 1377,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "referralCount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1191,
																						"src": "2853:27:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "2853:31:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2853:74:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2823:104:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1382,
																		"nodeType": "ExpressionStatement",
																		"src": "2823:104:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1384,
																					"name": "upline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1337,
																					"src": "2960:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1385,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2968:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2968:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1387,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1348,
																					"src": "2980:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1383,
																				"name": "RefBonus",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1243,
																				"src": "2951:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2951:37:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1389,
																		"nodeType": "EmitStatement",
																		"src": "2946:42:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1394,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "3031:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "3031:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3031:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1397,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3031:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1419,
												"nodeType": "IfStatement",
												"src": "3027:174:6",
												"trueBody": {
													"id": 1418,
													"nodeType": "Block",
													"src": "3058:143:6",
													"statements": [
														{
															"expression": {
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1399,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1295,
																		"src": "3073:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "checkpoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1187,
																	"src": "3073:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1402,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3091:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1403,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3091:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3073:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1405,
															"nodeType": "ExpressionStatement",
															"src": "3073:33:6"
														},
														{
															"expression": {
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1406,
																	"name": "totalUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "3121:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "31",
																			"id": 1409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3149:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"expression": {
																			"id": 1407,
																			"name": "totalUsers",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "3134:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "3134:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3134:17:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3121:30:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1412,
															"nodeType": "ExpressionStatement",
															"src": "3121:30:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1414,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3178:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3178:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1413,
																	"name": "Newbie",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1217,
																	"src": "3171:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3171:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1417,
															"nodeType": "EmitStatement",
															"src": "3166:23:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1420,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "3217:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "referrer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1193,
														"src": "3217:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3242:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3234:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1422,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3234:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3234:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3217:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "3636:279:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1461,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1258,
																				"src": "3718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3747:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"expression": {
																					"id": 1463,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3771:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3771:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1468,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1465,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "3809:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1466,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "3809:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1467,
																					"name": "STAKING_PERIOD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "3827:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3809:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1469,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3864:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1460,
																			"name": "Deposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "3688:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Deposit_$1181_storage_ptr_$",
																				"typeString": "type(struct BillionCashStaking.Deposit storage pointer)"
																			}
																		},
																		"id": 1470,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3688:200:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																			"typeString": "struct BillionCashStaking.Deposit memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																			"typeString": "struct BillionCashStaking.Deposit memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1455,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "3651:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																				"typeString": "struct BillionCashStaking.User storage pointer"
																			}
																		},
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "deposits",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1185,
																		"src": "3651:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																		}
																	},
																	"id": 1459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3651:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$1181_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct BillionCashStaking.Deposit storage ref[] storage pointer,struct BillionCashStaking.Deposit storage ref)"
																	}
																},
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3651:252:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "3651:252:6"
														}
													]
												},
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "3213:702:6",
												"trueBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "3246:384:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1440,
																								"name": "PERCENTS_DIVIDER",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1140,
																								"src": "3399:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"id": 1437,
																										"name": "REFERRAL_PERCENTS",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1146,
																										"src": "3376:17:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"id": 1435,
																										"name": "amount",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1258,
																										"src": "3365:6:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1436,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1021,
																									"src": "3365:10:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1438,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3365:29:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1439,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1036,
																							"src": "3365:33:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1441,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3365:51:6",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1433,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1258,
																						"src": "3328:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1434,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sub",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1006,
																					"src": "3328:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1442,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3328:111:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 1443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3462:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			{
																				"expression": {
																					"id": 1444,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "3486:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "3486:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1449,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1446,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "3524:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "3524:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1448,
																					"name": "STAKING_PERIOD",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1152,
																					"src": "3542:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3524:32:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1450,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3579:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1432,
																			"name": "Deposit",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1181,
																			"src": "3298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Deposit_$1181_storage_ptr_$",
																				"typeString": "type(struct BillionCashStaking.Deposit storage pointer)"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3298:305:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																			"typeString": "struct BillionCashStaking.Deposit memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																			"typeString": "struct BillionCashStaking.Deposit memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1427,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1295,
																			"src": "3261:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																				"typeString": "struct BillionCashStaking.User storage pointer"
																			}
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "deposits",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1185,
																		"src": "3261:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "3261:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$1181_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct BillionCashStaking.Deposit storage ref[] storage pointer,struct BillionCashStaking.Deposit storage ref)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3261:357:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "3261:357:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1475,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "3927:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1478,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "3957:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1476,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "3941:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "3941:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3941:23:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3927:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "3927:37:6"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1482,
														"name": "totalDepositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "3975:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4017:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 1483,
																"name": "totalDepositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "3995:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "3995:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3995:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3975:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "3975:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1490,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4048:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4048:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1492,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "4060:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1489,
														"name": "NewDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "4037:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1494,
												"nodeType": "EmitStatement",
												"src": "4032:35:6"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "1751:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "referrer",
												"nameLocation": "1765:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1757:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1757:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1783:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "1775:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1756:34:6"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:6"
									},
									"scope": 2585,
									"src": "1742:2333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "4107:3411:6",
										"statements": [
											{
												"assignments": [
													1501
												],
												"declarations": [
													{
														"constant": false,
														"id": 1501,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "4131:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "4118:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1500,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1499,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "4118:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "4118:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1506,
												"initialValue": {
													"baseExpression": {
														"id": 1502,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "4138:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1505,
													"indexExpression": {
														"expression": {
															"id": 1503,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4144:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4144:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4138:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4118:37:6"
											},
											{
												"assignments": [
													1508
												],
												"declarations": [
													{
														"constant": false,
														"id": 1508,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "4176:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "4168:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1507,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4168:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"nodeType": "VariableDeclarationStatement",
												"src": "4168:19:6"
											},
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "4206:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "4198:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4198:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1512,
												"nodeType": "VariableDeclarationStatement",
												"src": "4198:17:6"
											},
											{
												"body": {
													"id": 1733,
													"nodeType": "Block",
													"src": "4279:2463:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1525,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1501,
																				"src": "4298:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 1526,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "4298:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 1528,
																		"indexExpression": {
																			"id": 1527,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1514,
																			"src": "4312:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4298:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1180,
																	"src": "4298:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4324:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "4298:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1732,
															"nodeType": "IfStatement",
															"src": "4294:2437:6",
															"trueBody": {
																"id": 1731,
																"nodeType": "Block",
																"src": "4331:2400:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1532,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1501,
																							"src": "4354:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1533,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1185,
																						"src": "4354:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1535,
																					"indexExpression": {
																						"id": 1534,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1514,
																						"src": "4368:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4354:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1536,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1178,
																				"src": "4354:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1537,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4381:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4381:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4354:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 1706,
																			"nodeType": "Block",
																			"src": "5336:1161:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1617,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1610,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1501,
																										"src": "5363:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1611,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "5363:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1613,
																								"indexExpression": {
																									"id": 1612,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1514,
																									"src": "5377:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5363:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1614,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "5363:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1615,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1501,
																								"src": "5392:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1616,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "5392:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5363:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1704,
																						"nodeType": "Block",
																						"src": "6020:458:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1693,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1663,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1511,
																										"src": "6047:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 1691,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "6395:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 1688,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "6357:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"id": 1683,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1501,
																																			"src": "6305:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 1684,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "checkpoint",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1187,
																																		"src": "6305:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1677,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1501,
																																					"src": "6276:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1678,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "6276:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1680,
																																			"indexExpression": {
																																				"id": 1679,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1514,
																																				"src": "6290:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "6276:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1681,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "6276:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1682,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "6276:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1685,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "6276:45:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 1673,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "6167:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 1670,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "6118:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 1664,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1501,
																																									"src": "6090:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 1665,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "6090:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 1667,
																																							"indexExpression": {
																																								"id": 1666,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1514,
																																								"src": "6104:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "6090:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 1668,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "6090:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 1669,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "6090:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 1671,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "6090:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1672,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "6090:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1674,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "6090:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 1675,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "6059:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1676,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "6059:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1686,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "6059:263:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1687,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "6059:297:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1689,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "6059:301:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1690,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "6059:335:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1692,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "6059:339:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "6047:351:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1694,
																								"nodeType": "ExpressionStatement",
																								"src": "6047:351:6"
																							},
																							{
																								"expression": {
																									"id": 1702,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1695,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1501,
																													"src": "6425:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1698,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1185,
																												"src": "6425:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1699,
																											"indexExpression": {
																												"id": 1697,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1514,
																												"src": "6439:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6425:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1700,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1180,
																										"src": "6425:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1701,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6450:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "6425:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1703,
																								"nodeType": "ExpressionStatement",
																								"src": "6425:29:6"
																							}
																						]
																					},
																					"id": 1705,
																					"nodeType": "IfStatement",
																					"src": "5359:1119:6",
																					"trueBody": {
																						"id": 1662,
																						"nodeType": "Block",
																						"src": "5409:605:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1651,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1618,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1511,
																										"src": "5436:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 1649,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "5931:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 1646,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "5893:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1638,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1501,
																																					"src": "5766:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1639,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "5766:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1641,
																																			"indexExpression": {
																																				"id": 1640,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1514,
																																				"src": "5780:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "5766:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1642,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "5766:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1632,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1501,
																																					"src": "5699:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1633,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "5699:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1635,
																																			"indexExpression": {
																																				"id": 1634,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1514,
																																				"src": "5713:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "5699:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1636,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "5699:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1637,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "5699:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1643,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "5699:128:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 1628,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "5556:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 1625,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "5507:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 1619,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1501,
																																									"src": "5479:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 1620,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "5479:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 1622,
																																							"indexExpression": {
																																								"id": 1621,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1514,
																																								"src": "5493:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "5479:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 1623,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "5479:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 1624,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "5479:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 1626,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "5479:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1627,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "5479:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1629,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "5479:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 1630,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "5448:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1631,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "5448:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1644,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "5448:410:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1645,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "5448:444:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1647,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "5448:448:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1648,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "5448:482:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1650,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5448:486:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "5436:498:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1652,
																								"nodeType": "ExpressionStatement",
																								"src": "5436:498:6"
																							},
																							{
																								"expression": {
																									"id": 1660,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1653,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1501,
																													"src": "5961:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 1656,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1185,
																												"src": "5961:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 1657,
																											"indexExpression": {
																												"id": 1655,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1514,
																												"src": "5975:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5961:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 1658,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1180,
																										"src": "5961:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 1659,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "5986:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "5961:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 1661,
																								"nodeType": "ExpressionStatement",
																								"src": "5961:29:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 1707,
																		"nodeType": "IfStatement",
																		"src": "4350:2147:6",
																		"trueBody": {
																			"id": 1609,
																			"nodeType": "Block",
																			"src": "4398:932:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1547,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1540,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1501,
																										"src": "4425:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1541,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "4425:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1543,
																								"indexExpression": {
																									"id": 1542,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1514,
																									"src": "4439:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "4425:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1544,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "4425:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1545,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1501,
																								"src": "4454:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1546,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "4454:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4425:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1607,
																						"nodeType": "Block",
																						"src": "4945:366:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1605,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1581,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1511,
																										"src": "4972:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1603,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "5247:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1598,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1501,
																																	"src": "5191:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1599,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1187,
																																"src": "5191:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1595,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "5171:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1596,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "5171:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1597,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "5171:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1600,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "5171:36:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1591,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "5092:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1588,
																																				"name": "DAILY_ROI",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "5043:9:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1582,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1501,
																																							"src": "5015:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1583,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1185,
																																						"src": "5015:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1585,
																																					"indexExpression": {
																																						"id": 1584,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1514,
																																						"src": "5029:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "5015:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1586,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1172,
																																				"src": "5015:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1587,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "5015:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1589,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "5015:38:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1590,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "5015:42:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1592,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "5015:124:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1593,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "4984:182:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1594,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "4984:186:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1601,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4984:224:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1602,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "4984:228:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1604,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4984:303:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4972:315:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1606,
																								"nodeType": "ExpressionStatement",
																								"src": "4972:315:6"
																							}
																						]
																					},
																					"id": 1608,
																					"nodeType": "IfStatement",
																					"src": "4421:890:6",
																					"trueBody": {
																						"id": 1580,
																						"nodeType": "Block",
																						"src": "4471:468:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1578,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1548,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1511,
																										"src": "4498:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 1576,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "4912:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 1573,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "4874:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1565,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1501,
																																					"src": "4781:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1566,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "4781:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1568,
																																			"indexExpression": {
																																				"id": 1567,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1514,
																																				"src": "4795:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "4781:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1569,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "4781:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"id": 1562,
																																			"name": "block",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 4294967292,
																																			"src": "4761:5:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_magic_block",
																																				"typeString": "block"
																																			}
																																		},
																																		"id": 1563,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "timestamp",
																																		"nodeType": "MemberAccess",
																																		"src": "4761:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1564,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "4761:19:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1570,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "4761:47:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 1558,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "4618:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 1555,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "4569:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 1549,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1501,
																																									"src": "4541:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 1550,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "4541:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 1552,
																																							"indexExpression": {
																																								"id": 1551,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1514,
																																								"src": "4555:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "4541:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 1553,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "4541:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 1554,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "4541:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 1556,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "4541:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1557,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "4541:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1559,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "4541:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 1560,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "4510:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1561,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "4510:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1571,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "4510:329:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1572,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "4510:363:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1574,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "4510:367:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1575,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "4510:401:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1577,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "4510:405:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "4498:417:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1579,
																								"nodeType": "ExpressionStatement",
																								"src": "4498:417:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 1722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1708,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1501,
																							"src": "6517:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1711,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1185,
																						"src": "6517:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1712,
																					"indexExpression": {
																						"id": 1710,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1514,
																						"src": "6531:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6517:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1713,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "withdrawn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "6517:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1720,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1511,
																						"src": "6599:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 1714,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1501,
																									"src": "6546:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																										"typeString": "struct BillionCashStaking.User storage pointer"
																									}
																								},
																								"id": 1715,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "deposits",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1185,
																								"src": "6546:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																								}
																							},
																							"id": 1717,
																							"indexExpression": {
																								"id": 1716,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1514,
																								"src": "6560:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6546:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																							}
																						},
																						"id": 1718,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "withdrawn",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1174,
																						"src": "6546:26:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1719,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "6546:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6546:81:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6517:110:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1723,
																		"nodeType": "ExpressionStatement",
																		"src": "6517:110:6"
																	},
																	{
																		"documentation": "changing of storage data",
																		"expression": {
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1724,
																				"name": "totalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1508,
																				"src": "6675:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 1727,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1511,
																						"src": "6705:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1725,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1508,
																						"src": "6689:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1726,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "6689:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6689:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6675:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1730,
																		"nodeType": "ExpressionStatement",
																		"src": "6675:40:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1517,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1514,
														"src": "4248:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1518,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "4252:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "4252:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4252:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4248:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1734,
												"initializationExpression": {
													"assignments": [
														1514
													],
													"declarations": [
														{
															"constant": false,
															"id": 1514,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4241:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1734,
															"src": "4233:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1513,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4233:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1516,
													"initialValue": {
														"hexValue": "30",
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4245:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4233:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4274:3:6",
														"subExpression": {
															"id": 1522,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "4274:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1524,
													"nodeType": "ExpressionStatement",
													"src": "4274:3:6"
												},
												"nodeType": "ForStatement",
												"src": "4228:2514:6"
											},
											{
												"assignments": [
													1736
												],
												"declarations": [
													{
														"constant": false,
														"id": 1736,
														"mutability": "mutable",
														"name": "referralBonus",
														"nameLocation": "6762:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "6754:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1735,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6754:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1738,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6799:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6799:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1737,
														"name": "getUserReferralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "6778:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6754:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1742,
														"name": "referralBonus",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "6825:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6841:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6825:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1765,
												"nodeType": "IfStatement",
												"src": "6821:160:6",
												"trueBody": {
													"id": 1764,
													"nodeType": "Block",
													"src": "6844:137:6",
													"statements": [
														{
															"expression": {
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1745,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "6859:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1748,
																			"name": "referralBonus",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1736,
																			"src": "6889:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1746,
																			"name": "totalAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1508,
																			"src": "6873:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "6873:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6873:30:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6859:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1751,
															"nodeType": "ExpressionStatement",
															"src": "6859:44:6"
														},
														{
															"expression": {
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1752,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "6918:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "bonus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1189,
																	"src": "6918:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6931:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6918:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1757,
															"nodeType": "ExpressionStatement",
															"src": "6918:14:6"
														},
														{
															"expression": {
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1758,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "6947:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "referralCount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1191,
																	"src": "6947:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6968:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6947:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1763,
															"nodeType": "ExpressionStatement",
															"src": "6947:22:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "7001:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7015:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7001:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5573657220686173206e6f206469766964656e6473",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7018:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
																"typeString": "literal_string \"User has no dividends\""
															},
															"value": "User has no dividends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_02e0f957520d09970a9594db53f2dbd286b52b8cd6bb72f915479003faa6cb82",
																"typeString": "literal_string \"User has no dividends\""
															}
														],
														"id": 1766,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6993:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6993:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "6993:49:6"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "contractBalance",
														"nameLocation": "7063:15:6",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "7055:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7055:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1779,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7102:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2585",
																		"typeString": "contract BillionCashStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BillionCashStaking_$2585",
																		"typeString": "contract BillionCashStaking"
																	}
																],
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7094:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1777,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7094:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7094:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1775,
															"name": "BC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "7081:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$690",
																"typeString": "contract ERC20"
															}
														},
														"id": 1776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 203,
														"src": "7081:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7081:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7055:53:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1783,
														"name": "contractBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "7123:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1784,
														"name": "totalAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "7141:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7123:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "7119:91:6",
												"trueBody": {
													"id": 1790,
													"nodeType": "Block",
													"src": "7154:56:6",
													"statements": [
														{
															"expression": {
																"id": 1788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1786,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "7169:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1787,
																	"name": "contractBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1774,
																	"src": "7183:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7169:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1789,
															"nodeType": "ExpressionStatement",
															"src": "7169:29:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1792,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "7222:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "7222:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1795,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7240:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7240:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7222:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1798,
												"nodeType": "ExpressionStatement",
												"src": "7222:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1802,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7302:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7302:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1804,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "7314:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1800,
																	"name": "BC",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "7290:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$690",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7290:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7290:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d206661696c65642064756520746f206661696c656420616d6f756e74207472616e736665722e",
															"id": 1806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7341:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5efd31b65f0444fe7b042d8613f358d2103fad037715fec653b6d2fd96c776b6",
																"typeString": "literal_string \"Claim failed due to failed amount transfer.\""
															},
															"value": "Claim failed due to failed amount transfer."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5efd31b65f0444fe7b042d8613f358d2103fad037715fec653b6d2fd96c776b6",
																"typeString": "literal_string \"Claim failed due to failed amount transfer.\""
															}
														],
														"id": 1799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7268:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7268:129:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1808,
												"nodeType": "ExpressionStatement",
												"src": "7268:129:6"
											},
											{
												"expression": {
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1809,
														"name": "totalWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "7410:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1812,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1508,
																"src": "7446:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1810,
																"name": "totalWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "7427:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "7427:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7427:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7410:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1815,
												"nodeType": "ExpressionStatement",
												"src": "7410:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1817,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7486:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7486:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1819,
															"name": "totalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "7498:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1816,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "7476:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "EmitStatement",
												"src": "7471:39:6"
											}
										]
									},
									"functionSelector": "4e71d92d",
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claim",
									"nameLocation": "4092:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4097:2:6"
									},
									"returnParameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4107:0:6"
									},
									"scope": 2585,
									"src": "4083:3435:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "7564:3297:6",
										"statements": [
											{
												"assignments": [
													1830
												],
												"declarations": [
													{
														"constant": false,
														"id": 1830,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "7588:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "7575:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 1829,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1828,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "7575:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "7575:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1835,
												"initialValue": {
													"baseExpression": {
														"id": 1831,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "7595:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 1834,
													"indexExpression": {
														"expression": {
															"id": 1832,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7601:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7601:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7595:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7575:37:6"
											},
											{
												"assignments": [
													1837
												],
												"declarations": [
													{
														"constant": false,
														"id": 1837,
														"mutability": "mutable",
														"name": "_dividends",
														"nameLocation": "7659:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "7651:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1836,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7651:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1842,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1839,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7689:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7689:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1838,
														"name": "getUserDividends",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2338,
														"src": "7672:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7672:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7651:49:6"
											},
											{
												"assignments": [
													1844
												],
												"declarations": [
													{
														"constant": false,
														"id": 1844,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "7760:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "7752:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1843,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7752:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"nodeType": "VariableDeclarationStatement",
												"src": "7752:19:6"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "7790:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2123,
														"src": "7782:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7782:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1848,
												"nodeType": "VariableDeclarationStatement",
												"src": "7782:17:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1855,
																	"name": "_dividends",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1837,
																	"src": "7871:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7900:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"expression": {
																		"id": 1857,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7920:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1858,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7920:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1859,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7954:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7954:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1861,
																		"name": "STAKING_PERIOD",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1152,
																		"src": "7972:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7954:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8005:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1854,
																"name": "Deposit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1181,
																"src": "7845:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Deposit_$1181_storage_ptr_$",
																	"typeString": "type(struct BillionCashStaking.Deposit storage pointer)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7845:180:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Deposit_$1181_memory_ptr",
																"typeString": "struct BillionCashStaking.Deposit memory"
															}
														],
														"expression": {
															"expression": {
																"id": 1849,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "7812:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "7812:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "7812:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$_t_struct$_Deposit_$1181_storage_$returns$__$bound_to$_t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct BillionCashStaking.Deposit storage ref[] storage pointer,struct BillionCashStaking.Deposit storage ref)"
														}
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7812:224:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1866,
												"nodeType": "ExpressionStatement",
												"src": "7812:224:6"
											},
											{
												"body": {
													"id": 2087,
													"nodeType": "Block",
													"src": "8100:2463:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 1879,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1830,
																				"src": "8119:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 1880,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "8119:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 1882,
																		"indexExpression": {
																			"id": 1881,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1868,
																			"src": "8133:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8119:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1180,
																	"src": "8119:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8145:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8119:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2086,
															"nodeType": "IfStatement",
															"src": "8115:2437:6",
															"trueBody": {
																"id": 2085,
																"nodeType": "Block",
																"src": "8152:2400:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1886,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "8175:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 1887,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1185,
																						"src": "8175:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 1889,
																					"indexExpression": {
																						"id": 1888,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1868,
																						"src": "8189:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8175:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 1890,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1178,
																				"src": "8175:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 1891,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "8202:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1892,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "8202:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8175:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2060,
																			"nodeType": "Block",
																			"src": "9157:1161:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1971,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1964,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1830,
																										"src": "9184:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1965,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "9184:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1967,
																								"indexExpression": {
																									"id": 1966,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1868,
																									"src": "9198:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "9184:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1968,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "9184:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1969,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1830,
																								"src": "9213:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1970,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "9213:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "9184:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 2058,
																						"nodeType": "Block",
																						"src": "9841:458:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2047,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2017,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1847,
																										"src": "9868:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2045,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "10216:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2042,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "10178:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"id": 2037,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 1830,
																																			"src": "10126:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2038,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "checkpoint",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1187,
																																		"src": "10126:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 2031,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1830,
																																					"src": "10097:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 2032,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "10097:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 2034,
																																			"indexExpression": {
																																				"id": 2033,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1868,
																																				"src": "10111:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "10097:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 2035,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "10097:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2036,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "10097:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2039,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "10097:45:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 2027,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "9988:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 2024,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "9939:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 2018,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1830,
																																									"src": "9911:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 2019,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "9911:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 2021,
																																							"indexExpression": {
																																								"id": 2020,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1868,
																																								"src": "9925:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "9911:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 2022,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "9911:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 2023,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "9911:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 2025,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "9911:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2026,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "9911:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2028,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "9911:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 2029,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "9880:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2030,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "9880:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2040,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "9880:263:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2041,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "9880:297:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2043,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "9880:301:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2044,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "9880:335:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2046,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9880:339:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "9868:351:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2048,
																								"nodeType": "ExpressionStatement",
																								"src": "9868:351:6"
																							},
																							{
																								"expression": {
																									"id": 2056,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 2049,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1830,
																													"src": "10246:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 2052,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1185,
																												"src": "10246:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 2053,
																											"indexExpression": {
																												"id": 2051,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1868,
																												"src": "10260:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "10246:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 2054,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1180,
																										"src": "10246:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 2055,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "10271:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "10246:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 2057,
																								"nodeType": "ExpressionStatement",
																								"src": "10246:29:6"
																							}
																						]
																					},
																					"id": 2059,
																					"nodeType": "IfStatement",
																					"src": "9180:1119:6",
																					"trueBody": {
																						"id": 2016,
																						"nodeType": "Block",
																						"src": "9230:605:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2005,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1972,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1847,
																										"src": "9257:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2003,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "9752:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2000,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "9714:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1992,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1830,
																																					"src": "9587:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1993,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "9587:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1995,
																																			"indexExpression": {
																																				"id": 1994,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1868,
																																				"src": "9601:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "9587:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1996,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "9587:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1986,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1830,
																																					"src": "9520:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1987,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "9520:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1989,
																																			"indexExpression": {
																																				"id": 1988,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1868,
																																				"src": "9534:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "9520:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1990,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "9520:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1991,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "9520:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1997,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "9520:128:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 1982,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "9377:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 1979,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "9328:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 1973,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1830,
																																									"src": "9300:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 1974,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "9300:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 1976,
																																							"indexExpression": {
																																								"id": 1975,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1868,
																																								"src": "9314:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "9300:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 1977,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "9300:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 1978,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "9300:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 1980,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "9300:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1981,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "9300:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1983,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "9300:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 1984,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "9269:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1985,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "9269:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1998,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "9269:410:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1999,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "9269:444:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2001,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "9269:448:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2002,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "9269:482:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2004,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "9269:486:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "9257:498:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2006,
																								"nodeType": "ExpressionStatement",
																								"src": "9257:498:6"
																							},
																							{
																								"expression": {
																									"id": 2014,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 2007,
																													"name": "user",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1830,
																													"src": "9782:4:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																														"typeString": "struct BillionCashStaking.User storage pointer"
																													}
																												},
																												"id": 2010,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "deposits",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1185,
																												"src": "9782:13:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																													"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																												}
																											},
																											"id": 2011,
																											"indexExpression": {
																												"id": 2009,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1868,
																												"src": "9796:1:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "9782:16:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																												"typeString": "struct BillionCashStaking.Deposit storage ref"
																											}
																										},
																										"id": 2012,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberName": "ended",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1180,
																										"src": "9782:22:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"hexValue": "74727565",
																										"id": 2013,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "bool",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "9807:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bool",
																											"typeString": "bool"
																										},
																										"value": "true"
																									},
																									"src": "9782:29:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_bool",
																										"typeString": "bool"
																									}
																								},
																								"id": 2015,
																								"nodeType": "ExpressionStatement",
																								"src": "9782:29:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 2061,
																		"nodeType": "IfStatement",
																		"src": "8171:2147:6",
																		"trueBody": {
																			"id": 1963,
																			"nodeType": "Block",
																			"src": "8219:932:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1901,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1894,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1830,
																										"src": "8246:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 1895,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "8246:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 1897,
																								"indexExpression": {
																									"id": 1896,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1868,
																									"src": "8260:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "8246:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 1898,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "8246:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 1899,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1830,
																								"src": "8275:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 1900,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "8275:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "8246:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1961,
																						"nodeType": "Block",
																						"src": "8766:366:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1959,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1935,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1847,
																										"src": "8793:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1957,
																												"name": "TIME_STEP",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1149,
																												"src": "9068:9:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"expression": {
																																	"id": 1952,
																																	"name": "user",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 1830,
																																	"src": "9012:4:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																		"typeString": "struct BillionCashStaking.User storage pointer"
																																	}
																																},
																																"id": 1953,
																																"isConstant": false,
																																"isLValue": true,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "checkpoint",
																																"nodeType": "MemberAccess",
																																"referencedDeclaration": 1187,
																																"src": "9012:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"expression": {
																																	"id": 1949,
																																	"name": "block",
																																	"nodeType": "Identifier",
																																	"overloadedDeclarations": [],
																																	"referencedDeclaration": 4294967292,
																																	"src": "8992:5:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_magic_block",
																																		"typeString": "block"
																																	}
																																},
																																"id": 1950,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"memberName": "timestamp",
																																"nodeType": "MemberAccess",
																																"src": "8992:15:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1951,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "sub",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1006,
																															"src": "8992:19:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1954,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "8992:36:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													],
																													"expression": {
																														"components": [
																															{
																																"arguments": [
																																	{
																																		"id": 1945,
																																		"name": "PERCENTS_DIVIDER",
																																		"nodeType": "Identifier",
																																		"overloadedDeclarations": [],
																																		"referencedDeclaration": 1140,
																																		"src": "8913:16:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"arguments": [
																																			{
																																				"id": 1942,
																																				"name": "DAILY_ROI",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1143,
																																				"src": "8864:9:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"expression": {
																																					"baseExpression": {
																																						"expression": {
																																							"id": 1936,
																																							"name": "user",
																																							"nodeType": "Identifier",
																																							"overloadedDeclarations": [],
																																							"referencedDeclaration": 1830,
																																							"src": "8836:4:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																								"typeString": "struct BillionCashStaking.User storage pointer"
																																							}
																																						},
																																						"id": 1937,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "deposits",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1185,
																																						"src": "8836:13:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																						}
																																					},
																																					"id": 1939,
																																					"indexExpression": {
																																						"id": 1938,
																																						"name": "i",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1868,
																																						"src": "8850:1:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"isConstant": false,
																																					"isLValue": true,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"nodeType": "IndexAccess",
																																					"src": "8836:16:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																																					}
																																				},
																																				"id": 1940,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "amount",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1172,
																																				"src": "8836:23:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1941,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "mul",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1021,
																																			"src": "8836:27:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1943,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "8836:38:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1944,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "div",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1036,
																																	"src": "8836:42:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1946,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "8836:124:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"id": 1947,
																														"isConstant": false,
																														"isInlineArray": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"nodeType": "TupleExpression",
																														"src": "8805:182:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1948,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "mul",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1021,
																													"src": "8805:186:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1955,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "8805:224:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1956,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "8805:228:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1958,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8805:303:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8793:315:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1960,
																								"nodeType": "ExpressionStatement",
																								"src": "8793:315:6"
																							}
																						]
																					},
																					"id": 1962,
																					"nodeType": "IfStatement",
																					"src": "8242:890:6",
																					"trueBody": {
																						"id": 1934,
																						"nodeType": "Block",
																						"src": "8292:468:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 1932,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 1902,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1847,
																										"src": "8319:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 1930,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "8733:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 1927,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "8695:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 1919,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 1830,
																																					"src": "8602:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 1920,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "8602:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 1922,
																																			"indexExpression": {
																																				"id": 1921,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1868,
																																				"src": "8616:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "8602:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 1923,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "8602:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"id": 1916,
																																			"name": "block",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 4294967292,
																																			"src": "8582:5:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_magic_block",
																																				"typeString": "block"
																																			}
																																		},
																																		"id": 1917,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "timestamp",
																																		"nodeType": "MemberAccess",
																																		"src": "8582:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 1918,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "8582:19:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 1924,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "8582:47:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 1912,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "8439:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 1909,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "8390:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 1903,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 1830,
																																									"src": "8362:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 1904,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "8362:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 1906,
																																							"indexExpression": {
																																								"id": 1905,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 1868,
																																								"src": "8376:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "8362:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 1907,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "8362:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 1908,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "8362:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 1910,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "8362:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 1911,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "8362:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 1913,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "8362:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 1914,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "8331:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 1915,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "8331:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 1925,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "8331:329:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 1926,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "8331:363:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 1928,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "8331:367:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1929,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "8331:401:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1931,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "8331:405:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "8319:417:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1933,
																								"nodeType": "ExpressionStatement",
																								"src": "8319:417:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 2076,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 2062,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1830,
																							"src": "10338:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 2065,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1185,
																						"src": "10338:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 2066,
																					"indexExpression": {
																						"id": 2064,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1868,
																						"src": "10352:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "10338:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 2067,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberName": "withdrawn",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1174,
																				"src": "10338:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2074,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1847,
																						"src": "10420:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 2068,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1830,
																									"src": "10367:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																										"typeString": "struct BillionCashStaking.User storage pointer"
																									}
																								},
																								"id": 2069,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "deposits",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1185,
																								"src": "10367:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																								}
																							},
																							"id": 2071,
																							"indexExpression": {
																								"id": 2070,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1868,
																								"src": "10381:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "10367:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																							}
																						},
																						"id": 2072,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "withdrawn",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1174,
																						"src": "10367:26:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "10367:30:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10367:81:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10338:110:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2077,
																		"nodeType": "ExpressionStatement",
																		"src": "10338:110:6"
																	},
																	{
																		"documentation": "changing of storage data",
																		"expression": {
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2078,
																				"name": "totalAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1844,
																				"src": "10496:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2081,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1847,
																						"src": "10526:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2079,
																						"name": "totalAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1844,
																						"src": "10510:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2080,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "10510:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10510:26:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10496:40:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2084,
																		"nodeType": "ExpressionStatement",
																		"src": "10496:40:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1871,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1868,
														"src": "8069:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1872,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "8073:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "8073:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8073:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8069:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2088,
												"initializationExpression": {
													"assignments": [
														1868
													],
													"declarations": [
														{
															"constant": false,
															"id": 1868,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8062:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2088,
															"src": "8054:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1867,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8054:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1870,
													"initialValue": {
														"hexValue": "30",
														"id": 1869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8066:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8054:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8095:3:6",
														"subExpression": {
															"id": 1876,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "8095:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1878,
													"nodeType": "ExpressionStatement",
													"src": "8095:3:6"
												},
												"nodeType": "ForStatement",
												"src": "8049:2514:6"
											},
											{
												"expression": {
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2089,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1830,
															"src": "10575:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User storage pointer"
															}
														},
														"id": 2091,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "checkpoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1187,
														"src": "10575:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2092,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10593:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10593:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10575:33:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "10575:33:6"
											},
											{
												"expression": {
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2096,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "10621:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2099,
																"name": "_dividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "10651:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2097,
																"name": "totalStaked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1159,
																"src": "10635:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "10635:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10635:27:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10621:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2102,
												"nodeType": "ExpressionStatement",
												"src": "10621:41:6"
											},
											{
												"expression": {
													"id": 2108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2103,
														"name": "totalDepositCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1163,
														"src": "10673:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10715:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																}
															],
															"expression": {
																"id": 2104,
																"name": "totalDepositCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1163,
																"src": "10693:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "10693:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10693:24:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10673:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2109,
												"nodeType": "ExpressionStatement",
												"src": "10673:44:6"
											},
											{
												"expression": {
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2110,
														"name": "totalWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "10728:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2113,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1844,
																"src": "10764:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2111,
																"name": "totalWithdrawn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1161,
																"src": "10745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "10745:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10745:31:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10728:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "10728:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2118,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10830:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10830:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2120,
															"name": "_dividends",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "10842:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2117,
														"name": "onReinvestment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1235,
														"src": "10815:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10815:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "EmitStatement",
												"src": "10810:43:6"
											}
										]
									},
									"functionSelector": "f69e2046",
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1825,
												"name": "onlyhodler",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1213,
												"src": "7553:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7553:10:6"
										}
									],
									"name": "compound",
									"nameLocation": "7535:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7543:2:6"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7564:0:6"
									},
									"scope": 2585,
									"src": "7526:3335:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2337,
										"nodeType": "Block",
										"src": "10978:2415:6",
										"statements": [
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "11002:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "10989:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2132,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2131,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "10989:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "10989:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2137,
												"initialValue": {
													"baseExpression": {
														"id": 2134,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "11009:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2136,
													"indexExpression": {
														"id": 2135,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "11015:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11009:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10989:38:6"
											},
											{
												"assignments": [
													2139
												],
												"declarations": [
													{
														"constant": false,
														"id": 2139,
														"mutability": "mutable",
														"name": "totalDividends",
														"nameLocation": "11048:14:6",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "11040:22:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2138,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11040:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2140,
												"nodeType": "VariableDeclarationStatement",
												"src": "11040:22:6"
											},
											{
												"assignments": [
													2142
												],
												"declarations": [
													{
														"constant": false,
														"id": 2142,
														"mutability": "mutable",
														"name": "dividends",
														"nameLocation": "11081:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 2337,
														"src": "11073:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2141,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11073:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2143,
												"nodeType": "VariableDeclarationStatement",
												"src": "11073:17:6"
											},
											{
												"body": {
													"id": 2333,
													"nodeType": "Block",
													"src": "11154:2198:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2156,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2133,
																				"src": "11173:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "11173:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 2159,
																		"indexExpression": {
																			"id": 2158,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2145,
																			"src": "11187:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11173:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 2160,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1180,
																	"src": "11173:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11199:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "11173:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2332,
															"nodeType": "IfStatement",
															"src": "11169:2172:6",
															"trueBody": {
																"id": 2331,
																"nodeType": "Block",
																"src": "11206:2135:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2170,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 2163,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2133,
																							"src": "11229:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																								"typeString": "struct BillionCashStaking.User storage pointer"
																							}
																						},
																						"id": 2164,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "deposits",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1185,
																						"src": "11229:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																							"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																						}
																					},
																					"id": 2166,
																					"indexExpression": {
																						"id": 2165,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2145,
																						"src": "11243:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "11229:16:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref"
																					}
																				},
																				"id": 2167,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "endTime",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1178,
																				"src": "11229:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"expression": {
																					"id": 2168,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "11256:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 2169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "11256:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11229:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2322,
																			"nodeType": "Block",
																			"src": "12212:1049:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2251,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 2244,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2133,
																										"src": "12239:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 2245,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "12239:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 2247,
																								"indexExpression": {
																									"id": 2246,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2145,
																									"src": "12253:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "12239:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 2248,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "12239:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 2249,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2133,
																								"src": "12268:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 2250,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "12268:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "12239:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 2320,
																						"nodeType": "Block",
																						"src": "12840:402:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2318,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2288,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2142,
																										"src": "12867:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2316,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "13215:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2313,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "13177:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"id": 2308,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2133,
																																			"src": "13125:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2309,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "checkpoint",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1187,
																																		"src": "13125:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 2302,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 2133,
																																					"src": "13096:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 2303,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "13096:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 2305,
																																			"indexExpression": {
																																				"id": 2304,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 2145,
																																				"src": "13110:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "13096:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 2306,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "13096:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2307,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "13096:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2310,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "13096:45:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 2298,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "12987:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 2295,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "12938:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 2289,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 2133,
																																									"src": "12910:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 2290,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "12910:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 2292,
																																							"indexExpression": {
																																								"id": 2291,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 2145,
																																								"src": "12924:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "12910:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 2293,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "12910:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 2294,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "12910:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 2296,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "12910:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2297,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "12910:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2299,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "12910:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 2300,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "12879:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2301,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "12879:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2311,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "12879:263:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2312,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "12879:297:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2314,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "12879:301:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2315,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "12879:335:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2317,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12879:339:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12867:351:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2319,
																								"nodeType": "ExpressionStatement",
																								"src": "12867:351:6"
																							}
																						]
																					},
																					"id": 2321,
																					"nodeType": "IfStatement",
																					"src": "12235:1007:6",
																					"trueBody": {
																						"id": 2287,
																						"nodeType": "Block",
																						"src": "12285:549:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2285,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2252,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2142,
																										"src": "12312:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2283,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "12807:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2280,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "12769:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 2272,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 2133,
																																					"src": "12642:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 2273,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "12642:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 2275,
																																			"indexExpression": {
																																				"id": 2274,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 2145,
																																				"src": "12656:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "12642:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 2276,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "12642:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 2266,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 2133,
																																					"src": "12575:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 2267,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "12575:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 2269,
																																			"indexExpression": {
																																				"id": 2268,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 2145,
																																				"src": "12589:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "12575:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 2270,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "endTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1178,
																																		"src": "12575:24:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2271,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "12575:28:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2277,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "12575:128:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 2262,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "12432:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 2259,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "12383:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 2253,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 2133,
																																									"src": "12355:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 2254,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "12355:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 2256,
																																							"indexExpression": {
																																								"id": 2255,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 2145,
																																								"src": "12369:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "12355:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 2257,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "12355:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 2258,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "12355:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 2260,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "12355:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2261,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "12355:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2263,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "12355:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 2264,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "12324:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2265,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "12324:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2278,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "12324:410:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2279,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "12324:444:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2281,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "12324:448:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2282,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "12324:482:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2284,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "12324:486:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "12312:498:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2286,
																								"nodeType": "ExpressionStatement",
																								"src": "12312:498:6"
																							}
																						]
																					}
																				}
																			]
																		},
																		"id": 2323,
																		"nodeType": "IfStatement",
																		"src": "11225:2036:6",
																		"trueBody": {
																			"id": 2243,
																			"nodeType": "Block",
																			"src": "11273:933:6",
																			"statements": [
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2178,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 2171,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2133,
																										"src": "11300:4:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																											"typeString": "struct BillionCashStaking.User storage pointer"
																										}
																									},
																									"id": 2172,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "deposits",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 1185,
																									"src": "11300:13:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																										"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																									}
																								},
																								"id": 2174,
																								"indexExpression": {
																									"id": 2173,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2145,
																									"src": "11314:1:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "11300:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref"
																								}
																							},
																							"id": 2175,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "startTime",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1176,
																							"src": "11300:26:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">",
																						"rightExpression": {
																							"expression": {
																								"id": 2176,
																								"name": "user",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2133,
																								"src": "11329:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																									"typeString": "struct BillionCashStaking.User storage pointer"
																								}
																							},
																							"id": 2177,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "checkpoint",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1187,
																							"src": "11329:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "11300:44:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 2241,
																						"nodeType": "Block",
																						"src": "11820:367:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2239,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2212,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2142,
																										"src": "11847:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2237,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "12130:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2234,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "12088:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"id": 2229,
																																			"name": "user",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 2133,
																																			"src": "12066:4:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																				"typeString": "struct BillionCashStaking.User storage pointer"
																																			}
																																		},
																																		"id": 2230,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "checkpoint",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1187,
																																		"src": "12066:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"id": 2226,
																																			"name": "block",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 4294967292,
																																			"src": "12046:5:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_magic_block",
																																				"typeString": "block"
																																			}
																																		},
																																		"id": 2227,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "timestamp",
																																		"nodeType": "MemberAccess",
																																		"src": "12046:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2228,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "12046:19:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2231,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "12046:36:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 2222,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "11967:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 2219,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "11918:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 2213,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 2133,
																																									"src": "11890:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 2214,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "11890:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 2216,
																																							"indexExpression": {
																																								"id": 2215,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 2145,
																																								"src": "11904:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "11890:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 2217,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "11890:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 2218,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "11890:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 2220,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "11890:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2221,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "11890:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2223,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "11890:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 2224,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "11859:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2225,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "11859:186:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2232,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "11859:224:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2233,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "11859:228:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2235,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "11859:232:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2236,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "11859:236:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2238,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11859:304:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11847:316:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2240,
																								"nodeType": "ExpressionStatement",
																								"src": "11847:316:6"
																							}
																						]
																					},
																					"id": 2242,
																					"nodeType": "IfStatement",
																					"src": "11296:891:6",
																					"trueBody": {
																						"id": 2211,
																						"nodeType": "Block",
																						"src": "11346:468:6",
																						"statements": [
																							{
																								"expression": {
																									"id": 2209,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"id": 2179,
																										"name": "dividends",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2142,
																										"src": "11373:9:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"hexValue": "3630",
																												"id": 2207,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "11787:2:6",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												},
																												"value": "60"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_rational_60_by_1",
																													"typeString": "int_const 60"
																												}
																											],
																											"expression": {
																												"arguments": [
																													{
																														"hexValue": "3630",
																														"id": 2204,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": true,
																														"kind": "number",
																														"lValueRequested": false,
																														"nodeType": "Literal",
																														"src": "11749:2:6",
																														"typeDescriptions": {
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														},
																														"value": "60"
																													}
																												],
																												"expression": {
																													"argumentTypes": [
																														{
																															"typeIdentifier": "t_rational_60_by_1",
																															"typeString": "int_const 60"
																														}
																													],
																													"expression": {
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"expression": {
																																			"baseExpression": {
																																				"expression": {
																																					"id": 2196,
																																					"name": "user",
																																					"nodeType": "Identifier",
																																					"overloadedDeclarations": [],
																																					"referencedDeclaration": 2133,
																																					"src": "11656:4:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																						"typeString": "struct BillionCashStaking.User storage pointer"
																																					}
																																				},
																																				"id": 2197,
																																				"isConstant": false,
																																				"isLValue": true,
																																				"isPure": false,
																																				"lValueRequested": false,
																																				"memberName": "deposits",
																																				"nodeType": "MemberAccess",
																																				"referencedDeclaration": 1185,
																																				"src": "11656:13:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																					"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																				}
																																			},
																																			"id": 2199,
																																			"indexExpression": {
																																				"id": 2198,
																																				"name": "i",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 2145,
																																				"src": "11670:1:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"isConstant": false,
																																			"isLValue": true,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"nodeType": "IndexAccess",
																																			"src": "11656:16:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																				"typeString": "struct BillionCashStaking.Deposit storage ref"
																																			}
																																		},
																																		"id": 2200,
																																		"isConstant": false,
																																		"isLValue": true,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "startTime",
																																		"nodeType": "MemberAccess",
																																		"referencedDeclaration": 1176,
																																		"src": "11656:26:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"expression": {
																																	"argumentTypes": [
																																		{
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	],
																																	"expression": {
																																		"expression": {
																																			"id": 2193,
																																			"name": "block",
																																			"nodeType": "Identifier",
																																			"overloadedDeclarations": [],
																																			"referencedDeclaration": 4294967292,
																																			"src": "11636:5:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_magic_block",
																																				"typeString": "block"
																																			}
																																		},
																																		"id": 2194,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"lValueRequested": false,
																																		"memberName": "timestamp",
																																		"nodeType": "MemberAccess",
																																		"src": "11636:15:6",
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	},
																																	"id": 2195,
																																	"isConstant": false,
																																	"isLValue": false,
																																	"isPure": false,
																																	"lValueRequested": false,
																																	"memberName": "sub",
																																	"nodeType": "MemberAccess",
																																	"referencedDeclaration": 1006,
																																	"src": "11636:19:6",
																																	"typeDescriptions": {
																																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																																	}
																																},
																																"id": 2201,
																																"isConstant": false,
																																"isLValue": false,
																																"isPure": false,
																																"kind": "functionCall",
																																"lValueRequested": false,
																																"names": [],
																																"nodeType": "FunctionCall",
																																"src": "11636:47:6",
																																"tryCall": false,
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															}
																														],
																														"expression": {
																															"argumentTypes": [
																																{
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															],
																															"expression": {
																																"components": [
																																	{
																																		"arguments": [
																																			{
																																				"id": 2189,
																																				"name": "PERCENTS_DIVIDER",
																																				"nodeType": "Identifier",
																																				"overloadedDeclarations": [],
																																				"referencedDeclaration": 1140,
																																				"src": "11493:16:6",
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			}
																																		],
																																		"expression": {
																																			"argumentTypes": [
																																				{
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			],
																																			"expression": {
																																				"arguments": [
																																					{
																																						"id": 2186,
																																						"name": "DAILY_ROI",
																																						"nodeType": "Identifier",
																																						"overloadedDeclarations": [],
																																						"referencedDeclaration": 1143,
																																						"src": "11444:9:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					}
																																				],
																																				"expression": {
																																					"argumentTypes": [
																																						{
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					],
																																					"expression": {
																																						"expression": {
																																							"baseExpression": {
																																								"expression": {
																																									"id": 2180,
																																									"name": "user",
																																									"nodeType": "Identifier",
																																									"overloadedDeclarations": [],
																																									"referencedDeclaration": 2133,
																																									"src": "11416:4:6",
																																									"typeDescriptions": {
																																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																																										"typeString": "struct BillionCashStaking.User storage pointer"
																																									}
																																								},
																																								"id": 2181,
																																								"isConstant": false,
																																								"isLValue": true,
																																								"isPure": false,
																																								"lValueRequested": false,
																																								"memberName": "deposits",
																																								"nodeType": "MemberAccess",
																																								"referencedDeclaration": 1185,
																																								"src": "11416:13:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																																								}
																																							},
																																							"id": 2183,
																																							"indexExpression": {
																																								"id": 2182,
																																								"name": "i",
																																								"nodeType": "Identifier",
																																								"overloadedDeclarations": [],
																																								"referencedDeclaration": 2145,
																																								"src": "11430:1:6",
																																								"typeDescriptions": {
																																									"typeIdentifier": "t_uint256",
																																									"typeString": "uint256"
																																								}
																																							},
																																							"isConstant": false,
																																							"isLValue": true,
																																							"isPure": false,
																																							"lValueRequested": false,
																																							"nodeType": "IndexAccess",
																																							"src": "11416:16:6",
																																							"typeDescriptions": {
																																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																																							}
																																						},
																																						"id": 2184,
																																						"isConstant": false,
																																						"isLValue": true,
																																						"isPure": false,
																																						"lValueRequested": false,
																																						"memberName": "amount",
																																						"nodeType": "MemberAccess",
																																						"referencedDeclaration": 1172,
																																						"src": "11416:23:6",
																																						"typeDescriptions": {
																																							"typeIdentifier": "t_uint256",
																																							"typeString": "uint256"
																																						}
																																					},
																																					"id": 2185,
																																					"isConstant": false,
																																					"isLValue": false,
																																					"isPure": false,
																																					"lValueRequested": false,
																																					"memberName": "mul",
																																					"nodeType": "MemberAccess",
																																					"referencedDeclaration": 1021,
																																					"src": "11416:27:6",
																																					"typeDescriptions": {
																																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																																					}
																																				},
																																				"id": 2187,
																																				"isConstant": false,
																																				"isLValue": false,
																																				"isPure": false,
																																				"kind": "functionCall",
																																				"lValueRequested": false,
																																				"names": [],
																																				"nodeType": "FunctionCall",
																																				"src": "11416:38:6",
																																				"tryCall": false,
																																				"typeDescriptions": {
																																					"typeIdentifier": "t_uint256",
																																					"typeString": "uint256"
																																				}
																																			},
																																			"id": 2188,
																																			"isConstant": false,
																																			"isLValue": false,
																																			"isPure": false,
																																			"lValueRequested": false,
																																			"memberName": "div",
																																			"nodeType": "MemberAccess",
																																			"referencedDeclaration": 1036,
																																			"src": "11416:42:6",
																																			"typeDescriptions": {
																																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																																			}
																																		},
																																		"id": 2190,
																																		"isConstant": false,
																																		"isLValue": false,
																																		"isPure": false,
																																		"kind": "functionCall",
																																		"lValueRequested": false,
																																		"names": [],
																																		"nodeType": "FunctionCall",
																																		"src": "11416:124:6",
																																		"tryCall": false,
																																		"typeDescriptions": {
																																			"typeIdentifier": "t_uint256",
																																			"typeString": "uint256"
																																		}
																																	}
																																],
																																"id": 2191,
																																"isConstant": false,
																																"isInlineArray": false,
																																"isLValue": false,
																																"isPure": false,
																																"lValueRequested": false,
																																"nodeType": "TupleExpression",
																																"src": "11385:182:6",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint256",
																																	"typeString": "uint256"
																																}
																															},
																															"id": 2192,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": false,
																															"lValueRequested": false,
																															"memberName": "mul",
																															"nodeType": "MemberAccess",
																															"referencedDeclaration": 1021,
																															"src": "11385:216:6",
																															"typeDescriptions": {
																																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																																"typeString": "function (uint256,uint256) pure returns (uint256)"
																															}
																														},
																														"id": 2202,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"kind": "functionCall",
																														"lValueRequested": false,
																														"names": [],
																														"nodeType": "FunctionCall",
																														"src": "11385:329:6",
																														"tryCall": false,
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint256",
																															"typeString": "uint256"
																														}
																													},
																													"id": 2203,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"lValueRequested": false,
																													"memberName": "div",
																													"nodeType": "MemberAccess",
																													"referencedDeclaration": 1036,
																													"src": "11385:363:6",
																													"typeDescriptions": {
																														"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																														"typeString": "function (uint256,uint256) pure returns (uint256)"
																													}
																												},
																												"id": 2205,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"kind": "functionCall",
																												"lValueRequested": false,
																												"names": [],
																												"nodeType": "FunctionCall",
																												"src": "11385:367:6",
																												"tryCall": false,
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 2206,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "div",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 1036,
																											"src": "11385:401:6",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 2208,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11385:405:6",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11373:417:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 2210,
																								"nodeType": "ExpressionStatement",
																								"src": "11373:417:6"
																							}
																						]
																					}
																				}
																			]
																		}
																	},
																	{
																		"expression": {
																			"id": 2329,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2324,
																				"name": "totalDividends",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2139,
																				"src": "13279:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"id": 2327,
																						"name": "dividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2142,
																						"src": "13315:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2325,
																						"name": "totalDividends",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2139,
																						"src": "13296:14:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2326,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "13296:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13296:29:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "13279:46:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2330,
																		"nodeType": "ExpressionStatement",
																		"src": "13279:46:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2148,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2145,
														"src": "11123:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2149,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "11127:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "11127:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "11127:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11123:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2334,
												"initializationExpression": {
													"assignments": [
														2145
													],
													"declarations": [
														{
															"constant": false,
															"id": 2145,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "11116:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2334,
															"src": "11108:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2144,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "11108:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2147,
													"initialValue": {
														"hexValue": "30",
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11120:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "11108:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "11149:3:6",
														"subExpression": {
															"id": 2153,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2145,
															"src": "11149:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2155,
													"nodeType": "ExpressionStatement",
													"src": "11149:3:6"
												},
												"nodeType": "ForStatement",
												"src": "11103:2249:6"
											},
											{
												"expression": {
													"id": 2335,
													"name": "totalDividends",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2139,
													"src": "13371:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2130,
												"id": 2336,
												"nodeType": "Return",
												"src": "13364:21:6"
											}
										]
									},
									"functionSelector": "040a772e",
									"id": 2338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDividends",
									"nameLocation": "10878:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2126,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "10903:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "10895:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10895:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10894:21:6"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2338,
												"src": "10964:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10964:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10963:9:6"
									},
									"scope": 2585,
									"src": "10869:2524:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "13514:50:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2345,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "13532:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2347,
														"indexExpression": {
															"id": 2346,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2340,
															"src": "13538:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13532:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "bonus",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1189,
													"src": "13532:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2344,
												"id": 2349,
												"nodeType": "Return",
												"src": "13525:31:6"
											}
										]
									},
									"functionSelector": "e85abe09",
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferralBonus",
									"nameLocation": "13410:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13439:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "13431:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13430:21:6"
									},
									"returnParameters": {
										"id": 2344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "13500:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13500:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13499:9:6"
									},
									"scope": 2585,
									"src": "13401:163:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2363,
										"nodeType": "Block",
										"src": "13685:58:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2358,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "13703:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2360,
														"indexExpression": {
															"id": 2359,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "13709:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13703:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2361,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referralCount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1191,
													"src": "13703:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2357,
												"id": 2362,
												"nodeType": "Return",
												"src": "13696:39:6"
											}
										]
									},
									"functionSelector": "c8a22eb4",
									"id": 2364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferralCount",
									"nameLocation": "13581:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13610:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "13602:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13601:21:6"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2364,
												"src": "13671:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13671:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13670:9:6"
									},
									"scope": 2585,
									"src": "13572:171:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2376,
										"nodeType": "Block",
										"src": "13859:53:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2371,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "13877:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2373,
														"indexExpression": {
															"id": 2372,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2366,
															"src": "13883:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13877:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "referrer",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1193,
													"src": "13877:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2370,
												"id": 2375,
												"nodeType": "Return",
												"src": "13870:34:6"
											}
										]
									},
									"functionSelector": "36144c9a",
									"id": 2377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserReferrer",
									"nameLocation": "13760:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13784:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "13776:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13776:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13775:21:6"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2377,
												"src": "13845:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13844:9:6"
									},
									"scope": 2585,
									"src": "13751:161:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2389,
										"nodeType": "Block",
										"src": "14030:55:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2384,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "14048:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
															}
														},
														"id": 2386,
														"indexExpression": {
															"id": 2385,
															"name": "userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "14054:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14048:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage",
															"typeString": "struct BillionCashStaking.User storage ref"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "checkpoint",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1187,
													"src": "14048:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2383,
												"id": 2388,
												"nodeType": "Return",
												"src": "14041:36:6"
											}
										]
									},
									"functionSelector": "d7ffca91",
									"id": 2390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserCheckpoint",
									"nameLocation": "13929:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "13955:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "13947:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13947:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13946:21:6"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2390,
												"src": "14016:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14016:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14015:9:6"
									},
									"scope": 2585,
									"src": "13920:165:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "14202:139:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2402,
																	"name": "userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "14306:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2401,
																"name": "getUserDividends",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2338,
																"src": "14289:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14289:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2398,
																	"name": "userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "14254:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2397,
																"name": "getUserReferralBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2351,
																"src": "14233:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14233:33:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "14233:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14233:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2396,
												"id": 2405,
												"nodeType": "Return",
												"src": "14213:120:6"
											}
										]
									},
									"functionSelector": "153ab9df",
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAvailable",
									"nameLocation": "14102:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14127:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "14119:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14119:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14118:21:6"
									},
									"returnParameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "14188:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14188:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14187:9:6"
									},
									"scope": 2585,
									"src": "14093:248:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2458,
										"nodeType": "Block",
										"src": "14584:304:6",
										"statements": [
											{
												"assignments": [
													2426
												],
												"declarations": [
													{
														"constant": false,
														"id": 2426,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "14608:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2458,
														"src": "14595:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2425,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2424,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "14595:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "14595:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2430,
												"initialValue": {
													"baseExpression": {
														"id": 2427,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "14615:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2429,
													"indexExpression": {
														"id": 2428,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2409,
														"src": "14621:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14615:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14595:38:6"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2431,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "14668:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "14668:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2434,
																"indexExpression": {
																	"id": 2433,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "14682:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14668:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1172,
															"src": "14668:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2436,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "14710:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "14710:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2439,
																"indexExpression": {
																	"id": 2438,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "14724:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14710:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "withdrawn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "14710:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2441,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "14755:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "14755:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2444,
																"indexExpression": {
																	"id": 2443,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "14769:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14755:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2445,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "startTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1176,
															"src": "14755:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2446,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "14800:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "14800:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2449,
																"indexExpression": {
																	"id": 2448,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "14814:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14800:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2450,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "endTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1178,
															"src": "14800:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 2451,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2426,
																		"src": "14843:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																			"typeString": "struct BillionCashStaking.User storage pointer"
																		}
																	},
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deposits",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1185,
																	"src": "14843:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																		"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																	}
																},
																"id": 2454,
																"indexExpression": {
																	"id": 2453,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2411,
																	"src": "14857:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14843:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																	"typeString": "struct BillionCashStaking.Deposit storage ref"
																}
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "ended",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1180,
															"src": "14843:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 2456,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "14653:227:6",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256,bool)"
													}
												},
												"functionReturnParameters": 2423,
												"id": 2457,
												"nodeType": "Return",
												"src": "14646:234:6"
											}
										]
									},
									"functionSelector": "c0806b03",
									"id": 2459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserDepositInfo",
									"nameLocation": "14358:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14385:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14377:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14377:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "14406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14398:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14376:36:6"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14475:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14497:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14497:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14519:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14519:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14541:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14541:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2459,
												"src": "14563:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14563:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14460:118:6"
									},
									"scope": 2585,
									"src": "14349:539:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "15012:60:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"baseExpression": {
																"id": 2466,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "15030:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
																	"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
																}
															},
															"id": 2468,
															"indexExpression": {
																"id": 2467,
																"name": "userAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2461,
																"src": "15036:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15030:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage",
																"typeString": "struct BillionCashStaking.User storage ref"
															}
														},
														"id": 2469,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "deposits",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1185,
														"src": "15030:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
															"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "15030:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2465,
												"id": 2471,
												"nodeType": "Return",
												"src": "15023:41:6"
											}
										]
									},
									"functionSelector": "a8aeb6c2",
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserAmountOfDeposits",
									"nameLocation": "14905:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "14937:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14929:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14929:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14928:21:6"
									},
									"returnParameters": {
										"id": 2465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "14998:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14997:9:6"
									},
									"scope": 2585,
									"src": "14896:176:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "15193:315:6",
										"statements": [
											{
												"assignments": [
													2482
												],
												"declarations": [
													{
														"constant": false,
														"id": 2482,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "15217:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2526,
														"src": "15204:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2481,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2480,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "15204:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "15204:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2486,
												"initialValue": {
													"baseExpression": {
														"id": 2483,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15224:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2485,
													"indexExpression": {
														"id": 2484,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2475,
														"src": "15230:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15224:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15204:38:6"
											},
											{
												"assignments": [
													2488
												],
												"declarations": [
													{
														"constant": false,
														"id": 2488,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "15263:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2526,
														"src": "15255:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2487,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15255:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2489,
												"nodeType": "VariableDeclarationStatement",
												"src": "15255:14:6"
											},
											{
												"body": {
													"id": 2522,
													"nodeType": "Block",
													"src": "15333:142:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 2502,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2482,
																				"src": "15352:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																					"typeString": "struct BillionCashStaking.User storage pointer"
																				}
																			},
																			"id": 2503,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "deposits",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1185,
																			"src": "15352:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																				"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																			}
																		},
																		"id": 2505,
																		"indexExpression": {
																			"id": 2504,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2491,
																			"src": "15366:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15352:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																			"typeString": "struct BillionCashStaking.Deposit storage ref"
																		}
																	},
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ended",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1180,
																	"src": "15352:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "66616c7365",
																	"id": 2507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15378:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "15352:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2521,
															"nodeType": "IfStatement",
															"src": "15348:116:6",
															"trueBody": {
																"id": 2520,
																"nodeType": "Block",
																"src": "15385:79:6",
																"statements": [
																	{
																		"expression": {
																			"id": 2518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2509,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2488,
																				"src": "15404:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"expression": {
																									"id": 2512,
																									"name": "user",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2482,
																									"src": "15424:4:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																										"typeString": "struct BillionCashStaking.User storage pointer"
																									}
																								},
																								"id": 2513,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "deposits",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1185,
																								"src": "15424:13:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																									"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																								}
																							},
																							"id": 2515,
																							"indexExpression": {
																								"id": 2514,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2491,
																								"src": "15438:1:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "15424:16:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																								"typeString": "struct BillionCashStaking.Deposit storage ref"
																							}
																						},
																						"id": 2516,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1172,
																						"src": "15424:23:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 2510,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2488,
																						"src": "15413:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 991,
																					"src": "15413:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15413:35:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "15404:44:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2519,
																		"nodeType": "ExpressionStatement",
																		"src": "15404:44:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2494,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2491,
														"src": "15302:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2495,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2482,
																"src": "15306:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "15306:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15306:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15302:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2523,
												"initializationExpression": {
													"assignments": [
														2491
													],
													"declarations": [
														{
															"constant": false,
															"id": 2491,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15295:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2523,
															"src": "15287:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2490,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15287:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2493,
													"initialValue": {
														"hexValue": "30",
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15287:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15328:3:6",
														"subExpression": {
															"id": 2499,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2491,
															"src": "15328:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2501,
													"nodeType": "ExpressionStatement",
													"src": "15328:3:6"
												},
												"nodeType": "ForStatement",
												"src": "15282:193:6"
											},
											{
												"expression": {
													"id": 2524,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2488,
													"src": "15494:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2479,
												"id": 2525,
												"nodeType": "Return",
												"src": "15487:13:6"
											}
										]
									},
									"functionSelector": "7e3abeea",
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTotalDeposits",
									"nameLocation": "15089:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "15118:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "15110:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15110:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15109:21:6"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "15179:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15179:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15178:9:6"
									},
									"scope": 2585,
									"src": "15080:428:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2571,
										"nodeType": "Block",
										"src": "15630:247:6",
										"statements": [
											{
												"assignments": [
													2536
												],
												"declarations": [
													{
														"constant": false,
														"id": 2536,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "15654:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "15641:17:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
															"typeString": "struct BillionCashStaking.User"
														},
														"typeName": {
															"id": 2535,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2534,
																"name": "User",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1194,
																"src": "15641:4:6"
															},
															"referencedDeclaration": 1194,
															"src": "15641:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																"typeString": "struct BillionCashStaking.User"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2540,
												"initialValue": {
													"baseExpression": {
														"id": 2537,
														"name": "users",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "15661:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_User_$1194_storage_$",
															"typeString": "mapping(address => struct BillionCashStaking.User storage ref)"
														}
													},
													"id": 2539,
													"indexExpression": {
														"id": 2538,
														"name": "userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2529,
														"src": "15667:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15661:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_User_$1194_storage",
														"typeString": "struct BillionCashStaking.User storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15641:38:6"
											},
											{
												"assignments": [
													2542
												],
												"declarations": [
													{
														"constant": false,
														"id": 2542,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "15700:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 2571,
														"src": "15692:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15692:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"nodeType": "VariableDeclarationStatement",
												"src": "15692:14:6"
											},
											{
												"body": {
													"id": 2567,
													"nodeType": "Block",
													"src": "15770:74:6",
													"statements": [
														{
															"expression": {
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2556,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2542,
																	"src": "15785:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2559,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2536,
																						"src": "15805:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																							"typeString": "struct BillionCashStaking.User storage pointer"
																						}
																					},
																					"id": 2560,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "deposits",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1185,
																					"src": "15805:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																						"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
																					}
																				},
																				"id": 2562,
																				"indexExpression": {
																					"id": 2561,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2545,
																					"src": "15819:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "15805:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Deposit_$1181_storage",
																					"typeString": "struct BillionCashStaking.Deposit storage ref"
																				}
																			},
																			"id": 2563,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "withdrawn",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1174,
																			"src": "15805:26:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2557,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "15794:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "15794:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15794:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15785:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2566,
															"nodeType": "ExpressionStatement",
															"src": "15785:47:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2548,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2545,
														"src": "15739:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2549,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2536,
																"src": "15743:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_User_$1194_storage_ptr",
																	"typeString": "struct BillionCashStaking.User storage pointer"
																}
															},
															"id": 2550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "deposits",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1185,
															"src": "15743:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Deposit_$1181_storage_$dyn_storage",
																"typeString": "struct BillionCashStaking.Deposit storage ref[] storage ref"
															}
														},
														"id": 2551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15743:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15739:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"initializationExpression": {
													"assignments": [
														2545
													],
													"declarations": [
														{
															"constant": false,
															"id": 2545,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15732:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 2568,
															"src": "15724:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15724:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2547,
													"initialValue": {
														"hexValue": "30",
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15736:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15724:13:6"
												},
												"loopExpression": {
													"expression": {
														"id": 2554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "15765:3:6",
														"subExpression": {
															"id": 2553,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2545,
															"src": "15765:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2555,
													"nodeType": "ExpressionStatement",
													"src": "15765:3:6"
												},
												"nodeType": "ForStatement",
												"src": "15719:125:6"
											},
											{
												"expression": {
													"id": 2569,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2542,
													"src": "15863:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2533,
												"id": 2570,
												"nodeType": "Return",
												"src": "15856:13:6"
											}
										]
									},
									"functionSelector": "fb4cb32b",
									"id": 2572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserTotalWithdrawn",
									"nameLocation": "15525:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "15555:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "15547:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15547:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15546:21:6"
									},
									"returnParameters": {
										"id": 2533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2572,
												"src": "15616:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15616:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15615:9:6"
									},
									"scope": 2585,
									"src": "15516:361:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2583,
										"nodeType": "Block",
										"src": "16021:57:6",
										"statements": [
											{
												"expression": {
													"id": 2581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2579,
														"name": "minimumStakeValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "16032:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2580,
														"name": "_minimumStakeValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "16052:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16032:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2582,
												"nodeType": "ExpressionStatement",
												"src": "16032:38:6"
											}
										]
									},
									"functionSelector": "4be4d790",
									"id": 2584,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2576,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "16006:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "16006:9:6"
										}
									],
									"name": "setMinimumStakeValue",
									"nameLocation": "15930:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "_minimumStakeValue",
												"nameLocation": "15959:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 2584,
												"src": "15951:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15951:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15950:28:6"
									},
									"returnParameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16021:0:6"
									},
									"scope": 2585,
									"src": "15921:157:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2586,
							"src": "241:15840:6",
							"usedErrors": []
						}
					],
					"src": "35:16048:6"
				},
				"id": 6
			}
		}
	}
}