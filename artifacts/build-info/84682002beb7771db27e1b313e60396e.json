{
	"id": "84682002beb7771db27e1b313e60396e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"BillionCash.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\ncontract BillionCash is Ownable {\r\n    using SafeMath for uint256;\r\n    mapping(address => uint256) public _BCTokenBalances;\r\n    mapping(address => mapping(address => uint256)) public _allowed;\r\n    string constant tokenName = \"BillionCash\";\r\n    string constant tokenSymbol = \"BC\";\r\n    uint8 constant tokenDecimals = 18;\r\n    uint256 _totalSupply = 50000 * 10**uint256(tokenDecimals);\r\n    address pancakeswap;\r\n    address marketingwallet;\r\n    address adminAddress;\r\n    uint256 public constant PERCENTS_DIVIDER = 1000;\r\n    uint256 public constant FEE_PERCENT = 50;\r\n\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n\r\n    constructor(\r\n        address _adminAddress,\r\n        address _marketingWallet,\r\n        address _pancakeswap\r\n    ) {\r\n        adminAddress = _adminAddress;\r\n        marketingwallet = _marketingWallet;\r\n        pancakeswap = _pancakeswap;\r\n        _mint(adminAddress, _totalSupply);\r\n    }\r\n\r\n    function name() public pure returns (string memory) {\r\n        return tokenName;\r\n    }\r\n\r\n    function symbol() public pure returns (string memory) {\r\n        return tokenSymbol;\r\n    }\r\n\r\n    function decimals() public pure returns (uint8) {\r\n        return tokenDecimals;\r\n    }\r\n\r\n    function totalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    function balanceOf(address owner) public view returns (uint256) {\r\n        return _BCTokenBalances[owner];\r\n    }\r\n\r\n    function transfer(address to, uint256 value) public returns (bool) {\r\n        require(value <= _BCTokenBalances[msg.sender]);\r\n        require(to != address(0));\r\n\r\n        uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER);\r\n        uint256 tokensToTransfer = value\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee);\r\n\r\n        _BCTokenBalances[msg.sender] = _BCTokenBalances[msg.sender].sub(value);\r\n        _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer);\r\n        _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(\r\n            BCTokenForFee\r\n        );\r\n\r\n        emit Transfer(msg.sender, to, tokensToTransfer);\r\n        emit Transfer(msg.sender, adminAddress, BCTokenForFee);\r\n        emit Transfer(msg.sender, marketingwallet, BCTokenForFee);\r\n        emit Transfer(msg.sender, pancakeswap, BCTokenForFee);\r\n        return true;\r\n    }\r\n\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        returns (uint256)\r\n    {\r\n        return _allowed[owner][spender];\r\n    }\r\n\r\n    function approve(address spender, uint256 value) public returns (bool) {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = value;\r\n        emit Approval(msg.sender, spender, value);\r\n        return true;\r\n    }\r\n\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) public returns (bool) {\r\n        require(value <= _BCTokenBalances[from]);\r\n        require(value <= _allowed[from][msg.sender]);\r\n        require(to != address(0));\r\n\r\n        _BCTokenBalances[from] = _BCTokenBalances[from].sub(value);\r\n\r\n        uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER);\r\n        uint256 tokensToTransfer = value\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee)\r\n            .sub(BCTokenForFee);\r\n\r\n        _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer);\r\n        _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(\r\n            BCTokenForFee\r\n        );\r\n        _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(\r\n            BCTokenForFee\r\n        );\r\n        _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value);\r\n\r\n        emit Transfer(msg.sender, adminAddress, BCTokenForFee);\r\n        emit Transfer(msg.sender, marketingwallet, BCTokenForFee);\r\n        emit Transfer(msg.sender, pancakeswap, BCTokenForFee);\r\n\r\n        return true;\r\n    }\r\n\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].add(addedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        returns (bool)\r\n    {\r\n        require(spender != address(0));\r\n        _allowed[msg.sender][spender] = (\r\n            _allowed[msg.sender][spender].sub(subtractedValue)\r\n        );\r\n        emit Approval(msg.sender, spender, _allowed[msg.sender][spender]);\r\n        return true;\r\n    }\r\n\r\n    function _mint(address account, uint256 amount) internal {\r\n        require(amount != 0);\r\n        _BCTokenBalances[account] = _BCTokenBalances[account].add(amount);\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    function setDevAddress(address payable _devAddress) external onlyOwner {\r\n        adminAddress = _devAddress;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6300:2;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAF 0x4A DUP4 PUSH29 0x8071DC4A0719D311C2E77869318E7DA7A5C9B44018B6B257600E476473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "482:6300:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054af4a837c8071dc4a0719d311c2e77869318e7da7a5c9b44018b6b257600e4764736f6c634300080a0033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"BillionCash.sol": {
				"BillionCash": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_adminAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_marketingWallet",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_pancakeswap",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "FEE_PERCENT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERCENTS_DIVIDER",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_BCTokenBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "_allowed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_devAddress",
									"type": "address"
								}
							],
							"name": "setDevAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"BillionCash.sol\":186:5807  contract BillionCash is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"BillionCash.sol\":546:572  10**uint256(tokenDecimals) */\n  tag_1\n    /* \"BillionCash.sol\":506:508  18 */\n  0x12\n    /* \"BillionCash.sol\":546:548  10 */\n  0x0a\n    /* \"BillionCash.sol\":546:572  10**uint256(tokenDecimals) */\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"BillionCash.sol\":538:572  50000 * 10**uint256(tokenDecimals) */\n  tag_3\n  swap1\n    /* \"BillionCash.sol\":538:543  50000 */\n  0xc350\n    /* \"BillionCash.sol\":538:572  50000 * 10**uint256(tokenDecimals) */\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"BillionCash.sol\":515:572  uint256 _totalSupply = 50000 * 10**uint256(tokenDecimals) */\n  0x03\n  sstore\n    /* \"BillionCash.sol\":965:1255  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"BillionCash.sol\":1093:1105  adminAddress */\n  0x06\n    /* \"BillionCash.sol\":1093:1121  adminAddress = _adminAddress */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  dup1\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap3\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"BillionCash.sol\":1132:1147  marketingwallet */\n  0x05\n    /* \"BillionCash.sol\":1132:1166  marketingwallet = _marketingWallet */\n  dup1\n  sload\n  dup7\n  dup4\n  and\n  swap1\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"BillionCash.sol\":1177:1188  pancakeswap */\n  0x04\n    /* \"BillionCash.sol\":1177:1203  pancakeswap = _pancakeswap */\n  dup1\n  sload\n  swap2\n  dup6\n  and\n  swap2\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"BillionCash.sol\":1234:1246  _totalSupply */\n  sload(0x03)\n    /* \"BillionCash.sol\":1214:1247  _mint(adminAddress, _totalSupply) */\n  tag_16\n  swap2\n    /* \"BillionCash.sol\":1093:1121  adminAddress = _adminAddress */\n  swap1\n    /* \"BillionCash.sol\":1214:1219  _mint */\n  tag_17\n    /* \"BillionCash.sol\":1214:1247  _mint(adminAddress, _totalSupply) */\n  jump\t// in\ntag_16:\n    /* \"BillionCash.sol\":965:1255  constructor(... */\n  pop\n  pop\n  pop\n    /* \"BillionCash.sol\":186:5807  contract BillionCash is Ownable {... */\n  jump(tag_34)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"BillionCash.sol\":5455:5680  function _mint(address account, uint256 amount) internal {... */\ntag_17:\n    /* \"BillionCash.sol\":5531:5542  amount != 0 */\n  dup1\n    /* \"BillionCash.sol\":5523:5543  require(amount != 0) */\n  tag_22\n  jumpi\n  0x00\n  dup1\n  revert\ntag_22:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BillionCash.sol\":5582:5607  _BCTokenBalances[account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"BillionCash.sol\":5582:5598  _BCTokenBalances */\n  0x01\n    /* \"BillionCash.sol\":5582:5607  _BCTokenBalances[account] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n  sload\n    /* \"BillionCash.sol\":5582:5619  _BCTokenBalances[account].add(amount) */\n  tag_23\n  swap2\n    /* \"BillionCash.sol\":5612:5618  amount */\n  dup4\n  swap1\n    /* \"BillionCash.sol\":5582:5611  _BCTokenBalances[account].add */\n  tag_0_100\n  tag_24\n  dup3\n  shl\n  or\n    /* \"BillionCash.sol\":5582:5619  _BCTokenBalances[account].add(amount) */\n  swap1\n  shr\n  jump\t// in\ntag_23:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"BillionCash.sol\":5554:5579  _BCTokenBalances[account] */\n  dup4\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n    /* \"BillionCash.sol\":5554:5570  _BCTokenBalances */\n  0x01\n    /* \"BillionCash.sol\":5554:5579  _BCTokenBalances[account] */\n  0x20\n  mstore\n  0x40\n  dup1\n  dup3\n  keccak256\n    /* \"BillionCash.sol\":5554:5619  _BCTokenBalances[account] = _BCTokenBalances[account].add(amount) */\n  swap4\n  swap1\n  swap4\n  sstore\n    /* \"BillionCash.sol\":5635:5672  Transfer(address(0), account, amount) */\n  swap2\n  mload\n    /* \"BillionCash.sol\":5554:5579  _BCTokenBalances[account] */\n  swap1\n  swap2\n  swap1\n    /* \"BillionCash.sol\":5635:5672  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n  tag_25\n  swap1\n    /* \"BillionCash.sol\":5665:5671  amount */\n  dup6\n    /* \"#utility.yul\":2404:2429   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2377:2395   */\n  add\n  swap1\n    /* \"#utility.yul\":2258:2435   */\n  jump\n    /* \"BillionCash.sol\":5635:5672  Transfer(address(0), account, amount) */\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"BillionCash.sol\":5455:5680  function _mint(address account, uint256 amount) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n  tag_28\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_27:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_30:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x11\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:568   */\ntag_31:\n    /* \"#utility.yul\":235:236   */\n  0x01\n    /* \"#utility.yul\":278:283   */\n  dup2\n    /* \"#utility.yul\":235:236   */\n  dup2\n    /* \"#utility.yul\":292:562   */\ntag_37:\n    /* \"#utility.yul\":313:320   */\n  dup1\n    /* \"#utility.yul\":303:311   */\n  dup6\n    /* \"#utility.yul\":300:321   */\n  gt\n    /* \"#utility.yul\":292:562   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":372:376   */\n  dup2\n    /* \"#utility.yul\":368:369   */\n  0x00\n    /* \"#utility.yul\":364:370   */\n  not\n    /* \"#utility.yul\":360:377   */\n  div\n    /* \"#utility.yul\":354:358   */\n  dup3\n    /* \"#utility.yul\":351:378   */\n  gt\n    /* \"#utility.yul\":348:401   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":381:399   */\n  tag_41\n  tag_30\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":431:438   */\n  dup1\n    /* \"#utility.yul\":421:429   */\n  dup6\n    /* \"#utility.yul\":417:439   */\n  and\n    /* \"#utility.yul\":414:469   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":451:467   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":414:469   */\ntag_42:\n    /* \"#utility.yul\":530:552   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":490:505   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":292:562   */\n  jump(tag_37)\ntag_39:\n    /* \"#utility.yul\":296:299   */\n  pop\n    /* \"#utility.yul\":146:568   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":573:1379   */\ntag_32:\n    /* \"#utility.yul\":622:627   */\n  0x00\n    /* \"#utility.yul\":652:660   */\n  dup3\n    /* \"#utility.yul\":642:722   */\n  tag_44\n  jumpi\n  pop\n    /* \"#utility.yul\":693:694   */\n  0x01\n    /* \"#utility.yul\":707:712   */\n  jump(tag_27)\n    /* \"#utility.yul\":642:722   */\ntag_44:\n    /* \"#utility.yul\":741:745   */\n  dup2\n    /* \"#utility.yul\":731:807   */\n  tag_45\n  jumpi\n  pop\n    /* \"#utility.yul\":778:779   */\n  0x00\n    /* \"#utility.yul\":792:797   */\n  jump(tag_27)\n    /* \"#utility.yul\":731:807   */\ntag_45:\n    /* \"#utility.yul\":823:827   */\n  dup2\n    /* \"#utility.yul\":841:842   */\n  0x01\n    /* \"#utility.yul\":836:895   */\n  dup2\n  eq\n  tag_47\n  jumpi\n    /* \"#utility.yul\":909:910   */\n  0x02\n    /* \"#utility.yul\":904:1034   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":816:1034   */\n  jump(tag_46)\n    /* \"#utility.yul\":836:895   */\ntag_47:\n    /* \"#utility.yul\":866:867   */\n  0x01\n    /* \"#utility.yul\":857:867   */\n  swap2\n  pop\n    /* \"#utility.yul\":880:885   */\n  pop\n  jump(tag_27)\n    /* \"#utility.yul\":904:1034   */\ntag_48:\n    /* \"#utility.yul\":941:944   */\n  0xff\n    /* \"#utility.yul\":931:939   */\n  dup5\n    /* \"#utility.yul\":928:945   */\n  gt\n    /* \"#utility.yul\":925:968   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":948:966   */\n  tag_50\n  tag_30\n  jump\t// in\ntag_50:\n  pop\n  pop\n    /* \"#utility.yul\":1004:1005   */\n  0x01\n    /* \"#utility.yul\":990:1006   */\n  dup3\n  shl\n    /* \"#utility.yul\":1019:1024   */\n  jump(tag_27)\n    /* \"#utility.yul\":816:1034   */\ntag_46:\n  pop\n    /* \"#utility.yul\":1118:1120   */\n  0x20\n    /* \"#utility.yul\":1108:1116   */\n  dup4\n    /* \"#utility.yul\":1105:1121   */\n  lt\n    /* \"#utility.yul\":1099:1102   */\n  0x0133\n    /* \"#utility.yul\":1093:1097   */\n  dup4\n    /* \"#utility.yul\":1090:1103   */\n  lt\n    /* \"#utility.yul\":1086:1122   */\n  and\n    /* \"#utility.yul\":1080:1082   */\n  0x4e\n    /* \"#utility.yul\":1070:1078   */\n  dup5\n    /* \"#utility.yul\":1067:1083   */\n  lt\n    /* \"#utility.yul\":1062:1064   */\n  0x0b\n    /* \"#utility.yul\":1056:1060   */\n  dup5\n    /* \"#utility.yul\":1053:1065   */\n  lt\n    /* \"#utility.yul\":1049:1084   */\n  and\n    /* \"#utility.yul\":1046:1123   */\n  or\n    /* \"#utility.yul\":1043:1202   */\n  iszero\n  tag_51\n  jumpi\n  pop\n    /* \"#utility.yul\":1155:1174   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":1187:1192   */\n  jump(tag_27)\n    /* \"#utility.yul\":1043:1202   */\ntag_51:\n    /* \"#utility.yul\":1234:1268   */\n  tag_52\n    /* \"#utility.yul\":1259:1267   */\n  dup4\n    /* \"#utility.yul\":1253:1257   */\n  dup4\n    /* \"#utility.yul\":1234:1268   */\n  tag_31\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1304:1310   */\n  dup1\n    /* \"#utility.yul\":1300:1301   */\n  0x00\n    /* \"#utility.yul\":1296:1302   */\n  not\n    /* \"#utility.yul\":1292:1311   */\n  div\n    /* \"#utility.yul\":1283:1290   */\n  dup3\n    /* \"#utility.yul\":1280:1312   */\n  gt\n    /* \"#utility.yul\":1277:1335   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1315:1333   */\n  tag_54\n  tag_30\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1353:1373   */\n  mul\n  swap4\n    /* \"#utility.yul\":573:1379   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1384:1515   */\ntag_2:\n    /* \"#utility.yul\":1444:1449   */\n  0x00\n    /* \"#utility.yul\":1473:1509   */\n  tag_28\n    /* \"#utility.yul\":1500:1508   */\n  dup4\n    /* \"#utility.yul\":1494:1498   */\n  dup4\n    /* \"#utility.yul\":1473:1509   */\n  tag_32\n  jump\t// in\n    /* \"#utility.yul\":1520:1688   */\ntag_4:\n    /* \"#utility.yul\":1560:1567   */\n  0x00\n    /* \"#utility.yul\":1626:1627   */\n  dup2\n    /* \"#utility.yul\":1622:1623   */\n  0x00\n    /* \"#utility.yul\":1618:1624   */\n  not\n    /* \"#utility.yul\":1614:1628   */\n  div\n    /* \"#utility.yul\":1611:1612   */\n  dup4\n    /* \"#utility.yul\":1608:1629   */\n  gt\n    /* \"#utility.yul\":1603:1604   */\n  dup3\n    /* \"#utility.yul\":1596:1605   */\n  iszero\n    /* \"#utility.yul\":1589:1606   */\n  iszero\n    /* \"#utility.yul\":1585:1630   */\n  and\n    /* \"#utility.yul\":1582:1653   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":1633:1651   */\n  tag_59\n  tag_30\n  jump\t// in\ntag_59:\n  pop\n    /* \"#utility.yul\":1673:1682   */\n  mul\n  swap1\n    /* \"#utility.yul\":1520:1688   */\n  jump\t// out\n    /* \"#utility.yul\":1693:1870   */\ntag_33:\n    /* \"#utility.yul\":1772:1785   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1814:1845   */\n  dup2\n  and\n    /* \"#utility.yul\":1804:1846   */\n  dup2\n  eq\n    /* \"#utility.yul\":1794:1864   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1860:1861   */\n  0x00\n    /* \"#utility.yul\":1857:1858   */\n  dup1\n    /* \"#utility.yul\":1850:1862   */\n  revert\n    /* \"#utility.yul\":1794:1864   */\ntag_61:\n    /* \"#utility.yul\":1693:1870   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1875:2253   */\ntag_7:\n    /* \"#utility.yul\":1963:1969   */\n  0x00\n    /* \"#utility.yul\":1971:1977   */\n  dup1\n    /* \"#utility.yul\":1979:1985   */\n  0x00\n    /* \"#utility.yul\":2032:2034   */\n  0x60\n    /* \"#utility.yul\":2020:2029   */\n  dup5\n    /* \"#utility.yul\":2011:2018   */\n  dup7\n    /* \"#utility.yul\":2007:2030   */\n  sub\n    /* \"#utility.yul\":2003:2035   */\n  slt\n    /* \"#utility.yul\":2000:2052   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2048:2049   */\n  0x00\n    /* \"#utility.yul\":2045:2046   */\n  dup1\n    /* \"#utility.yul\":2038:2050   */\n  revert\n    /* \"#utility.yul\":2000:2052   */\ntag_63:\n    /* \"#utility.yul\":2071:2111   */\n  tag_64\n    /* \"#utility.yul\":2101:2110   */\n  dup5\n    /* \"#utility.yul\":2071:2111   */\n  tag_33\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2061:2111   */\n  swap3\n  pop\n    /* \"#utility.yul\":2130:2179   */\n  tag_65\n    /* \"#utility.yul\":2175:2177   */\n  0x20\n    /* \"#utility.yul\":2164:2173   */\n  dup6\n    /* \"#utility.yul\":2160:2178   */\n  add\n    /* \"#utility.yul\":2130:2179   */\n  tag_33\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2120:2179   */\n  swap2\n  pop\n    /* \"#utility.yul\":2198:2247   */\n  tag_66\n    /* \"#utility.yul\":2243:2245   */\n  0x40\n    /* \"#utility.yul\":2232:2241   */\n  dup6\n    /* \"#utility.yul\":2228:2246   */\n  add\n    /* \"#utility.yul\":2198:2247   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2188:2247   */\n  swap1\n  pop\n    /* \"#utility.yul\":1875:2253   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2440:2568   */\ntag_29:\n    /* \"#utility.yul\":2480:2483   */\n  0x00\n    /* \"#utility.yul\":2511:2512   */\n  dup3\n    /* \"#utility.yul\":2507:2513   */\n  not\n    /* \"#utility.yul\":2504:2505   */\n  dup3\n    /* \"#utility.yul\":2501:2514   */\n  gt\n    /* \"#utility.yul\":2498:2537   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2517:2535   */\n  tag_70\n  tag_30\n  jump\t// in\ntag_70:\n  pop\n    /* \"#utility.yul\":2553:2562   */\n  add\n  swap1\n    /* \"#utility.yul\":2440:2568   */\n  jump\t// out\ntag_34:\n    /* \"BillionCash.sol\":186:5807  contract BillionCash is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BillionCash.sol\":186:5807  contract BillionCash is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7711c596\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xba0fb861\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xba0fb861\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd0d41fe1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xeaf98d23\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x7711c596\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x01c234a8\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_3:\n      tag_25\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n      dup2\n      jump\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":662:709  uint256 public constant PERCENTS_DIVIDER = 1000 */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BillionCash.sol\":1263:1350  function name() public pure returns (string memory) {... */\n    tag_4:\n        /* \"BillionCash.sol\":1333:1342  tokenName */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x0b\n      dup2\n      mstore\n      shl(0xab, 0x084d2d8d8d2dedc86c2e6d)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"BillionCash.sol\":1263:1350  function name() public pure returns (string memory) {... */\n    tag_29:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n        /* \"BillionCash.sol\":3135:3377  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_5:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n        /* \"#utility.yul\":1419:1433   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1412:1434   */\n      iszero\n        /* \"#utility.yul\":1394:1435   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1382:1384   */\n      0x20\n        /* \"#utility.yul\":1367:1385   */\n      add\n        /* \"BillionCash.sol\":3135:3377  function approve(address spender, uint256 value) public returns (bool) {... */\n      tag_27\n        /* \"#utility.yul\":1254:1441   */\n      jump\n        /* \"BillionCash.sol\":1552:1643  function totalSupply() public view returns (uint256) {... */\n    tag_6:\n        /* \"BillionCash.sol\":1623:1635  _totalSupply */\n      sload(0x03)\n        /* \"BillionCash.sol\":1552:1643  function totalSupply() public view returns (uint256) {... */\n      jump(tag_25)\n        /* \"BillionCash.sol\":3385:4681  function transferFrom(... */\n    tag_7:\n      tag_33\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"BillionCash.sol\":1457:1544  function decimals() public pure returns (uint8) {... */\n    tag_8:\n      mload(0x40)\n        /* \"BillionCash.sol\":506:508  18 */\n      0x12\n        /* \"#utility.yul\":2049:2085   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2037:2039   */\n      0x20\n        /* \"#utility.yul\":2022:2040   */\n      add\n        /* \"BillionCash.sol\":1457:1544  function decimals() public pure returns (uint8) {... */\n      tag_27\n        /* \"#utility.yul\":1907:2091   */\n      jump\n        /* \"BillionCash.sol\":4689:5059  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_9:\n      tag_33\n      tag_52\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"BillionCash.sol\":1651:1764  function balanceOf(address owner) public view returns (uint256) {... */\n    tag_10:\n      tag_25\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":1733:1756  _BCTokenBalances[owner] */\n      and\n        /* \"BillionCash.sol\":1706:1713  uint256 */\n      0x00\n        /* \"BillionCash.sol\":1733:1756  _BCTokenBalances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":1733:1749  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":1733:1756  _BCTokenBalances[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"BillionCash.sol\":1651:1764  function balanceOf(address owner) public view returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"BillionCash.sol\":258:309  mapping(address => uint256) public _BCTokenBalances */\n    tag_12:\n      tag_25\n      tag_63\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_63:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2494:2545   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2482:2484   */\n      0x20\n        /* \"#utility.yul\":2467:2485   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      tag_27\n        /* \"#utility.yul\":2348:2551   */\n      jump\n        /* \"BillionCash.sol\":1358:1449  function symbol() public pure returns (string memory) {... */\n    tag_14:\n        /* \"BillionCash.sol\":1430:1441  tokenSymbol */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup2\n      mstore\n      shl(0xf0, 0x4243)\n      0x20\n      dup3\n      add\n      mstore\n        /* \"BillionCash.sol\":1358:1449  function symbol() public pure returns (string memory) {... */\n      jump(tag_29)\n        /* \"BillionCash.sol\":5067:5447  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_15:\n      tag_33\n      tag_74\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n        /* \"BillionCash.sol\":1772:2956  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_16:\n      tag_33\n      tag_78\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"BillionCash.sol\":316:379  mapping(address => mapping(address => uint256)) public _allowed */\n    tag_17:\n      tag_25\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"BillionCash.sol\":5688:5804  function setDevAddress(address payable _devAddress) external onlyOwner {... */\n    tag_18:\n      tag_60\n      tag_87\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n        /* \"BillionCash.sol\":2964:3127  function allowance(address owner, address spender)... */\n    tag_19:\n      tag_25\n      tag_91\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3095:3110  _allowed[owner] */\n      swap2\n      dup3\n      and\n        /* \"BillionCash.sol\":3063:3070  uint256 */\n      0x00\n        /* \"BillionCash.sol\":3095:3110  _allowed[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3095:3103  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3095:3110  _allowed[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":3095:3119  _allowed[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"BillionCash.sol\":2964:3127  function allowance(address owner, address spender)... */\n      jump\n        /* \"BillionCash.sol\":716:756  uint256 public constant FEE_PERCENT = 50 */\n    tag_20:\n      tag_25\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":716:756  uint256 public constant FEE_PERCENT = 50 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_60\n      tag_98\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"BillionCash.sol\":3135:3377  function approve(address spender, uint256 value) public returns (bool) {... */\n    tag_36:\n        /* \"BillionCash.sol\":3200:3204  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3225:3246  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":3217:3247  require(spender != address(0)) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"BillionCash.sol\":3267:3277  msg.sender */\n      caller\n        /* \"BillionCash.sol\":3258:3278  _allowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3258:3266  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3258:3278  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3258:3287  _allowed[msg.sender][spender] */\n      dup9\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":3258:3295  _allowed[msg.sender][spender] = value */\n      dup7\n      swap1\n      sstore\n        /* \"BillionCash.sol\":3311:3347  Approval(msg.sender, spender, value) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup6\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3258:3287  _allowed[msg.sender][spender] */\n      swap2\n      swap3\n        /* \"BillionCash.sol\":3267:3277  msg.sender */\n      swap2\n        /* \"BillionCash.sol\":3311:3347  Approval(msg.sender, spender, value) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":3311:3347  Approval(msg.sender, spender, value) */\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":3365:3369  true */\n      0x01\n        /* \"BillionCash.sol\":3135:3377  function approve(address spender, uint256 value) public returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":3385:4681  function transferFrom(... */\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3532:3554  _BCTokenBalances[from] */\n      dup4\n      and\n        /* \"BillionCash.sol\":3498:3502  bool */\n      0x00\n        /* \"BillionCash.sol\":3532:3554  _BCTokenBalances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3532:3548  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3532:3554  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3523:3554  value <= _BCTokenBalances[from] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":3515:3555  require(value <= _BCTokenBalances[from]) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3583:3597  _allowed[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3583:3591  _allowed */\n      0x02\n        /* \"BillionCash.sol\":3583:3597  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":3598:3608  msg.sender */\n      caller\n        /* \"BillionCash.sol\":3583:3609  _allowed[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3574:3609  value <= _allowed[from][msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":3566:3610  require(value <= _allowed[from][msg.sender]) */\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3629:3645  to != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":3621:3646  require(to != address(0)) */\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3684:3706  _BCTokenBalances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3684:3700  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3684:3706  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3684:3717  _BCTokenBalances[from].sub(value) */\n      tag_110\n      swap1\n        /* \"BillionCash.sol\":3711:3716  value */\n      dup4\n        /* \"BillionCash.sol\":3684:3710  _BCTokenBalances[from].sub */\n      tag_111\n        /* \"BillionCash.sol\":3684:3717  _BCTokenBalances[from].sub(value) */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3659:3681  _BCTokenBalances[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3659:3675  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3659:3681  _BCTokenBalances[from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"BillionCash.sol\":3659:3717  _BCTokenBalances[from] = _BCTokenBalances[from].sub(value) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"BillionCash.sol\":3754:3798  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      tag_112\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":3754:3776  value.mul(FEE_PERCENT) */\n      tag_113\n        /* \"BillionCash.sol\":3754:3759  value */\n      dup6\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":3754:3763  value.mul */\n      tag_114\n        /* \"BillionCash.sol\":3754:3776  value.mul(FEE_PERCENT) */\n      jump\t// in\n    tag_113:\n        /* \"BillionCash.sol\":3754:3780  value.mul(FEE_PERCENT).div */\n      swap1\n      tag_115\n        /* \"BillionCash.sol\":3754:3798  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      jump\t// in\n    tag_112:\n        /* \"BillionCash.sol\":3730:3798  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      swap1\n      pop\n        /* \"BillionCash.sol\":3809:3833  uint256 tokensToTransfer */\n      0x00\n        /* \"BillionCash.sol\":3836:3940  value... */\n      tag_116\n        /* \"BillionCash.sol\":3730:3798  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":3836:3907  value... */\n      tag_118\n        /* \"BillionCash.sol\":3730:3798  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup2\n        /* \"BillionCash.sol\":3836:3907  value... */\n      dup2\n        /* \"BillionCash.sol\":3836:3841  value */\n      dup9\n        /* \"BillionCash.sol\":3730:3798  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":3836:3859  value... */\n      tag_111\n        /* \"BillionCash.sol\":3836:3874  value... */\n      jump\t// in\n    tag_118:\n        /* \"BillionCash.sol\":3836:3892  value... */\n      swap1\n      tag_111\n        /* \"BillionCash.sol\":3836:3907  value... */\n      jump\t// in\n        /* \"BillionCash.sol\":3836:3940  value... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3976:3996  _BCTokenBalances[to] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3976:3992  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3976:3996  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":3809:3940  uint256 tokensToTransfer = value... */\n      swap1\n      swap2\n      pop\n        /* \"BillionCash.sol\":3976:4018  _BCTokenBalances[to].add(tokensToTransfer) */\n      tag_119\n      swap1\n        /* \"BillionCash.sol\":3809:3940  uint256 tokensToTransfer = value... */\n      dup3\n        /* \"BillionCash.sol\":3976:4000  _BCTokenBalances[to].add */\n      tag_100\n        /* \"BillionCash.sol\":3976:4018  _BCTokenBalances[to].add(tokensToTransfer) */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":3953:3973  _BCTokenBalances[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":3953:3969  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":3953:3973  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":3953:4018  _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4079:4091  adminAddress */\n      sload(0x06)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4062:4092  _BCTokenBalances[adminAddress] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4062:4135  _BCTokenBalances[adminAddress].add(... */\n      tag_120\n      swap1\n        /* \"BillionCash.sol\":4111:4124  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4062:4096  _BCTokenBalances[adminAddress].add */\n      tag_100\n        /* \"BillionCash.sol\":4062:4135  _BCTokenBalances[adminAddress].add(... */\n      jump\t// in\n    tag_120:\n        /* \"BillionCash.sol\":4046:4058  adminAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4029:4059  _BCTokenBalances[adminAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4029:4045  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4029:4059  _BCTokenBalances[adminAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":4029:4135  _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4199:4214  marketingwallet */\n      sload(0x05)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4182:4215  _BCTokenBalances[marketingwallet] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4182:4258  _BCTokenBalances[marketingwallet].add(... */\n      tag_121\n      swap1\n        /* \"BillionCash.sol\":4234:4247  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4182:4219  _BCTokenBalances[marketingwallet].add */\n      tag_100\n        /* \"BillionCash.sol\":4182:4258  _BCTokenBalances[marketingwallet].add(... */\n      jump\t// in\n    tag_121:\n        /* \"BillionCash.sol\":4163:4178  marketingwallet */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4146:4179  _BCTokenBalances[marketingwallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4146:4162  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4146:4179  _BCTokenBalances[marketingwallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":4146:4258  _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4318:4329  pancakeswap */\n      sload(0x04)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":4301:4330  _BCTokenBalances[pancakeswap] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4301:4373  _BCTokenBalances[pancakeswap].add(... */\n      tag_122\n      swap1\n        /* \"BillionCash.sol\":4349:4362  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":4301:4334  _BCTokenBalances[pancakeswap].add */\n      tag_100\n        /* \"BillionCash.sol\":4301:4373  _BCTokenBalances[pancakeswap].add(... */\n      jump\t// in\n    tag_122:\n        /* \"BillionCash.sol\":4286:4297  pancakeswap */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":4269:4298  _BCTokenBalances[pancakeswap] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4269:4285  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":4269:4298  _BCTokenBalances[pancakeswap] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":4269:4373  _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(... */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"BillionCash.sol\":4413:4427  _allowed[from] */\n      swap2\n      dup10\n      and\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4413:4421  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4413:4427  _allowed[from] */\n      dup3\n      mstore\n      dup3\n      dup2\n      keccak256\n        /* \"BillionCash.sol\":4428:4438  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4413:4439  _allowed[from][msg.sender] */\n      dup3\n      mstore\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4413:4450  _allowed[from][msg.sender].sub(value) */\n      tag_123\n      swap1\n        /* \"BillionCash.sol\":4444:4449  value */\n      dup6\n        /* \"BillionCash.sol\":4413:4443  _allowed[from][msg.sender].sub */\n      tag_111\n        /* \"BillionCash.sol\":4413:4450  _allowed[from][msg.sender].sub(value) */\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4384:4398  _allowed[from] */\n      dup1\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4384:4392  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4384:4398  _allowed[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"BillionCash.sol\":4399:4409  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4384:4410  _allowed[from][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":4384:4450  _allowed[from][msg.sender] = _allowed[from][msg.sender].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":4489:4501  adminAddress */\n      sload(0x06)\n        /* \"BillionCash.sol\":4468:4517  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n      mload\n        /* \"BillionCash.sol\":4489:4501  adminAddress */\n      swap2\n      and\n      swap2\n        /* \"BillionCash.sol\":4399:4409  msg.sender */\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4468:4517  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n      tag_124\n      swap1\n        /* \"BillionCash.sol\":4503:4516  BCTokenForFee */\n      dup7\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"BillionCash.sol\":4468:4517  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":4554:4569  marketingwallet */\n      sload(0x05)\n        /* \"BillionCash.sol\":4533:4585  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4554:4569  marketingwallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":4542:4552  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4533:4585  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4533:4585  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":4622:4633  pancakeswap */\n      sload(0x04)\n        /* \"BillionCash.sol\":4601:4649  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4622:4633  pancakeswap */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":4610:4620  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":4601:4649  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4601:4649  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":4669:4673  true */\n      0x01\n      swap6\n        /* \"BillionCash.sol\":3385:4681  function transferFrom(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":4689:5059  function increaseAllowance(address spender, uint256 addedValue)... */\n    tag_53:\n        /* \"BillionCash.sol\":4787:4791  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4817:4838  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":4809:4839  require(spender != address(0)) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"BillionCash.sol\":4906:4916  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4897:4917  _allowed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4897:4905  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4897:4917  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4897:4926  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":4897:4942  _allowed[msg.sender][spender].add(addedValue) */\n      tag_130\n      swap1\n        /* \"BillionCash.sol\":4931:4941  addedValue */\n      dup4\n        /* \"BillionCash.sol\":4897:4930  _allowed[msg.sender][spender].add */\n      tag_100\n        /* \"BillionCash.sol\":4897:4942  _allowed[msg.sender][spender].add(addedValue) */\n      jump\t// in\n    tag_130:\n        /* \"BillionCash.sol\":4859:4869  msg.sender */\n      caller\n        /* \"BillionCash.sol\":4850:4870  _allowed[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"BillionCash.sol\":4850:4858  _allowed */\n      0x02\n        /* \"BillionCash.sol\":4850:4870  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":4850:4879  _allowed[msg.sender][spender] */\n      dup10\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":4850:4953  _allowed[msg.sender][spender] = (... */\n      dup6\n      swap1\n      sstore\n        /* \"BillionCash.sol\":4969:5029  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      swap4\n      dup5\n      mstore\n        /* \"BillionCash.sol\":4850:4879  _allowed[msg.sender][spender] */\n      swap1\n      swap3\n        /* \"BillionCash.sol\":4969:5029  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":4969:5029  Approval(msg.sender, spender, _allowed[msg.sender][spender]) */\n      tag_104\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"BillionCash.sol\":5067:5447  function decreaseAllowance(address spender, uint256 subtractedValue)... */\n    tag_75:\n        /* \"BillionCash.sol\":5170:5174  bool */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":5200:5221  spender != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":5192:5222  require(spender != address(0)) */\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n        /* \"BillionCash.sol\":5289:5299  msg.sender */\n      caller\n        /* \"BillionCash.sol\":5280:5300  _allowed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":5280:5288  _allowed */\n      0x02\n        /* \"BillionCash.sol\":5280:5300  _allowed[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":5280:5309  _allowed[msg.sender][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":5280:5330  _allowed[msg.sender][spender].sub(subtractedValue) */\n      tag_130\n      swap1\n        /* \"BillionCash.sol\":5314:5329  subtractedValue */\n      dup4\n        /* \"BillionCash.sol\":5280:5313  _allowed[msg.sender][spender].sub */\n      tag_111\n        /* \"BillionCash.sol\":5280:5330  _allowed[msg.sender][spender].sub(subtractedValue) */\n      jump\t// in\n        /* \"BillionCash.sol\":1772:2956  function transfer(address to, uint256 value) public returns (bool) {... */\n    tag_79:\n        /* \"BillionCash.sol\":1884:1894  msg.sender */\n      caller\n        /* \"BillionCash.sol\":1833:1837  bool */\n      0x00\n        /* \"BillionCash.sol\":1867:1895  _BCTokenBalances[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":1867:1883  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":1867:1895  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"BillionCash.sol\":1858:1895  value <= _BCTokenBalances[msg.sender] */\n      dup3\n      gt\n      iszero\n        /* \"BillionCash.sol\":1850:1896  require(value <= _BCTokenBalances[msg.sender]) */\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":1915:1931  to != address(0) */\n      dup4\n      and\n        /* \"BillionCash.sol\":1907:1932  require(to != address(0)) */\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n        /* \"BillionCash.sol\":1945:1966  uint256 BCTokenForFee */\n      0x00\n        /* \"BillionCash.sol\":1969:2013  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      tag_152\n        /* \"BillionCash.sol\":705:709  1000 */\n      0x03e8\n        /* \"BillionCash.sol\":1969:1991  value.mul(FEE_PERCENT) */\n      tag_113\n        /* \"BillionCash.sol\":1969:1974  value */\n      dup6\n        /* \"BillionCash.sol\":754:756  50 */\n      0x32\n        /* \"BillionCash.sol\":1969:1978  value.mul */\n      tag_114\n        /* \"BillionCash.sol\":1969:1991  value.mul(FEE_PERCENT) */\n      jump\t// in\n        /* \"BillionCash.sol\":1969:2013  value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n    tag_152:\n        /* \"BillionCash.sol\":1945:2013  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      swap1\n      pop\n        /* \"BillionCash.sol\":2024:2048  uint256 tokensToTransfer */\n      0x00\n        /* \"BillionCash.sol\":2051:2155  value... */\n      tag_154\n        /* \"BillionCash.sol\":1945:2013  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":2051:2122  value... */\n      tag_118\n        /* \"BillionCash.sol\":1945:2013  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup2\n        /* \"BillionCash.sol\":2051:2122  value... */\n      dup2\n        /* \"BillionCash.sol\":2051:2056  value */\n      dup9\n        /* \"BillionCash.sol\":1945:2013  uint256 BCTokenForFee = value.mul(FEE_PERCENT).div(PERCENTS_DIVIDER) */\n      dup3\n        /* \"BillionCash.sol\":2051:2074  value... */\n      tag_111\n        /* \"BillionCash.sol\":2051:2089  value... */\n      jump\t// in\n        /* \"BillionCash.sol\":2051:2155  value... */\n    tag_154:\n        /* \"BillionCash.sol\":2216:2226  msg.sender */\n      caller\n        /* \"BillionCash.sol\":2199:2227  _BCTokenBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2199:2215  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2199:2227  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2024:2155  uint256 tokensToTransfer = value... */\n      swap1\n      swap2\n      pop\n        /* \"BillionCash.sol\":2199:2238  _BCTokenBalances[msg.sender].sub(value) */\n      tag_157\n      swap1\n        /* \"BillionCash.sol\":2232:2237  value */\n      dup6\n        /* \"BillionCash.sol\":2199:2231  _BCTokenBalances[msg.sender].sub */\n      tag_111\n        /* \"BillionCash.sol\":2199:2238  _BCTokenBalances[msg.sender].sub(value) */\n      jump\t// in\n    tag_157:\n        /* \"BillionCash.sol\":2185:2195  msg.sender */\n      caller\n        /* \"BillionCash.sol\":2168:2196  _BCTokenBalances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2168:2184  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2168:2196  _BCTokenBalances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2168:2238  _BCTokenBalances[msg.sender] = _BCTokenBalances[msg.sender].sub(value) */\n      swap3\n      swap1\n      swap3\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2272:2292  _BCTokenBalances[to] */\n      dup8\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2272:2314  _BCTokenBalances[to].add(tokensToTransfer) */\n      tag_158\n      swap1\n        /* \"BillionCash.sol\":2297:2313  tokensToTransfer */\n      dup3\n        /* \"BillionCash.sol\":2272:2296  _BCTokenBalances[to].add */\n      tag_100\n        /* \"BillionCash.sol\":2272:2314  _BCTokenBalances[to].add(tokensToTransfer) */\n      jump\t// in\n    tag_158:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2249:2269  _BCTokenBalances[to] */\n      dup1\n      dup8\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2249:2265  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2249:2269  _BCTokenBalances[to] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2249:2314  _BCTokenBalances[to] = _BCTokenBalances[to].add(tokensToTransfer) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2375:2387  adminAddress */\n      sload(0x06)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2358:2388  _BCTokenBalances[adminAddress] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2358:2431  _BCTokenBalances[adminAddress].add(... */\n      tag_159\n      swap1\n        /* \"BillionCash.sol\":2407:2420  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2358:2392  _BCTokenBalances[adminAddress].add */\n      tag_100\n        /* \"BillionCash.sol\":2358:2431  _BCTokenBalances[adminAddress].add(... */\n      jump\t// in\n    tag_159:\n        /* \"BillionCash.sol\":2342:2354  adminAddress */\n      sload(0x06)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2325:2355  _BCTokenBalances[adminAddress] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2325:2341  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2325:2355  _BCTokenBalances[adminAddress] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2325:2431  _BCTokenBalances[adminAddress] = _BCTokenBalances[adminAddress].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2495:2510  marketingwallet */\n      sload(0x05)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2478:2511  _BCTokenBalances[marketingwallet] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2478:2554  _BCTokenBalances[marketingwallet].add(... */\n      tag_160\n      swap1\n        /* \"BillionCash.sol\":2530:2543  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2478:2515  _BCTokenBalances[marketingwallet].add */\n      tag_100\n        /* \"BillionCash.sol\":2478:2554  _BCTokenBalances[marketingwallet].add(... */\n      jump\t// in\n    tag_160:\n        /* \"BillionCash.sol\":2459:2474  marketingwallet */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2442:2475  _BCTokenBalances[marketingwallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2442:2458  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2442:2475  _BCTokenBalances[marketingwallet] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"BillionCash.sol\":2442:2554  _BCTokenBalances[marketingwallet] = _BCTokenBalances[marketingwallet].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2614:2625  pancakeswap */\n      sload(0x04)\n      swap1\n      swap2\n      and\n        /* \"BillionCash.sol\":2597:2626  _BCTokenBalances[pancakeswap] */\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"BillionCash.sol\":2597:2669  _BCTokenBalances[pancakeswap].add(... */\n      tag_161\n      swap1\n        /* \"BillionCash.sol\":2645:2658  BCTokenForFee */\n      dup4\n        /* \"BillionCash.sol\":2597:2630  _BCTokenBalances[pancakeswap].add */\n      tag_100\n        /* \"BillionCash.sol\":2597:2669  _BCTokenBalances[pancakeswap].add(... */\n      jump\t// in\n    tag_161:\n        /* \"BillionCash.sol\":2582:2593  pancakeswap */\n      sload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"BillionCash.sol\":2565:2594  _BCTokenBalances[pancakeswap] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2565:2581  _BCTokenBalances */\n      0x01\n        /* \"BillionCash.sol\":2565:2594  _BCTokenBalances[pancakeswap] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"BillionCash.sol\":2565:2669  _BCTokenBalances[pancakeswap] = _BCTokenBalances[pancakeswap].add(... */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"BillionCash.sol\":2687:2729  Transfer(msg.sender, to, tokensToTransfer) */\n      mload\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n        /* \"BillionCash.sol\":2687:2729  Transfer(msg.sender, to, tokensToTransfer) */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"BillionCash.sol\":2696:2706  msg.sender */\n      caller\n      swap2\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2687:2729  Transfer(msg.sender, to, tokensToTransfer) */\n      swap2\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2687:2729  Transfer(msg.sender, to, tokensToTransfer) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2766:2778  adminAddress */\n      sload(0x06)\n        /* \"BillionCash.sol\":2745:2794  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2766:2778  adminAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2754:2764  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2745:2794  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2745:2794  Transfer(msg.sender, adminAddress, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2831:2846  marketingwallet */\n      sload(0x05)\n        /* \"BillionCash.sol\":2810:2862  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2831:2846  marketingwallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2819:2829  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2810:2862  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2810:2862  Transfer(msg.sender, marketingwallet, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"BillionCash.sol\":2899:2910  pancakeswap */\n      sload(0x04)\n        /* \"BillionCash.sol\":2878:2926  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"BillionCash.sol\":2899:2910  pancakeswap */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"BillionCash.sol\":2887:2897  msg.sender */\n      caller\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"BillionCash.sol\":2878:2926  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"BillionCash.sol\":2878:2926  Transfer(msg.sender, pancakeswap, BCTokenForFee) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n      pop\n        /* \"BillionCash.sol\":2944:2948  true */\n      0x01\n      swap5\n        /* \"BillionCash.sol\":1772:2956  function transfer(address to, uint256 value) public returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"BillionCash.sol\":5688:5804  function setDevAddress(address payable _devAddress) external onlyOwner {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_169:\n        /* \"BillionCash.sol\":5770:5782  adminAddress */\n      0x06\n        /* \"BillionCash.sol\":5770:5796  adminAddress = _devAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"BillionCash.sol\":5688:5804  function setDevAddress(address payable _devAddress) external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3772:3774   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3754:3775   */\n      mstore\n        /* \"#utility.yul\":3811:3813   */\n      0x26\n        /* \"#utility.yul\":3791:3809   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3784:3814   */\n      mstore\n        /* \"#utility.yul\":3850:3884   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":3830:3848   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3823:3885   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3901:3919   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3894:3930   */\n      mstore\n        /* \"#utility.yul\":3947:3966   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_138\n        /* \"#utility.yul\":3570:3972   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_182\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_188\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_191\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_184\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_194\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:793   */\n    tag_32:\n        /* \"#utility.yul\":308:312   */\n      0x00\n        /* \"#utility.yul\":337:339   */\n      0x20\n        /* \"#utility.yul\":366:368   */\n      dup1\n        /* \"#utility.yul\":355:364   */\n      dup4\n        /* \"#utility.yul\":348:369   */\n      mstore\n        /* \"#utility.yul\":398:404   */\n      dup4\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":441:447   */\n      dup1\n        /* \"#utility.yul\":436:438   */\n      dup3\n        /* \"#utility.yul\":425:434   */\n      dup6\n        /* \"#utility.yul\":421:439   */\n      add\n        /* \"#utility.yul\":414:448   */\n      mstore\n        /* \"#utility.yul\":466:467   */\n      0x00\n        /* \"#utility.yul\":476:616   */\n    tag_202:\n        /* \"#utility.yul\":490:496   */\n      dup2\n        /* \"#utility.yul\":487:488   */\n      dup2\n        /* \"#utility.yul\":484:497   */\n      lt\n        /* \"#utility.yul\":476:616   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":585:599   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":581:604   */\n      dup4\n      add\n        /* \"#utility.yul\":575:605   */\n      mload\n        /* \"#utility.yul\":551:568   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":570:572   */\n      0x40\n        /* \"#utility.yul\":547:573   */\n      add\n        /* \"#utility.yul\":540:606   */\n      mstore\n        /* \"#utility.yul\":505:515   */\n      dup3\n      add\n        /* \"#utility.yul\":476:616   */\n      jump(tag_202)\n    tag_204:\n        /* \"#utility.yul\":634:640   */\n      dup2\n        /* \"#utility.yul\":631:632   */\n      dup2\n        /* \"#utility.yul\":628:641   */\n      gt\n        /* \"#utility.yul\":625:716   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":699:701   */\n      0x40\n        /* \"#utility.yul\":690:696   */\n      dup4\n        /* \"#utility.yul\":679:688   */\n      dup8\n        /* \"#utility.yul\":675:697   */\n      add\n        /* \"#utility.yul\":671:702   */\n      add\n        /* \"#utility.yul\":664:706   */\n      mstore\n        /* \"#utility.yul\":625:716   */\n    tag_205:\n      pop\n        /* \"#utility.yul\":777:779   */\n      0x1f\n        /* \"#utility.yul\":756:771   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":752:781   */\n      and\n        /* \"#utility.yul\":737:782   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":784:786   */\n      0x40\n        /* \"#utility.yul\":733:787   */\n      add\n      swap4\n        /* \"#utility.yul\":196:793   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":798:929   */\n    tag_197:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":873:904   */\n      dup2\n      and\n        /* \"#utility.yul\":863:905   */\n      dup2\n      eq\n        /* \"#utility.yul\":853:923   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":919:920   */\n      0x00\n        /* \"#utility.yul\":916:917   */\n      dup1\n        /* \"#utility.yul\":909:921   */\n      revert\n        /* \"#utility.yul\":934:1249   */\n    tag_35:\n        /* \"#utility.yul\":1002:1008   */\n      0x00\n        /* \"#utility.yul\":1010:1016   */\n      dup1\n        /* \"#utility.yul\":1063:1065   */\n      0x40\n        /* \"#utility.yul\":1051:1060   */\n      dup4\n        /* \"#utility.yul\":1042:1049   */\n      dup6\n        /* \"#utility.yul\":1038:1061   */\n      sub\n        /* \"#utility.yul\":1034:1066   */\n      slt\n        /* \"#utility.yul\":1031:1083   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":1079:1080   */\n      0x00\n        /* \"#utility.yul\":1076:1077   */\n      dup1\n        /* \"#utility.yul\":1069:1081   */\n      revert\n        /* \"#utility.yul\":1031:1083   */\n    tag_209:\n        /* \"#utility.yul\":1118:1127   */\n      dup3\n        /* \"#utility.yul\":1105:1128   */\n      calldataload\n        /* \"#utility.yul\":1137:1168   */\n      tag_210\n        /* \"#utility.yul\":1162:1167   */\n      dup2\n        /* \"#utility.yul\":1137:1168   */\n      tag_197\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1187:1192   */\n      swap5\n        /* \"#utility.yul\":1239:1241   */\n      0x20\n        /* \"#utility.yul\":1224:1242   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1211:1243   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":934:1249   */\n      jump\t// out\n        /* \"#utility.yul\":1446:1902   */\n    tag_44:\n        /* \"#utility.yul\":1523:1529   */\n      0x00\n        /* \"#utility.yul\":1531:1537   */\n      dup1\n        /* \"#utility.yul\":1539:1545   */\n      0x00\n        /* \"#utility.yul\":1592:1594   */\n      0x60\n        /* \"#utility.yul\":1580:1589   */\n      dup5\n        /* \"#utility.yul\":1571:1578   */\n      dup7\n        /* \"#utility.yul\":1567:1590   */\n      sub\n        /* \"#utility.yul\":1563:1595   */\n      slt\n        /* \"#utility.yul\":1560:1612   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1608:1609   */\n      0x00\n        /* \"#utility.yul\":1605:1606   */\n      dup1\n        /* \"#utility.yul\":1598:1610   */\n      revert\n        /* \"#utility.yul\":1560:1612   */\n    tag_213:\n        /* \"#utility.yul\":1647:1656   */\n      dup4\n        /* \"#utility.yul\":1634:1657   */\n      calldataload\n        /* \"#utility.yul\":1666:1697   */\n      tag_214\n        /* \"#utility.yul\":1691:1696   */\n      dup2\n        /* \"#utility.yul\":1666:1697   */\n      tag_197\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":1716:1721   */\n      swap3\n      pop\n        /* \"#utility.yul\":1773:1775   */\n      0x20\n        /* \"#utility.yul\":1758:1776   */\n      dup5\n      add\n        /* \"#utility.yul\":1745:1777   */\n      calldataload\n        /* \"#utility.yul\":1786:1819   */\n      tag_215\n        /* \"#utility.yul\":1745:1777   */\n      dup2\n        /* \"#utility.yul\":1786:1819   */\n      tag_197\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":1446:1902   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1838:1845   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1892:1894   */\n      0x40\n        /* \"#utility.yul\":1877:1895   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1864:1896   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1446:1902   */\n      jump\t// out\n        /* \"#utility.yul\":2096:2343   */\n    tag_57:\n        /* \"#utility.yul\":2155:2161   */\n      0x00\n        /* \"#utility.yul\":2208:2210   */\n      0x20\n        /* \"#utility.yul\":2196:2205   */\n      dup3\n        /* \"#utility.yul\":2187:2194   */\n      dup5\n        /* \"#utility.yul\":2183:2206   */\n      sub\n        /* \"#utility.yul\":2179:2211   */\n      slt\n        /* \"#utility.yul\":2176:2228   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":2224:2225   */\n      0x00\n        /* \"#utility.yul\":2221:2222   */\n      dup1\n        /* \"#utility.yul\":2214:2226   */\n      revert\n        /* \"#utility.yul\":2176:2228   */\n    tag_218:\n        /* \"#utility.yul\":2263:2272   */\n      dup2\n        /* \"#utility.yul\":2250:2273   */\n      calldataload\n        /* \"#utility.yul\":2282:2313   */\n      tag_184\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2282:2313   */\n      tag_197\n      jump\t// in\n        /* \"#utility.yul\":2556:2944   */\n    tag_83:\n        /* \"#utility.yul\":2624:2630   */\n      0x00\n        /* \"#utility.yul\":2632:2638   */\n      dup1\n        /* \"#utility.yul\":2685:2687   */\n      0x40\n        /* \"#utility.yul\":2673:2682   */\n      dup4\n        /* \"#utility.yul\":2664:2671   */\n      dup6\n        /* \"#utility.yul\":2660:2683   */\n      sub\n        /* \"#utility.yul\":2656:2688   */\n      slt\n        /* \"#utility.yul\":2653:2705   */\n      iszero\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2698:2699   */\n      dup1\n        /* \"#utility.yul\":2691:2703   */\n      revert\n        /* \"#utility.yul\":2653:2705   */\n    tag_222:\n        /* \"#utility.yul\":2740:2749   */\n      dup3\n        /* \"#utility.yul\":2727:2750   */\n      calldataload\n        /* \"#utility.yul\":2759:2790   */\n      tag_223\n        /* \"#utility.yul\":2784:2789   */\n      dup2\n        /* \"#utility.yul\":2759:2790   */\n      tag_197\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2809:2814   */\n      swap2\n      pop\n        /* \"#utility.yul\":2866:2868   */\n      0x20\n        /* \"#utility.yul\":2851:2869   */\n      dup4\n      add\n        /* \"#utility.yul\":2838:2870   */\n      calldataload\n        /* \"#utility.yul\":2879:2912   */\n      tag_224\n        /* \"#utility.yul\":2838:2870   */\n      dup2\n        /* \"#utility.yul\":2879:2912   */\n      tag_197\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":2931:2938   */\n      dup1\n        /* \"#utility.yul\":2921:2938   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2556:2944   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3209:3565   */\n    tag_139:\n        /* \"#utility.yul\":3411:3413   */\n      0x20\n        /* \"#utility.yul\":3393:3414   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3430:3448   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3423:3453   */\n      mstore\n        /* \"#utility.yul\":3489:3523   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":3484:3486   */\n      0x40\n        /* \"#utility.yul\":3469:3487   */\n      dup3\n      add\n        /* \"#utility.yul\":3462:3524   */\n      mstore\n        /* \"#utility.yul\":3556:3558   */\n      0x60\n        /* \"#utility.yul\":3541:3559   */\n      add\n      swap1\n        /* \"#utility.yul\":3209:3565   */\n      jump\t// out\n        /* \"#utility.yul\":3977:4104   */\n    tag_198:\n        /* \"#utility.yul\":4038:4048   */\n      0x4e487b71\n        /* \"#utility.yul\":4033:4036   */\n      0xe0\n        /* \"#utility.yul\":4029:4049   */\n      shl\n        /* \"#utility.yul\":4026:4027   */\n      0x00\n        /* \"#utility.yul\":4019:4050   */\n      mstore\n        /* \"#utility.yul\":4069:4073   */\n      0x11\n        /* \"#utility.yul\":4066:4067   */\n      0x04\n        /* \"#utility.yul\":4059:4074   */\n      mstore\n        /* \"#utility.yul\":4093:4097   */\n      0x24\n        /* \"#utility.yul\":4090:4091   */\n      0x00\n        /* \"#utility.yul\":4083:4098   */\n      revert\n        /* \"#utility.yul\":4109:4237   */\n    tag_185:\n        /* \"#utility.yul\":4149:4152   */\n      0x00\n        /* \"#utility.yul\":4180:4181   */\n      dup3\n        /* \"#utility.yul\":4176:4182   */\n      not\n        /* \"#utility.yul\":4173:4174   */\n      dup3\n        /* \"#utility.yul\":4170:4183   */\n      gt\n        /* \"#utility.yul\":4167:4206   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":4186:4204   */\n      tag_233\n      tag_198\n      jump\t// in\n    tag_233:\n      pop\n        /* \"#utility.yul\":4222:4231   */\n      add\n      swap1\n        /* \"#utility.yul\":4109:4237   */\n      jump\t// out\n        /* \"#utility.yul\":4242:4367   */\n    tag_188:\n        /* \"#utility.yul\":4282:4286   */\n      0x00\n        /* \"#utility.yul\":4310:4311   */\n      dup3\n        /* \"#utility.yul\":4307:4308   */\n      dup3\n        /* \"#utility.yul\":4304:4312   */\n      lt\n        /* \"#utility.yul\":4301:4335   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":4315:4333   */\n      tag_236\n      tag_198\n      jump\t// in\n    tag_236:\n      pop\n        /* \"#utility.yul\":4352:4361   */\n      sub\n      swap1\n        /* \"#utility.yul\":4242:4367   */\n      jump\t// out\n        /* \"#utility.yul\":4372:4540   */\n    tag_191:\n        /* \"#utility.yul\":4412:4419   */\n      0x00\n        /* \"#utility.yul\":4478:4479   */\n      dup2\n        /* \"#utility.yul\":4474:4475   */\n      0x00\n        /* \"#utility.yul\":4470:4476   */\n      not\n        /* \"#utility.yul\":4466:4480   */\n      div\n        /* \"#utility.yul\":4463:4464   */\n      dup4\n        /* \"#utility.yul\":4460:4481   */\n      gt\n        /* \"#utility.yul\":4455:4456   */\n      dup3\n        /* \"#utility.yul\":4448:4457   */\n      iszero\n        /* \"#utility.yul\":4441:4458   */\n      iszero\n        /* \"#utility.yul\":4437:4482   */\n      and\n        /* \"#utility.yul\":4434:4505   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":4485:4503   */\n      tag_239\n      tag_198\n      jump\t// in\n    tag_239:\n      pop\n        /* \"#utility.yul\":4525:4534   */\n      mul\n      swap1\n        /* \"#utility.yul\":4372:4540   */\n      jump\t// out\n        /* \"#utility.yul\":4545:4762   */\n    tag_194:\n        /* \"#utility.yul\":4585:4586   */\n      0x00\n        /* \"#utility.yul\":4611:4612   */\n      dup3\n        /* \"#utility.yul\":4601:4733   */\n      tag_241\n      jumpi\n        /* \"#utility.yul\":4655:4665   */\n      0x4e487b71\n        /* \"#utility.yul\":4650:4653   */\n      0xe0\n        /* \"#utility.yul\":4646:4666   */\n      shl\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4636:4667   */\n      mstore\n        /* \"#utility.yul\":4690:4694   */\n      0x12\n        /* \"#utility.yul\":4687:4688   */\n      0x04\n        /* \"#utility.yul\":4680:4695   */\n      mstore\n        /* \"#utility.yul\":4718:4722   */\n      0x24\n        /* \"#utility.yul\":4715:4716   */\n      0x00\n        /* \"#utility.yul\":4708:4723   */\n      revert\n        /* \"#utility.yul\":4601:4733   */\n    tag_241:\n      pop\n        /* \"#utility.yul\":4747:4756   */\n      div\n      swap1\n        /* \"#utility.yul\":4545:4762   */\n      jump\t// out\n    stop\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n\n    auxdata: 0xa264697066735822122059cfa94ac433e7bef5e454eca1b19839397a77e1db08153a09338df6e7943cf064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_531": {
									"entryPoint": null,
									"id": 531,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_1060": {
									"entryPoint": 257,
									"id": 1060,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 177,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_302": {
									"entryPoint": 412,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2570:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:358:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "220:16:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "235:1:4",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "224:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:16:4",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "254:7:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "245:5:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:13:4",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "278:5:4"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "270:4:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "334:228:4",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "379:22:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "381:16:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "381:18:4"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "381:18:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "354:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "368:1:4",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "364:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "364:6:4"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "372:4:4"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "360:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "360:17:4"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "351:2:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "351:27:4"
																		},
																		"nodeType": "YulIf",
																		"src": "348:53:4"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "440:29:4",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "442:25:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "455:5:4"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "462:4:4"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "451:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "451:16:4"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "442:5:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "421:8:4"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "431:7:4"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "417:22:4"
																		},
																		"nodeType": "YulIf",
																		"src": "414:55:4"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "482:23:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "494:4:4"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "500:4:4"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "490:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "490:15:4"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "482:4:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "518:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "534:7:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "543:8:4"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "530:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:22:4"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "518:8:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "303:8:4"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "313:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "300:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "300:21:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "322:3:4",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "296:3:4",
																"statements": []
															},
															"src": "292:270:4"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "174:5:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "181:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "194:5:4",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "201:4:4",
														"type": ""
													}
												],
												"src": "146:422:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "632:747:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "670:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "684:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "693:1:4",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "684:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "707:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "652:8:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "645:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:16:4"
															},
															"nodeType": "YulIf",
															"src": "642:80:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "755:52:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "769:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "778:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "769:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "792:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "741:4:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "734:12:4"
															},
															"nodeType": "YulIf",
															"src": "731:76:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "843:52:4",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "857:10:4",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:4",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "880:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "836:59:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "911:123:4",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "946:22:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "948:16:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "948:18:4"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "948:18:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "931:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "941:3:4",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "928:2:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "928:17:4"
																				},
																				"nodeType": "YulIf",
																				"src": "925:43:4"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "981:25:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "994:8:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1004:1:4",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "990:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "990:16:4"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "981:5:4"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "1019:5:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "904:130:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "909:1:4",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "823:4:4"
															},
															"nodeType": "YulSwitch",
															"src": "816:218:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1132:70:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1146:28:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "1159:4:4"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "1165:8:4"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "1155:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:19:4"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "1146:5:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "1187:5:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1056:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1062:2:4",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1053:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1053:12:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1070:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1080:2:4",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1067:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1067:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1049:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1049:35:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "1093:4:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1099:3:4",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1090:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1090:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "1108:8:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1118:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "1105:2:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1105:16:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1086:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:36:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1046:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1046:77:4"
															},
															"nodeType": "YulIf",
															"src": "1043:159:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1211:57:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1253:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1259:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "1234:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:34:4"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "1215:7:4",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "1224:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1313:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1315:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1315:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1315:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1283:7:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1300:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1296:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1296:6:4"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "1304:6:4"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "1292:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1292:19:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1280:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1280:32:4"
															},
															"nodeType": "YulIf",
															"src": "1277:58:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1344:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "1357:7:4"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "1366:6:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:20:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1344:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "603:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "609:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "622:5:4",
														"type": ""
													}
												],
												"src": "573:806:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1454:61:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1464:45:4",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "1494:4:4"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "1500:8:4"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "1473:20:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1473:36:4"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "1464:5:4"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "1425:4:4",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "1431:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "1444:5:4",
														"type": ""
													}
												],
												"src": "1384:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1572:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1631:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1633:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1633:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1603:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1596:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1596:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1589:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1589:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1611:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1622:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1618:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1618:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "1626:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "1614:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1614:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1608:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1608:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1585:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:45:4"
															},
															"nodeType": "YulIf",
															"src": "1582:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1662:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1677:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1680:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1673:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1673:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "1662:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1551:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1554:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1560:7:4",
														"type": ""
													}
												],
												"src": "1520:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1753:117:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1763:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1778:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1772:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1763:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1860:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1850:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1850:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1850:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1807:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1818:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1833:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1838:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1829:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1829:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1842:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1825:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1825:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1814:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1814:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1804:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1804:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:50:4"
															},
															"nodeType": "YulIf",
															"src": "1794:70:4"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1732:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1743:5:4",
														"type": ""
													}
												],
												"src": "1693:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1990:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2036:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2048:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2038:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2011:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2020:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2007:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2032:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2003:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2003:32:4"
															},
															"nodeType": "YulIf",
															"src": "2000:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2061:50:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2071:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2071:40:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2061:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2120:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2164:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2160:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2160:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2130:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2130:49:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2188:59:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2232:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2243:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2228:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2228:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2198:29:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2198:49:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2188:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1940:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1951:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1963:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1971:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1979:6:4",
														"type": ""
													}
												],
												"src": "1875:378:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2359:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2369:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2381:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2377:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2377:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2369:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2422:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2404:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2404:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2404:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2328:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2339:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:4",
														"type": ""
													}
												],
												"src": "2258:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2488:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2515:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2517:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2517:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2517:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2504:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2511:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2507:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2501:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:13:4"
															},
															"nodeType": "YulIf",
															"src": "2498:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2546:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2557:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2560:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2553:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2553:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2546:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2471:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2474:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2480:3:4",
														"type": ""
													}
												],
												"src": "2440:128:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052620000126012600a620002c6565b620000209061c350620002d4565b6003553480156200003057600080fd5b50604051620010a6380380620010a6833981016040819052620000539162000313565b6200005e33620000b1565b600680546001600160a01b038086166001600160a01b03199283168117909355600580548683169084161790556004805491851691909216179055600354620000a8919062000101565b50505062000378565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b806200010c57600080fd5b6001600160a01b0382166000908152600160209081526040909120546200013e91839062000a596200019c821b17901c565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001909085815260200190565b60405180910390a35050565b6000620001aa82846200035d565b90505b92915050565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200020a578160001904821115620001ee57620001ee620001b3565b80851615620001fc57918102915b93841c9390800290620001ce565b509250929050565b6000826200022357506001620001ad565b816200023257506000620001ad565b81600181146200024b5760028114620002565762000276565b6001915050620001ad565b60ff8411156200026a576200026a620001b3565b50506001821b620001ad565b5060208310610133831016604e8410600b84101617156200029b575081810a620001ad565b620002a78383620001c9565b8060001904821115620002be57620002be620001b3565b029392505050565b6000620001aa838362000212565b6000816000190483118215151615620002f157620002f1620001b3565b500290565b80516001600160a01b03811681146200030e57600080fd5b919050565b6000806000606084860312156200032957600080fd5b6200033484620002f6565b92506200034460208501620002f6565b91506200035460408501620002f6565b90509250925092565b60008219821115620003735762000373620001b3565b500190565b610d1e80620003886000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637711c596116100ad578063ba0fb86111610071578063ba0fb86114610284578063d0d41fe1146102af578063dd62ed3e146102c2578063eaf98d23146102fb578063f2fde38b1461030357600080fd5b80637711c596146102055780638da5cb5b1461022557806395d89b4114610240578063a457c2d71461025e578063a9059cbb1461027157600080fd5b806323b872dd116100f457806323b872dd1461019d578063313ce567146101b057806339509351146101bf57806370a08231146101d2578063715018a6146101fb57600080fd5b806301c234a81461012657806306fdde0314610142578063095ea7b31461017257806318160ddd14610195575b600080fd5b61012f6103e881565b6040519081526020015b60405180910390f35b60408051808201909152600b81526a084d2d8d8d2dedc86c2e6d60ab1b60208201525b6040516101399190610ae0565b610185610180366004610b4a565b610316565b6040519015158152602001610139565b60035461012f565b6101856101ab366004610b76565b610390565b60405160128152602001610139565b6101856101cd366004610b4a565b610633565b61012f6101e0366004610bb7565b6001600160a01b031660009081526001602052604090205490565b6102036106cd565b005b61012f610213366004610bb7565b60016020526000908152604090205481565b6000546040516001600160a01b039091168152602001610139565b604080518082019091526002815261424360f01b6020820152610165565b61018561026c366004610b4a565b61070c565b61018561027f366004610b4a565b61074f565b61012f610292366004610bd4565b600260209081526000928352604080842090915290825290205481565b6102036102bd366004610bb7565b610972565b61012f6102d0366004610bd4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61012f603281565b610203610311366004610bb7565b6109be565b60006001600160a01b03831661032b57600080fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b0383166000908152600160205260408120548211156103b557600080fd5b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156103e557600080fd5b6001600160a01b0383166103f857600080fd5b6001600160a01b03841660009081526001602052604090205461041b9083610a6c565b6001600160a01b03851660009081526001602052604081209190915561044e6103e8610448856032610a78565b90610a84565b905060006104688261046281818882610a6c565b90610a6c565b6001600160a01b03861660009081526001602052604090205490915061048e9082610a59565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546104c09083610a59565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546104f59083610a59565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461052a9083610a59565b6004546001600160a01b03908116600090815260016020908152604080832094909455918916815260028252828120338252909152205461056b9085610a6c565b6001600160a01b0380881660009081526002602090815260408083203380855292529182902093909355600654905191169190600080516020610cc9833981519152906105bb9086815260200190565b60405180910390a36005546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a350600195945050505050565b60006001600160a01b03831661064857600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546106769083610a59565b3360008181526002602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161037f565b6000546001600160a01b031633146107005760405162461bcd60e51b81526004016106f790610c0d565b60405180910390fd5b61070a6000610a90565b565b60006001600160a01b03831661072157600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546106769083610a6c565b3360009081526001602052604081205482111561076b57600080fd5b6001600160a01b03831661077e57600080fd5b60006107916103e8610448856032610a78565b905060006107a58261046281818882610a6c565b336000908152600160205260409020549091506107c29085610a6c565b33600090815260016020526040808220929092556001600160a01b038716815220546107ee9082610a59565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546108209083610a59565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546108559083610a59565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461088a9083610a59565b6004546001600160a01b039081166000908152600160209081526040918290209390935551838152908716913391600080516020610cc9833981519152910160405180910390a36006546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36005546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a3506001949350505050565b6000546001600160a01b0316331461099c5760405162461bcd60e51b81526004016106f790610c0d565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146109e85760405162461bcd60e51b81526004016106f790610c0d565b6001600160a01b038116610a4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f7565b610a5681610a90565b50565b6000610a658284610c58565b9392505050565b6000610a658284610c70565b6000610a658284610c87565b6000610a658284610ca6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610b0d57858101830151858201604001528201610af1565b81811115610b1f576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610a5657600080fd5b60008060408385031215610b5d57600080fd5b8235610b6881610b35565b946020939093013593505050565b600080600060608486031215610b8b57600080fd5b8335610b9681610b35565b92506020840135610ba681610b35565b929592945050506040919091013590565b600060208284031215610bc957600080fd5b8135610a6581610b35565b60008060408385031215610be757600080fd5b8235610bf281610b35565b91506020830135610c0281610b35565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c6b57610c6b610c42565b500190565b600082821015610c8257610c82610c42565b500390565b6000816000190483118215151615610ca157610ca1610c42565b500290565b600082610cc357634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122059cfa94ac433e7bef5e454eca1b19839397a77e1db08153a09338df6e7943cf064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH3 0x12 PUSH1 0x12 PUSH1 0xA PUSH3 0x2C6 JUMP JUMPDEST PUSH3 0x20 SWAP1 PUSH2 0xC350 PUSH3 0x2D4 JUMP JUMPDEST PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10A6 CODESIZE SUB DUP1 PUSH3 0x10A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x53 SWAP2 PUSH3 0x313 JUMP JUMPDEST PUSH3 0x5E CALLER PUSH3 0xB1 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x5 DUP1 SLOAD DUP7 DUP4 AND SWAP1 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP2 DUP6 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH3 0xA8 SWAP2 SWAP1 PUSH3 0x101 JUMP JUMPDEST POP POP POP PUSH3 0x378 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 PUSH3 0x10C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 SLOAD PUSH3 0x13E SWAP2 DUP4 SWAP1 PUSH3 0xA59 PUSH3 0x19C DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH3 0x190 SWAP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA DUP3 DUP5 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x20A JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1EE PUSH3 0x1B3 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x1FC JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x1CE JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x223 JUMPI POP PUSH1 0x1 PUSH3 0x1AD JUMP JUMPDEST DUP2 PUSH3 0x232 JUMPI POP PUSH1 0x0 PUSH3 0x1AD JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x24B JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x256 JUMPI PUSH3 0x276 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1AD JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x26A JUMPI PUSH3 0x26A PUSH3 0x1B3 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x1AD JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x29B JUMPI POP DUP2 DUP2 EXP PUSH3 0x1AD JUMP JUMPDEST PUSH3 0x2A7 DUP4 DUP4 PUSH3 0x1C9 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x2BE JUMPI PUSH3 0x2BE PUSH3 0x1B3 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1AA DUP4 DUP4 PUSH3 0x212 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x2F1 JUMPI PUSH3 0x2F1 PUSH3 0x1B3 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x334 DUP5 PUSH3 0x2F6 JUMP JUMPDEST SWAP3 POP PUSH3 0x344 PUSH1 0x20 DUP6 ADD PUSH3 0x2F6 JUMP JUMPDEST SWAP2 POP PUSH3 0x354 PUSH1 0x40 DUP6 ADD PUSH3 0x2F6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x373 JUMPI PUSH3 0x373 PUSH3 0x1B3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0xD1E DUP1 PUSH3 0x388 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7711C596 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBA0FB861 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBA0FB861 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xEAF98D23 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7711C596 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x84D2D8D8D2DEDC86C2E6D PUSH1 0xAB SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4243 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x165 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x185 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x12F PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12F PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x44E PUSH2 0x3E8 PUSH2 0x448 DUP6 PUSH1 0x32 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x462 DUP2 DUP2 DUP9 DUP3 PUSH2 0xA6C JUMP JUMPDEST SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x48E SWAP1 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C0 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4F5 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x52A SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x56B SWAP1 DUP6 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5BB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x676 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70A PUSH1 0x0 PUSH2 0xA90 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x676 SWAP1 DUP4 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x3E8 PUSH2 0x448 DUP6 PUSH1 0x32 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A5 DUP3 PUSH2 0x462 DUP2 DUP2 DUP9 DUP3 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x7C2 SWAP1 DUP6 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EE SWAP1 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x820 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x855 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x88A SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0xA56 DUP2 PUSH2 0xA90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB0D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAF1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB68 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB96 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xBA6 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA65 DUP2 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xBF2 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC02 DUP2 PUSH2 0xB35 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0xC42 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0xC42 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA1 PUSH2 0xC42 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xCF 0xA9 0x4A 0xC4 CALLER 0xE7 0xBE CREATE2 0xE4 SLOAD 0xEC LOG1 0xB1 SWAP9 CODECOPY CODECOPY PUSH27 0x77E1DB08153A09338DF6E7943CF064736F6C634300080A00330000 ",
							"sourceMap": "186:5621:3:-:0;;;546:26;506:2;546;:26;:::i;:::-;538:34;;:5;:34;:::i;:::-;515:57;;965:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:1;921:18:0;:32::i;:::-;1093:12:3;:28;;-1:-1:-1;;;;;1093:28:3;;;-1:-1:-1;;;;;;1093:28:3;;;;;;;;1132:15;:34;;;;;;;;;;;1177:11;:26;;;;;;;;;;;;1234:12;;1214:33;;1093:28;1214:5;:33::i;:::-;965:290;;;186:5621;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;5455:225:3:-;5531:11;5523:20;;;;;;-1:-1:-1;;;;;5582:25:3;;;;;;:16;:25;;;;;;;;;:37;;5612:6;;5582:29;;;;;:37;;:::i;:::-;-1:-1:-1;;;;;5554:25:3;;;;;;:16;:25;;;;;;:65;;;;5635:37;;5554:25;;;5635:37;;;;5665:6;2404:25:4;;2392:2;2377:18;;2258:177;5635:37:3;;;;;;;;5455:225;;:::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;;2755:96;;;;;:::o;14:127:4:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:4;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:4;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:4;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:4;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;573:806;-1:-1:-1;;;573:806:4:o;1384:131::-;1444:5;1473:36;1500:8;1494:4;1473:36;:::i;1520:168::-;1560:7;1626:1;1622;1618:6;1614:14;1611:1;1608:21;1603:1;1596:9;1589:17;1585:45;1582:71;;;1633:18;;:::i;:::-;-1:-1:-1;1673:9:4;;1520:168::o;1693:177::-;1772:13;;-1:-1:-1;;;;;1814:31:4;;1804:42;;1794:70;;1860:1;1857;1850:12;1794:70;1693:177;;;:::o;1875:378::-;1963:6;1971;1979;2032:2;2020:9;2011:7;2007:23;2003:32;2000:52;;;2048:1;2045;2038:12;2000:52;2071:40;2101:9;2071:40;:::i;:::-;2061:50;;2130:49;2175:2;2164:9;2160:18;2130:49;:::i;:::-;2120:59;;2198:49;2243:2;2232:9;2228:18;2198:49;:::i;:::-;2188:59;;1875:378;;;;;:::o;2440:128::-;2480:3;2511:1;2507:6;2504:1;2501:13;2498:39;;;2517:18;;:::i;:::-;-1:-1:-1;2553:9:4;;2440:128::o;:::-;186:5621:3;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FEE_PERCENT_488": {
									"entryPoint": null,
									"id": 488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PERCENTS_DIVIDER_485": {
									"entryPoint": null,
									"id": 485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_BCTokenBalances_451": {
									"entryPoint": null,
									"id": 451,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_allowed_457": {
									"entryPoint": null,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_116": {
									"entryPoint": null,
									"id": 116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 2704,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_302": {
									"entryPoint": 2649,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_729": {
									"entryPoint": null,
									"id": 729,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_766": {
									"entryPoint": 790,
									"id": 766,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_575": {
									"entryPoint": null,
									"id": 575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_555": {
									"entryPoint": null,
									"id": 555,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1026": {
									"entryPoint": 1804,
									"id": 1026,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_347": {
									"entryPoint": 2692,
									"id": 347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_975": {
									"entryPoint": 1587,
									"id": 975,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_332": {
									"entryPoint": 2680,
									"id": 332,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_539": {
									"entryPoint": null,
									"id": 539,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 1741,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setDevAddress_1072": {
									"entryPoint": 2418,
									"id": 1072,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sub_317": {
									"entryPoint": 2668,
									"id": 317,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_547": {
									"entryPoint": null,
									"id": 547,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_563": {
									"entryPoint": null,
									"id": 563,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_924": {
									"entryPoint": 912,
									"id": 924,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_83": {
									"entryPoint": 2494,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_713": {
									"entryPoint": 1871,
									"id": 713,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 2934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4764:4",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:4"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "317:476:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "327:12:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "337:2:4",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "331:2:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "355:9:4"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "366:2:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "348:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "348:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "348:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "378:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "382:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:4"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "436:2:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "441:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "457:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "466:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "461:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "526:90:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "555:9:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "566:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "551:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "551:17:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "570:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "547:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "547:26:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "589:6:4"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "597:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "585:3:4"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "585:14:4"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "601:2:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "581:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "581:23:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "575:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "575:30:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:66:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:66:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "487:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "490:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "484:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "484:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "498:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "500:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "509:1:4"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "512:2:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "505:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "505:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "500:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "480:3:4",
																"statements": []
															},
															"src": "476:140:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "650:66:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "679:9:4"
																								},
																								{
																									"name": "length",
																									"nodeType": "YulIdentifier",
																									"src": "690:6:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "675:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "675:22:4"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "699:2:4",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "671:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "671:31:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "704:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "664:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "664:42:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "664:42:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "631:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "628:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:13:4"
															},
															"nodeType": "YulIf",
															"src": "625:91:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "725:62:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "741:9:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "760:6:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "768:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "756:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "756:15:4"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "777:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "773:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "773:7:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "752:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "752:29:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:45:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "784:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "733:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "733:54:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "725:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "286:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "297:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "308:4:4",
														"type": ""
													}
												],
												"src": "196:597:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "843:86:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "907:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "916:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "919:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "909:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "909:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "909:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "866:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "877:5:4"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "892:3:4",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "897:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "888:3:4"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "888:11:4"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "901:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "884:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "884:19:4"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "873:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "873:31:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "863:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:42:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "856:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:50:4"
															},
															"nodeType": "YulIf",
															"src": "853:70:4"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "832:5:4",
														"type": ""
													}
												],
												"src": "798:131:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1021:228:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1067:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1076:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1079:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1069:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1069:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1069:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1042:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1051:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1038:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1038:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1063:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:32:4"
															},
															"nodeType": "YulIf",
															"src": "1031:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1118:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1105:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1096:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1162:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1137:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1137:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1137:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1177:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1187:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1201:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1228:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1239:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1224:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1224:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1211:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1211:32:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1201:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "979:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "990:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1002:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1010:6:4",
														"type": ""
													}
												],
												"src": "934:315:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1349:92:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1359:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1371:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1367:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1367:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1359:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1401:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1419:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1419:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1412:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1412:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1394:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1394:41:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1394:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1318:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1329:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1340:4:4",
														"type": ""
													}
												],
												"src": "1254:187:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1550:352:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1596:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1605:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1598:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1598:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1598:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1571:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1580:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1567:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1563:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:32:4"
															},
															"nodeType": "YulIf",
															"src": "1560:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1621:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1647:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1634:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1625:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1691:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1666:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1666:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1706:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1716:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1730:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1762:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1773:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1758:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1758:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1745:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1745:32:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1734:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1811:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1786:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1786:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1786:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1828:17:4",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1838:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1828:6:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1854:42:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1881:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1892:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1864:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:32:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1854:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1500:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1511:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1523:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1531:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1539:6:4",
														"type": ""
													}
												],
												"src": "1446:456:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2004:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2014:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2026:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2037:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2022:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2022:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2014:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2056:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2071:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2079:4:4",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2067:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2067:17:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2049:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2049:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2049:36:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1973:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1984:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1995:4:4",
														"type": ""
													}
												],
												"src": "1907:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2166:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2212:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2224:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2214:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2214:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2214:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2187:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2196:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2183:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2183:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2208:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:32:4"
															},
															"nodeType": "YulIf",
															"src": "2176:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2237:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2250:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2241:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2282:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2282:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2282:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2332:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2132:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2143:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2155:6:4",
														"type": ""
													}
												],
												"src": "2096:247:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2449:102:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2459:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2471:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2482:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2459:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2501:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2516:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2532:3:4",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2537:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2528:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2528:11:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2541:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2524:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2524:19:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2512:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2512:32:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2494:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:51:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2418:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2429:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2440:4:4",
														"type": ""
													}
												],
												"src": "2348:203:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2643:301:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2689:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2691:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2664:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2685:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:32:4"
															},
															"nodeType": "YulIf",
															"src": "2653:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2714:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2740:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2727:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2718:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2784:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2759:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2759:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2759:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2799:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2809:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:47:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2866:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2851:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2851:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2838:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2838:32:4"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "2827:7:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2904:7:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2879:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2879:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2879:33:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2921:17:4",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2931:7:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2921:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2601:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2612:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2624:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2632:6:4",
														"type": ""
													}
												],
												"src": "2556:388:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3027:177:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3073:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3082:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3075:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3075:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3075:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3048:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3057:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3044:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3069:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3040:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3040:32:4"
															},
															"nodeType": "YulIf",
															"src": "3037:52:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3098:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3111:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3111:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3102:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3168:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3143:24:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3143:31:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3183:15:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3193:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2993:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3004:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3016:6:4",
														"type": ""
													}
												],
												"src": "2949:255:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3383:182:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3400:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3411:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3393:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3393:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3423:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3423:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3423:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3489:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:62:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3533:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3556:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3533:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3360:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3374:4:4",
														"type": ""
													}
												],
												"src": "3209:356:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3744:228:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3761:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3772:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3754:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3754:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3754:21:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3795:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3806:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3791:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3791:18:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3811:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3784:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3784:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3834:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3845:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3830:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3830:18:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3850:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3823:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3823:62:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3823:62:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3921:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:36:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3894:36:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3939:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3951:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3947:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3947:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3939:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3721:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3735:4:4",
														"type": ""
													}
												],
												"src": "3570:402:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4009:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4026:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4033:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4038:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4029:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4029:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4019:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4019:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4069:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4059:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4059:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4059:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4093:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4083:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4083:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4083:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3977:127:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4157:80:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4184:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4186:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4186:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4186:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4173:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4180:1:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4170:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4170:13:4"
															},
															"nodeType": "YulIf",
															"src": "4167:39:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4215:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4226:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4229:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4222:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4222:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4215:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4140:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4143:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4149:3:4",
														"type": ""
													}
												],
												"src": "4109:128:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4291:76:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4313:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4315:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4315:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4307:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4310:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4304:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:8:4"
															},
															"nodeType": "YulIf",
															"src": "4301:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4344:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4356:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4359:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4352:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4344:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4273:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4276:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4282:4:4",
														"type": ""
													}
												],
												"src": "4242:125:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4424:116:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4483:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4485:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4485:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4455:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4448:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4448:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4441:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4441:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4463:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4474:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4470:3:4"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4470:6:4"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4478:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4466:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4466:14:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4460:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:21:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4437:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4437:45:4"
															},
															"nodeType": "YulIf",
															"src": "4434:71:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4514:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4529:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4532:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4514:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4403:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4406:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4412:7:4",
														"type": ""
													}
												],
												"src": "4372:168:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4591:171:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4622:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4643:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4650:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4655:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "4646:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4646:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4636:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4636:31:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4636:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4687:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4690:4:4",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4680:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4680:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4680:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4715:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4718:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4708:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4708:15:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4708:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4611:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4604:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4604:9:4"
															},
															"nodeType": "YulIf",
															"src": "4601:132:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4742:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4751:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4754:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4747:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4742:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4576:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4579:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4585:1:4",
														"type": ""
													}
												],
												"src": "4545:217:4"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101215760003560e01c80637711c596116100ad578063ba0fb86111610071578063ba0fb86114610284578063d0d41fe1146102af578063dd62ed3e146102c2578063eaf98d23146102fb578063f2fde38b1461030357600080fd5b80637711c596146102055780638da5cb5b1461022557806395d89b4114610240578063a457c2d71461025e578063a9059cbb1461027157600080fd5b806323b872dd116100f457806323b872dd1461019d578063313ce567146101b057806339509351146101bf57806370a08231146101d2578063715018a6146101fb57600080fd5b806301c234a81461012657806306fdde0314610142578063095ea7b31461017257806318160ddd14610195575b600080fd5b61012f6103e881565b6040519081526020015b60405180910390f35b60408051808201909152600b81526a084d2d8d8d2dedc86c2e6d60ab1b60208201525b6040516101399190610ae0565b610185610180366004610b4a565b610316565b6040519015158152602001610139565b60035461012f565b6101856101ab366004610b76565b610390565b60405160128152602001610139565b6101856101cd366004610b4a565b610633565b61012f6101e0366004610bb7565b6001600160a01b031660009081526001602052604090205490565b6102036106cd565b005b61012f610213366004610bb7565b60016020526000908152604090205481565b6000546040516001600160a01b039091168152602001610139565b604080518082019091526002815261424360f01b6020820152610165565b61018561026c366004610b4a565b61070c565b61018561027f366004610b4a565b61074f565b61012f610292366004610bd4565b600260209081526000928352604080842090915290825290205481565b6102036102bd366004610bb7565b610972565b61012f6102d0366004610bd4565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61012f603281565b610203610311366004610bb7565b6109be565b60006001600160a01b03831661032b57600080fd5b3360008181526002602090815260408083206001600160a01b03881680855290835292819020869055518581529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a350600192915050565b6001600160a01b0383166000908152600160205260408120548211156103b557600080fd5b6001600160a01b03841660009081526002602090815260408083203384529091529020548211156103e557600080fd5b6001600160a01b0383166103f857600080fd5b6001600160a01b03841660009081526001602052604090205461041b9083610a6c565b6001600160a01b03851660009081526001602052604081209190915561044e6103e8610448856032610a78565b90610a84565b905060006104688261046281818882610a6c565b90610a6c565b6001600160a01b03861660009081526001602052604090205490915061048e9082610a59565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546104c09083610a59565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546104f59083610a59565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461052a9083610a59565b6004546001600160a01b03908116600090815260016020908152604080832094909455918916815260028252828120338252909152205461056b9085610a6c565b6001600160a01b0380881660009081526002602090815260408083203380855292529182902093909355600654905191169190600080516020610cc9833981519152906105bb9086815260200190565b60405180910390a36005546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a350600195945050505050565b60006001600160a01b03831661064857600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546106769083610a59565b3360008181526002602090815260408083206001600160a01b038916808552908352928190208590555193845290927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910161037f565b6000546001600160a01b031633146107005760405162461bcd60e51b81526004016106f790610c0d565b60405180910390fd5b61070a6000610a90565b565b60006001600160a01b03831661072157600080fd5b3360009081526002602090815260408083206001600160a01b03871684529091529020546106769083610a6c565b3360009081526001602052604081205482111561076b57600080fd5b6001600160a01b03831661077e57600080fd5b60006107916103e8610448856032610a78565b905060006107a58261046281818882610a6c565b336000908152600160205260409020549091506107c29085610a6c565b33600090815260016020526040808220929092556001600160a01b038716815220546107ee9082610a59565b6001600160a01b0380871660009081526001602052604080822093909355600654909116815220546108209083610a59565b6006546001600160a01b0390811660009081526001602052604080822093909355600554909116815220546108559083610a59565b6005546001600160a01b03908116600090815260016020526040808220939093556004549091168152205461088a9083610a59565b6004546001600160a01b039081166000908152600160209081526040918290209390935551838152908716913391600080516020610cc9833981519152910160405180910390a36006546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36005546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a36004546040518381526001600160a01b03909116903390600080516020610cc98339815191529060200160405180910390a3506001949350505050565b6000546001600160a01b0316331461099c5760405162461bcd60e51b81526004016106f790610c0d565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146109e85760405162461bcd60e51b81526004016106f790610c0d565b6001600160a01b038116610a4d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f7565b610a5681610a90565b50565b6000610a658284610c58565b9392505050565b6000610a658284610c70565b6000610a658284610c87565b6000610a658284610ca6565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208083528351808285015260005b81811015610b0d57858101830151858201604001528201610af1565b81811115610b1f576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610a5657600080fd5b60008060408385031215610b5d57600080fd5b8235610b6881610b35565b946020939093013593505050565b600080600060608486031215610b8b57600080fd5b8335610b9681610b35565b92506020840135610ba681610b35565b929592945050506040919091013590565b600060208284031215610bc957600080fd5b8135610a6581610b35565b60008060408385031215610be757600080fd5b8235610bf281610b35565b91506020830135610c0281610b35565b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c6b57610c6b610c42565b500190565b600082821015610c8257610c82610c42565b500390565b6000816000190483118215151615610ca157610ca1610c42565b500290565b600082610cc357634e487b7160e01b600052601260045260246000fd5b50049056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa264697066735822122059cfa94ac433e7bef5e454eca1b19839397a77e1db08153a09338df6e7943cf064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7711C596 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xBA0FB861 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBA0FB861 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xD0D41FE1 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0xEAF98D23 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7711C596 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B0 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1BF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1C234A8 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x195 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12F PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xB DUP2 MSTORE PUSH11 0x84D2D8D8D2DEDC86C2E6D PUSH1 0xAB SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0xAE0 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1AB CALLDATASIZE PUSH1 0x4 PUSH2 0xB76 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x633 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x1E0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x6CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12F PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x139 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x4243 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x165 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x70C JUMP JUMPDEST PUSH2 0x185 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xB4A JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH2 0x12F PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x2BD CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH2 0x12F PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBD4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12F PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x203 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB7 JUMP JUMPDEST PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x32B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP7 SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x41B SWAP1 DUP4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x44E PUSH2 0x3E8 PUSH2 0x448 DUP6 PUSH1 0x32 PUSH2 0xA78 JUMP JUMPDEST SWAP1 PUSH2 0xA84 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x468 DUP3 PUSH2 0x462 DUP2 DUP2 DUP9 DUP3 PUSH2 0xA6C JUMP JUMPDEST SWAP1 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x48E SWAP1 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4C0 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x4F5 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x52A SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP10 AND DUP2 MSTORE PUSH1 0x2 DUP3 MSTORE DUP3 DUP2 KECCAK256 CALLER DUP3 MSTORE SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x56B SWAP1 DUP6 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 MLOAD SWAP2 AND SWAP2 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x5BB SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x676 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP4 DUP5 MSTORE SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH2 0x37F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70A PUSH1 0x0 PUSH2 0xA90 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x721 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x676 SWAP1 DUP4 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x791 PUSH2 0x3E8 PUSH2 0x448 DUP6 PUSH1 0x32 PUSH2 0xA78 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7A5 DUP3 PUSH2 0x462 DUP2 DUP2 DUP9 DUP3 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x7C2 SWAP1 DUP6 PUSH2 0xA6C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7EE SWAP1 DUP3 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x6 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x820 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x5 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x855 SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x88A SWAP1 DUP4 PUSH2 0xA59 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE MLOAD DUP4 DUP2 MSTORE SWAP1 DUP8 AND SWAP2 CALLER SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 CALLER SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xCC9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F7 SWAP1 PUSH2 0xC0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA4D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0xA56 DUP2 PUSH2 0xA90 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC58 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xC87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA65 DUP3 DUP5 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB0D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAF1 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xB68 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB96 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0xBA6 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA65 DUP2 PUSH2 0xB35 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0xBF2 DUP2 PUSH2 0xB35 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xC02 DUP2 PUSH2 0xB35 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC6B JUMPI PUSH2 0xC6B PUSH2 0xC42 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC82 JUMPI PUSH2 0xC82 PUSH2 0xC42 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xCA1 JUMPI PUSH2 0xCA1 PUSH2 0xC42 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xCC3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0xCF 0xA9 0x4A 0xC4 CALLER 0xE7 0xBE CREATE2 0xE4 SLOAD 0xEC LOG1 0xB1 SWAP9 CODECOPY CODECOPY PUSH27 0x77E1DB08153A09338DF6E7943CF064736F6C634300080A00330000 ",
							"sourceMap": "186:5621:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:47;;705:4;662:47;;;;;160:25:4;;;148:2;133:18;662:47:3;;;;;;;;1263:87;1333:9;;;;;;;;;;;;-1:-1:-1;;;1333:9:3;;;;1263:87;;;;;;;:::i;3135:242::-;;;;;;:::i;:::-;;:::i;:::-;;;1419:14:4;;1412:22;1394:41;;1382:2;1367:18;3135:242:3;1254:187:4;1552:91:3;1623:12;;1552:91;;3385:1296;;;;;;:::i;:::-;;:::i;1457:87::-;;;506:2;2049:36:4;;2037:2;2022:18;1457:87:3;1907:184:4;4689:370:3;;;;;;:::i;:::-;;:::i;1651:113::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1733:23:3;1706:7;1733:23;;;:16;:23;;;;;;;1651:113;1668:101:0;;;:::i;:::-;;258:51:3;;;;;;:::i;:::-;;;;;;;;;;;;;;1036:85:0;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;2494:51:4;;2482:2;2467:18;1036:85:0;2348:203:4;1358:91:3;1430:11;;;;;;;;;;;;-1:-1:-1;;;1430:11:3;;;;1358:91;;5067:380;;;;;;:::i;:::-;;:::i;1772:1184::-;;;;;;:::i;:::-;;:::i;316:63::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;5688:116;;;;;;:::i;:::-;;:::i;2964:163::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3095:15:3;;;3063:7;3095:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2964:163;716:40;;754:2;716:40;;1918:198:0;;;;;;:::i;:::-;;:::i;3135:242:3:-;3200:4;-1:-1:-1;;;;;3225:21:3;;3217:30;;;;;;3267:10;3258:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;3258:29:3;;;;;;;;;;;;:37;;;3311:36;160:25:4;;;3258:29:3;;3267:10;3311:36;;133:18:4;3311:36:3;;;;;;;;-1:-1:-1;3365:4:3;3135:242;;;;:::o;3385:1296::-;-1:-1:-1;;;;;3532:22:3;;3498:4;3532:22;;;:16;:22;;;;;;3523:31;;;3515:40;;;;;;-1:-1:-1;;;;;3583:14:3;;;;;;:8;:14;;;;;;;;3598:10;3583:26;;;;;;;;3574:35;;;3566:44;;;;;;-1:-1:-1;;;;;3629:16:3;;3621:25;;;;;;-1:-1:-1;;;;;3684:22:3;;;;;;:16;:22;;;;;;:33;;3711:5;3684:26;:33::i;:::-;-1:-1:-1;;;;;3659:22:3;;;;;;:16;:22;;;;;:58;;;;3754:44;705:4;3754:22;:5;754:2;3754:9;:22::i;:::-;:26;;:44::i;:::-;3730:68;-1:-1:-1;3809:24:3;3836:104;3730:68;3836:71;3730:68;3836:71;:5;3730:68;3836:23;:38::i;:::-;:56;;:71::i;:104::-;-1:-1:-1;;;;;3976:20:3;;;;;;:16;:20;;;;;;3809:131;;-1:-1:-1;3976:42:3;;3809:131;3976:24;:42::i;:::-;-1:-1:-1;;;;;3953:20:3;;;;;;;:16;:20;;;;;;:65;;;;4079:12;;;;;4062:30;;;;:73;;4111:13;4062:34;:73::i;:::-;4046:12;;-1:-1:-1;;;;;4046:12:3;;;4029:30;;;;:16;:30;;;;;;:106;;;;4199:15;;;;;4182:33;;;;:76;;4234:13;4182:37;:76::i;:::-;4163:15;;-1:-1:-1;;;;;4163:15:3;;;4146:33;;;;:16;:33;;;;;;:112;;;;4318:11;;;;;4301:29;;;;:72;;4349:13;4301:33;:72::i;:::-;4286:11;;-1:-1:-1;;;;;4286:11:3;;;4269:29;;;;:16;:29;;;;;;;;:104;;;;4413:14;;;;;:8;:14;;;;;4428:10;4413:26;;;;;;;:37;;4444:5;4413:30;:37::i;:::-;-1:-1:-1;;;;;4384:14:3;;;;;;;:8;:14;;;;;;;;4399:10;4384:26;;;;;;;;;:66;;;;4489:12;;4468:49;;4489:12;;;4399:10;-1:-1:-1;;;;;;;;;;;4468:49:3;;;4503:13;160:25:4;;148:2;133:18;;14:177;4468:49:3;;;;;;;;4554:15;;4533:52;;160:25:4;;;-1:-1:-1;;;;;4554:15:3;;;;4542:10;;-1:-1:-1;;;;;;;;;;;4533:52:3;148:2:4;133:18;4533:52:3;;;;;;;4622:11;;4601:48;;160:25:4;;;-1:-1:-1;;;;;4622:11:3;;;;4610:10;;-1:-1:-1;;;;;;;;;;;4601:48:3;148:2:4;133:18;4601:48:3;;;;;;;-1:-1:-1;4669:4:3;;3385:1296;-1:-1:-1;;;;;3385:1296:3:o;4689:370::-;4787:4;-1:-1:-1;;;;;4817:21:3;;4809:30;;;;;;4906:10;4897:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4897:29:3;;;;;;;;;;:45;;4931:10;4897:33;:45::i;:::-;4859:10;4850:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4850:29:3;;;;;;;;;;;;:103;;;4969:60;160:25:4;;;4850:29:3;;4969:60;;133:18:4;4969:60:3;14:177:4;1668:101:0;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5067:380:3:-;5170:4;-1:-1:-1;;;;;5200:21:3;;5192:30;;;;;;5289:10;5280:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5280:29:3;;;;;;;;;;:50;;5314:15;5280:33;:50::i;1772:1184::-;1884:10;1833:4;1867:28;;;:16;:28;;;;;;1858:37;;;1850:46;;;;;;-1:-1:-1;;;;;1915:16:3;;1907:25;;;;;;1945:21;1969:44;705:4;1969:22;:5;754:2;1969:9;:22::i;:44::-;1945:68;-1:-1:-1;2024:24:3;2051:104;1945:68;2051:71;1945:68;2051:71;:5;1945:68;2051:23;:38::i;:104::-;2216:10;2199:28;;;;:16;:28;;;;;;2024:131;;-1:-1:-1;2199:39:3;;2232:5;2199:32;:39::i;:::-;2185:10;2168:28;;;;:16;:28;;;;;;:70;;;;-1:-1:-1;;;;;2272:20:3;;;;;;:42;;2297:16;2272:24;:42::i;:::-;-1:-1:-1;;;;;2249:20:3;;;;;;;:16;:20;;;;;;:65;;;;2375:12;;;;;2358:30;;;;:73;;2407:13;2358:34;:73::i;:::-;2342:12;;-1:-1:-1;;;;;2342:12:3;;;2325:30;;;;:16;:30;;;;;;:106;;;;2495:15;;;;;2478:33;;;;:76;;2530:13;2478:37;:76::i;:::-;2459:15;;-1:-1:-1;;;;;2459:15:3;;;2442:33;;;;:16;:33;;;;;;:112;;;;2614:11;;;;;2597:29;;;;:72;;2645:13;2597:33;:72::i;:::-;2582:11;;-1:-1:-1;;;;;2582:11:3;;;2565:29;;;;:16;:29;;;;;;;;;:104;;;;2687:42;160:25:4;;;2687:42:3;;;;2696:10;;-1:-1:-1;;;;;;;;;;;2687:42:3;133:18:4;2687:42:3;;;;;;;2766:12;;2745:49;;160:25:4;;;-1:-1:-1;;;;;2766:12:3;;;;2754:10;;-1:-1:-1;;;;;;;;;;;2745:49:3;148:2:4;133:18;2745:49:3;;;;;;;2831:15;;2810:52;;160:25:4;;;-1:-1:-1;;;;;2831:15:3;;;;2819:10;;-1:-1:-1;;;;;;;;;;;2810:52:3;148:2:4;133:18;2810:52:3;;;;;;;2899:11;;2878:48;;160:25:4;;;-1:-1:-1;;;;;2899:11:3;;;;2887:10;;-1:-1:-1;;;;;;;;;;;2878:48:3;148:2:4;133:18;2878:48:3;;;;;;;-1:-1:-1;2944:4:3;;1772:1184;-1:-1:-1;;;;1772:1184:3:o;5688:116::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5770:12:3::1;:26:::0;;-1:-1:-1;;;;;;5770:26:3::1;-1:-1:-1::0;;;;;5770:26:3;;;::::1;::::0;;;::::1;::::0;;5688:116::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:1;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3772:2:4;1998:73:0::1;::::0;::::1;3754:21:4::0;3811:2;3791:18;;;3784:30;3850:34;3830:18;;;3823:62;-1:-1:-1;;;3901:18:4;;;3894:36;3947:19;;1998:73:0::1;3570:402:4::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2755:96:2:-;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:2:o;3122:::-;3180:7;3206:5;3210:1;3206;:5;:::i;3465:96::-;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;196:597:4:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;634:6;631:1;628:13;625:91;;;704:1;699:2;690:6;679:9;675:22;671:31;664:42;625:91;-1:-1:-1;777:2:4;756:15;-1:-1:-1;;752:29:4;737:45;;;;784:2;733:54;;196:597;-1:-1:-1;;;196:597:4:o;798:131::-;-1:-1:-1;;;;;873:31:4;;863:42;;853:70;;919:1;916;909:12;934:315;1002:6;1010;1063:2;1051:9;1042:7;1038:23;1034:32;1031:52;;;1079:1;1076;1069:12;1031:52;1118:9;1105:23;1137:31;1162:5;1137:31;:::i;:::-;1187:5;1239:2;1224:18;;;;1211:32;;-1:-1:-1;;;934:315:4:o;1446:456::-;1523:6;1531;1539;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1647:9;1634:23;1666:31;1691:5;1666:31;:::i;:::-;1716:5;-1:-1:-1;1773:2:4;1758:18;;1745:32;1786:33;1745:32;1786:33;:::i;:::-;1446:456;;1838:7;;-1:-1:-1;;;1892:2:4;1877:18;;;;1864:32;;1446:456::o;2096:247::-;2155:6;2208:2;2196:9;2187:7;2183:23;2179:32;2176:52;;;2224:1;2221;2214:12;2176:52;2263:9;2250:23;2282:31;2307:5;2282:31;:::i;2556:388::-;2624:6;2632;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;2740:9;2727:23;2759:31;2784:5;2759:31;:::i;:::-;2809:5;-1:-1:-1;2866:2:4;2851:18;;2838:32;2879:33;2838:32;2879:33;:::i;:::-;2931:7;2921:17;;;2556:388;;;;;:::o;3209:356::-;3411:2;3393:21;;;3430:18;;;3423:30;3489:34;3484:2;3469:18;;3462:62;3556:2;3541:18;;3209:356::o;3977:127::-;4038:10;4033:3;4029:20;4026:1;4019:31;4069:4;4066:1;4059:15;4093:4;4090:1;4083:15;4109:128;4149:3;4180:1;4176:6;4173:1;4170:13;4167:39;;;4186:18;;:::i;:::-;-1:-1:-1;4222:9:4;;4109:128::o;4242:125::-;4282:4;4310:1;4307;4304:8;4301:34;;;4315:18;;:::i;:::-;-1:-1:-1;4352:9:4;;4242:125::o;4372:168::-;4412:7;4478:1;4474;4470:6;4466:14;4463:1;4460:21;4455:1;4448:9;4441:17;4437:45;4434:71;;;4485:18;;:::i;:::-;-1:-1:-1;4525:9:4;;4372:168::o;4545:217::-;4585:1;4611;4601:132;;4655:10;4650:3;4646:20;4643:1;4636:31;4690:4;4687:1;4680:15;4718:4;4715:1;4708:15;4601:132;-1:-1:-1;4747:9:4;;4545:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "671600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"FEE_PERCENT()": "272",
								"PERCENTS_DIVIDER()": "208",
								"_BCTokenBalances(address)": "2525",
								"_allowed(address,address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24582",
								"balanceOf(address)": "2609",
								"decimals()": "222",
								"decreaseAllowance(address,uint256)": "26984",
								"increaseAllowance(address,uint256)": "26965",
								"name()": "infinite",
								"owner()": "2346",
								"renounceOwnership()": "28225",
								"setDevAddress(address)": "26749",
								"symbol()": "infinite",
								"totalSupply()": "2371",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_mint(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 546,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 506,
									"end": 508,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 546,
									"end": 548,
									"name": "PUSH",
									"source": 3,
									"value": "A"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 546,
									"end": 572,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 538,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 538,
									"end": 543,
									"name": "PUSH",
									"source": 3,
									"value": "C350"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 538,
									"end": 572,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 515,
									"end": 572,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 515,
									"end": 572,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1093,
									"end": 1105,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "AND",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1147,
									"name": "PUSH",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1132,
									"end": 1166,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1188,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1177,
									"end": 1203,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1234,
									"end": 1246,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1214,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1214,
									"end": 1247,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1093,
									"end": 1121,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1214,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1214,
									"end": 1247,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1214,
									"end": 1247,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1214,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 965,
									"end": 1255,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 5455,
									"end": 5680,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 5455,
									"end": 5680,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5531,
									"end": 5542,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 5523,
									"end": 5543,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5598,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5607,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5612,
									"end": 5618,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5612,
									"end": 5618,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5611,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18446744073709551716"
								},
								{
									"begin": 5582,
									"end": 5611,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 5582,
									"end": 5611,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5611,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5611,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "tag",
									"source": 3,
									"value": "23"
								},
								{
									"begin": 5582,
									"end": 5619,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5570,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5619,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5619,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5619,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5619,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5554,
									"end": 5579,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5665,
									"end": 5671,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 2404,
									"end": 2429,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2404,
									"end": 2429,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2377,
									"end": 2395,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2377,
									"end": 2395,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2258,
									"end": 2435,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "tag",
									"source": 3,
									"value": "25"
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 5635,
									"end": 5672,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5455,
									"end": 5680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5455,
									"end": 5680,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5455,
									"end": 5680,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2813,
									"end": 2820,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2843,
									"end": 2844,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 2839,
									"end": 2844,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2832,
									"end": 2844,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2832,
									"end": 2844,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2755,
									"end": 2851,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 235,
									"end": 236,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 278,
									"end": 283,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 235,
									"end": 236,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 313,
									"end": 320,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 303,
									"end": 311,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 300,
									"end": 321,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 372,
									"end": 376,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 368,
									"end": 369,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 364,
									"end": 370,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 360,
									"end": 377,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 354,
									"end": 358,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 351,
									"end": 378,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 348,
									"end": 401,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 348,
									"end": 401,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 348,
									"end": 401,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 381,
									"end": 399,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 438,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 421,
									"end": 429,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 417,
									"end": 439,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 451,
									"end": 467,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 414,
									"end": 469,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 414,
									"end": 469,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 530,
									"end": 552,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 490,
									"end": 505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 292,
									"end": 562,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 292,
									"end": 562,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 296,
									"end": 299,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 146,
									"end": 568,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 622,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 652,
									"end": 660,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 642,
									"end": 722,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 693,
									"end": 694,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 707,
									"end": 712,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 642,
									"end": 722,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 642,
									"end": 722,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 741,
									"end": 745,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 731,
									"end": 807,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 778,
									"end": 779,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 792,
									"end": 797,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 731,
									"end": 807,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 731,
									"end": 807,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 823,
									"end": 827,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 841,
									"end": 842,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 909,
									"end": 910,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 836,
									"end": 895,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 836,
									"end": 895,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 866,
									"end": 867,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 857,
									"end": 867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 857,
									"end": 867,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 880,
									"end": 885,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 880,
									"end": 885,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 880,
									"end": 885,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 904,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 941,
									"end": 944,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 931,
									"end": 939,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 928,
									"end": 945,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 925,
									"end": 968,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 925,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 925,
									"end": 968,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 948,
									"end": 966,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1004,
									"end": 1005,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 990,
									"end": 1006,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 816,
									"end": 1034,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1118,
									"end": 1120,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1108,
									"end": 1116,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1105,
									"end": 1121,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1099,
									"end": 1102,
									"name": "PUSH",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1090,
									"end": 1103,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1086,
									"end": 1122,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 4,
									"value": "4E"
								},
								{
									"begin": 1070,
									"end": 1078,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1067,
									"end": 1083,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1062,
									"end": 1064,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1056,
									"end": 1060,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1053,
									"end": 1065,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1049,
									"end": 1084,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1046,
									"end": 1123,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1174,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1043,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1259,
									"end": 1267,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1253,
									"end": 1257,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1234,
									"end": 1268,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1304,
									"end": 1310,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1300,
									"end": 1301,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1296,
									"end": 1302,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1292,
									"end": 1311,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1283,
									"end": 1290,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1280,
									"end": 1312,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1277,
									"end": 1335,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1315,
									"end": 1333,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1353,
									"end": 1373,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 573,
									"end": 1379,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1384,
									"end": 1515,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1384,
									"end": 1515,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1500,
									"end": 1508,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1494,
									"end": 1498,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1473,
									"end": 1509,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1560,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1623,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1618,
									"end": 1624,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1628,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1611,
									"end": 1612,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1608,
									"end": 1629,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1596,
									"end": 1605,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1589,
									"end": 1606,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1585,
									"end": 1630,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1582,
									"end": 1653,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1633,
									"end": 1651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1673,
									"end": 1682,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1520,
									"end": 1688,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1772,
									"end": 1785,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1772,
									"end": 1785,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1814,
									"end": 1845,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1814,
									"end": 1845,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1846,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1804,
									"end": 1846,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1860,
									"end": 1861,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1850,
									"end": 1862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1794,
									"end": 1864,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1870,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1963,
									"end": 1969,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1977,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1979,
									"end": 1985,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2032,
									"end": 2034,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2020,
									"end": 2029,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2011,
									"end": 2018,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2007,
									"end": 2030,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2003,
									"end": 2035,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2048,
									"end": 2049,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2038,
									"end": 2050,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2000,
									"end": 2052,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2101,
									"end": 2110,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2071,
									"end": 2111,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2111,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2061,
									"end": 2111,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2175,
									"end": 2177,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2164,
									"end": 2173,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2178,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2130,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2179,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2120,
									"end": 2179,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2243,
									"end": 2245,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2232,
									"end": 2241,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2228,
									"end": 2246,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2198,
									"end": 2247,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2188,
									"end": 2247,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2188,
									"end": 2247,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1875,
									"end": 2253,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2480,
									"end": 2483,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2511,
									"end": 2512,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2507,
									"end": 2513,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2504,
									"end": 2505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2501,
									"end": 2514,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2498,
									"end": 2537,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2517,
									"end": 2535,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2553,
									"end": 2562,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2553,
									"end": 2562,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 2440,
									"end": 2568,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 186,
									"end": 5807,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059cfa94ac433e7bef5e454eca1b19839397a77e1db08153a09338df6e7943cf064736f6c634300080a0033",
									".code": [
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "7711C596"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "BA0FB861"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "BA0FB861"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "D0D41FE1"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "DD62ED3E"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "EAF98D23"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "7711C596"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "95D89B41"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "A457C2D7"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "313CE567"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "39509351"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "70A08231"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "715018A6"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "1C234A8"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "6FDDE03"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "95EA7B3"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "18160DDD"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 186,
											"end": 5807,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 662,
											"end": 709,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 709,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 662,
											"end": 709,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "B"
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "84D2D8D8D2DEDC86C2E6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1333,
											"end": 1342,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1263,
											"end": 1350,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1419,
											"end": 1433,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1434,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1435,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1435,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1367,
											"end": 1385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1254,
											"end": 1441,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1552,
											"end": 1643,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1552,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1623,
											"end": 1635,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1623,
											"end": 1635,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1552,
											"end": 1643,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1457,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1457,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1544,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1457,
											"end": 1544,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 506,
											"end": 508,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2085,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2037,
											"end": 2039,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1457,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1907,
											"end": 2091,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1749,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1733,
											"end": 1756,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1651,
											"end": 1764,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 258,
											"end": 309,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 258,
											"end": 309,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2494,
											"end": 2545,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2494,
											"end": 2545,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2482,
											"end": 2484,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2485,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2348,
											"end": 2551,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1358,
											"end": 1449,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 1358,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4243"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1430,
											"end": 1441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1358,
											"end": 1449,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 316,
											"end": 379,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3103,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3110,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3095,
											"end": 3119,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2964,
											"end": 3127,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 716,
											"end": 756,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 716,
											"end": 756,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3200,
											"end": 3204,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3277,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3295,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3258,
											"end": 3287,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3267,
											"end": 3277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3311,
											"end": 3347,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3135,
											"end": 3377,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3498,
											"end": 3502,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3548,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3554,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3554,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3554,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3523,
											"end": 3554,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3515,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3591,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3597,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3598,
											"end": 3608,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3583,
											"end": 3609,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3609,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3609,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3574,
											"end": 3609,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3566,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3629,
											"end": 3645,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3629,
											"end": 3645,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3621,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3700,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3706,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3710,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3684,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3675,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3681,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3717,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3717,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3659,
											"end": 3717,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3754,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 3754,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3780,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3780,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 3754,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 3798,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3809,
											"end": 3833,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3836,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3730,
											"end": 3798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3730,
											"end": 3798,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3907,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3841,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3730,
											"end": 3798,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3859,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3836,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3836,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3836,
											"end": 3907,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3836,
											"end": 3940,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 3836,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3992,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3996,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3940,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3940,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3976,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3976,
											"end": 4018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3809,
											"end": 3940,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 4000,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3976,
											"end": 4018,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3976,
											"end": 4018,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 3976,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3969,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 3973,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3953,
											"end": 4018,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4091,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4092,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4092,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4092,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4092,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4062,
											"end": 4135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4111,
											"end": 4124,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4062,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4062,
											"end": 4135,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4062,
											"end": 4135,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 4062,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4045,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4059,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4135,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4135,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4029,
											"end": 4135,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4214,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4215,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4215,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4182,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4182,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4258,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4258,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4182,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4163,
											"end": 4178,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4179,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4258,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4258,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4258,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4329,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4318,
											"end": 4329,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4329,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4329,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4318,
											"end": 4329,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4301,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4334,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4301,
											"end": 4373,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4301,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4301,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4286,
											"end": 4297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4285,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4298,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4373,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4373,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4373,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4421,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4427,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4428,
											"end": 4438,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4413,
											"end": 4450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4444,
											"end": 4449,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4413,
											"end": 4443,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4413,
											"end": 4450,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4413,
											"end": 4450,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4413,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4392,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4398,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4410,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4450,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4450,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4450,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4384,
											"end": 4450,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4489,
											"end": 4501,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4399,
											"end": 4409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4503,
											"end": 4516,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4517,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4554,
											"end": 4569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4552,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4542,
											"end": 4552,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4533,
											"end": 4585,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4622,
											"end": 4633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4620,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4610,
											"end": 4620,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4601,
											"end": 4649,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4669,
											"end": 4673,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4669,
											"end": 4673,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3385,
											"end": 4681,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 4689,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4787,
											"end": 4791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4817,
											"end": 4838,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4838,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4809,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4916,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4905,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4917,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4926,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4897,
											"end": 4942,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4931,
											"end": 4941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4897,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4897,
											"end": 4942,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4897,
											"end": 4942,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4897,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4859,
											"end": 4869,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4858,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4870,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4953,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4953,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4953,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 5029,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4850,
											"end": 4879,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 5029,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 4969,
											"end": 5029,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 5067,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5170,
											"end": 5174,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5200,
											"end": 5221,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5200,
											"end": 5221,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5192,
											"end": 5222,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5289,
											"end": 5299,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5288,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5300,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5309,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 5280,
											"end": 5330,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5314,
											"end": 5329,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5280,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5280,
											"end": 5330,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1884,
											"end": 1894,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1837,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1883,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1895,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1895,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1895,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1858,
											"end": 1895,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1850,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1931,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1915,
											"end": 1931,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1907,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 1966,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 705,
											"end": 709,
											"name": "PUSH",
											"source": 3,
											"value": "3E8"
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 754,
											"end": 756,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1969,
											"end": 1978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1969,
											"end": 1991,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1969,
											"end": 2013,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 1969,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2013,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2024,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1945,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1945,
											"end": 2013,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2122,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2056,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 1945,
											"end": 2013,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2051,
											"end": 2089,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2051,
											"end": 2155,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 2051,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2216,
											"end": 2226,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2215,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2227,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2155,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2155,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2199,
											"end": 2238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2199,
											"end": 2238,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2199,
											"end": 2238,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2199,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2185,
											"end": 2195,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2184,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2196,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2238,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2238,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2238,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2168,
											"end": 2238,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2292,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2272,
											"end": 2314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2297,
											"end": 2313,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2272,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2272,
											"end": 2314,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2272,
											"end": 2314,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2272,
											"end": 2314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2269,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2249,
											"end": 2314,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2388,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2358,
											"end": 2431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2407,
											"end": 2420,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2358,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2358,
											"end": 2431,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2358,
											"end": 2431,
											"name": "tag",
											"source": 3,
											"value": "159"
										},
										{
											"begin": 2358,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2342,
											"end": 2354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2341,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2355,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2431,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2431,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2431,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2431,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2510,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2511,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2511,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2511,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2478,
											"end": 2554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2530,
											"end": 2543,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2478,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2478,
											"end": 2554,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2478,
											"end": 2554,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2478,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2459,
											"end": 2474,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2458,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2475,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2554,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2554,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2554,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2442,
											"end": 2554,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2614,
											"end": 2625,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2626,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2626,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2626,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2626,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2669,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2597,
											"end": 2669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2645,
											"end": 2658,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2597,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2597,
											"end": 2669,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2597,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2593,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2593,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2582,
											"end": 2593,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2593,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2582,
											"end": 2593,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2581,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2594,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2669,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2706,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2687,
											"end": 2729,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2754,
											"end": 2764,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2745,
											"end": 2794,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2831,
											"end": 2846,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2819,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2810,
											"end": 2862,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2899,
											"end": 2910,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2926,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2944,
											"end": 2948,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1772,
											"end": 2956,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5770,
											"end": 5782,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5770,
											"end": 5796,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5688,
											"end": 5804,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3772,
											"end": 3774,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3754,
											"end": 3775,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3811,
											"end": 3813,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3809,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3784,
											"end": 3814,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3850,
											"end": 3884,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3830,
											"end": 3848,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3885,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3894,
											"end": 3930,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "PUSH",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3947,
											"end": 3966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3570,
											"end": 3972,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 793,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 196,
											"end": 793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 308,
											"end": 312,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 339,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 366,
											"end": 368,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 355,
											"end": 364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 348,
											"end": 369,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 441,
											"end": 447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 436,
											"end": 438,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 425,
											"end": 434,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 414,
											"end": 448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 466,
											"end": 467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 490,
											"end": 496,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 487,
											"end": 488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 484,
											"end": 497,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 585,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 581,
											"end": 604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 581,
											"end": 604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 575,
											"end": 605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 551,
											"end": 568,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 570,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 547,
											"end": 573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 540,
											"end": 606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 505,
											"end": 515,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 505,
											"end": 515,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 616,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 476,
											"end": 616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 640,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 628,
											"end": 641,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 701,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 696,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 679,
											"end": 688,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 675,
											"end": 697,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 671,
											"end": 702,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 664,
											"end": 706,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 625,
											"end": 716,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 625,
											"end": 716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 756,
											"end": 771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 752,
											"end": 781,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 737,
											"end": 782,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 784,
											"end": 786,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 787,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 733,
											"end": 787,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 196,
											"end": 793,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 793,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 798,
											"end": 929,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 798,
											"end": 929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 873,
											"end": 904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 873,
											"end": 904,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 863,
											"end": 905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 863,
											"end": 905,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 853,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 853,
											"end": 923,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 919,
											"end": 920,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 916,
											"end": 917,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 909,
											"end": 921,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1249,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 934,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1008,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1063,
											"end": 1065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1051,
											"end": 1060,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1042,
											"end": 1049,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1061,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1066,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1083,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1083,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1031,
											"end": 1083,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1079,
											"end": 1080,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1069,
											"end": 1081,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1031,
											"end": 1083,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 1031,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1118,
											"end": 1127,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1128,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1162,
											"end": 1167,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 1137,
											"end": 1168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1192,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1224,
											"end": 1242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1211,
											"end": 1243,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 934,
											"end": 1249,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1537,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1539,
											"end": 1545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1578,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1590,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1595,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1606,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 1560,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1647,
											"end": 1656,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1657,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1691,
											"end": 1696,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 1666,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1773,
											"end": 1775,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1758,
											"end": 1776,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1758,
											"end": 1776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1745,
											"end": 1777,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1786,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1845,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1892,
											"end": 1894,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1864,
											"end": 1896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1902,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2096,
											"end": 2343,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 2096,
											"end": 2343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2155,
											"end": 2161,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2210,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2196,
											"end": 2205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2187,
											"end": 2194,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2183,
											"end": 2206,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2179,
											"end": 2211,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2214,
											"end": 2226,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2250,
											"end": 2273,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2282,
											"end": 2313,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2683,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2740,
											"end": 2749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2727,
											"end": 2750,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2784,
											"end": 2789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2759,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2814,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2866,
											"end": 2868,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2879,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2879,
											"end": 2912,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2879,
											"end": 2912,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2879,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2931,
											"end": 2938,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2921,
											"end": 2938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2556,
											"end": 2944,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3209,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 3209,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3411,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3393,
											"end": 3414,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3423,
											"end": 3453,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3489,
											"end": 3523,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 3484,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3487,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3556,
											"end": 3558,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3565,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3977,
											"end": 4104,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3977,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4038,
											"end": 4048,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4033,
											"end": 4036,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4029,
											"end": 4049,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4026,
											"end": 4027,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4059,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4093,
											"end": 4097,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4090,
											"end": 4091,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4237,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4109,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4149,
											"end": 4152,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4180,
											"end": 4181,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4182,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4174,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4170,
											"end": 4183,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4206,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4167,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4167,
											"end": 4206,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 4186,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4222,
											"end": 4231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4222,
											"end": 4231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4109,
											"end": 4237,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4242,
											"end": 4367,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 4242,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4282,
											"end": 4286,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4311,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4307,
											"end": 4308,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4304,
											"end": 4312,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4301,
											"end": 4335,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 4315,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4367,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4372,
											"end": 4540,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 4372,
											"end": 4540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4478,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4474,
											"end": 4475,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4476,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4466,
											"end": 4480,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4463,
											"end": 4464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4460,
											"end": 4481,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4455,
											"end": 4456,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4448,
											"end": 4457,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4441,
											"end": 4458,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4437,
											"end": 4482,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4505,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4434,
											"end": 4505,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 4485,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4372,
											"end": 4540,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4545,
											"end": 4762,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4545,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4585,
											"end": 4586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4612,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4601,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4601,
											"end": 4733,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4655,
											"end": 4665,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B71"
										},
										{
											"begin": 4650,
											"end": 4653,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 4646,
											"end": 4666,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4667,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4680,
											"end": 4695,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4722,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4715,
											"end": 4716,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4723,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4601,
											"end": 4733,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 4601,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4747,
											"end": 4756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4762,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									],
									".data": {
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									}
								}
							}
						},
						"methodIdentifiers": {
							"FEE_PERCENT()": "eaf98d23",
							"PERCENTS_DIVIDER()": "01c234a8",
							"_BCTokenBalances(address)": "7711c596",
							"_allowed(address,address)": "ba0fb861",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setDevAddress(address)": "d0d41fe1",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_marketingWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_pancakeswap\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FEE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTS_DIVIDER\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_BCTokenBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_allowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_devAddress\",\"type\":\"address\"}],\"name\":\"setDevAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"BillionCash.sol\":\"BillionCash\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"BillionCash.sol\":{\"keccak256\":\"0x803d608edf6815dd61e3af8f4c28a0d73a6ed19462a05eb9bfb06cfcb200cee4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d57fedd733c19ac11f4cc553ca817b856151ec31be5c1c9927d0d41d1000569\",\"dweb:/ipfs/QmSm2bHENmLtqhX5zpBqYJ8PdhDxgZtUqkbjsKXZLQyPPx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 451,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_BCTokenBalances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 457,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_allowed",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 476,
								"contract": "BillionCash.sol:BillionCash",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 478,
								"contract": "BillionCash.sol:BillionCash",
								"label": "pancakeswap",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 480,
								"contract": "BillionCash.sol:BillionCash",
								"label": "marketingwallet",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 482,
								"contract": "BillionCash.sol:BillionCash",
								"label": "adminAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							126
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 127,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								126
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 107,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 111,
												"id": 114,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 126,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 121,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 120,
												"id": 123,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 118,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 126,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							438
						]
					},
					"id": 439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 129,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:2",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 438,
							"linearizedBaseContracts": [
								438
							],
							"name": "SafeMath",
							"nameLocation": "490:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "717:140:2",
										"statements": [
											{
												"id": 159,
												"nodeType": "UncheckedBlock",
												"src": "727:124:2",
												"statements": [
													{
														"assignments": [
															142
														],
														"declarations": [
															{
																"constant": false,
																"id": 142,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 159,
																"src": "751:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 141,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 146,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "763:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 144,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "767:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 147,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "786:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 148,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "790:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 154,
														"nodeType": "IfStatement",
														"src": "782:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 152,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 140,
															"id": 153,
															"nodeType": "Return",
															"src": "793:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 156,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "838:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 157,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 140,
														"id": 158,
														"nodeType": "Return",
														"src": "824:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:2",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "657:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "668:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:2"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "702:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 136,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:2"
									},
									"scope": 438,
									"src": "641:216:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "1078:113:2",
										"statements": [
											{
												"id": 187,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 173,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "1116:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "1120:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 180,
														"nodeType": "IfStatement",
														"src": "1112:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 178,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 172,
															"id": 179,
															"nodeType": "Return",
															"src": "1123:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 182,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 164,
																		"src": "1168:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 183,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 166,
																		"src": "1172:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 185,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 172,
														"id": 186,
														"nodeType": "Return",
														"src": "1154:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:2",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1018:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1029:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:2"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1063:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:2"
									},
									"scope": 438,
									"src": "1002:189:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 230,
										"nodeType": "Block",
										"src": "1415:417:2",
										"statements": [
											{
												"id": 229,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 201,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1683:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 208,
														"nodeType": "IfStatement",
														"src": "1679:28:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 207,
															"nodeType": "Return",
															"src": "1691:16:2"
														}
													},
													{
														"assignments": [
															210
														],
														"declarations": [
															{
																"constant": false,
																"id": 210,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:2",
																"nodeType": "VariableDeclaration",
																"scope": 229,
																"src": "1721:9:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 209,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 214,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 211,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "1733:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1737:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 215,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1756:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 216,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 192,
																	"src": "1760:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 194,
																"src": "1765:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 224,
														"nodeType": "IfStatement",
														"src": "1752:33:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 222,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 200,
															"id": 223,
															"nodeType": "Return",
															"src": "1768:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 210,
																	"src": "1813:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 227,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 200,
														"id": 228,
														"nodeType": "Return",
														"src": "1799:16:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:2",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1355:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1366:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1400:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "1406:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:2"
									},
									"scope": 438,
									"src": "1339:493:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "2057:114:2",
										"statements": [
											{
												"id": 257,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 243,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "2095:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 250,
														"nodeType": "IfStatement",
														"src": "2091:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 242,
															"id": 249,
															"nodeType": "Return",
															"src": "2103:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 252,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "2148:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 253,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "2152:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 255,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 242,
														"id": 256,
														"nodeType": "Return",
														"src": "2134:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:2",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1997:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2008:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2042:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "2048:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:2"
									},
									"scope": 438,
									"src": "1981:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "2406:114:2",
										"statements": [
											{
												"id": 285,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "2444:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 278,
														"nodeType": "IfStatement",
														"src": "2440:29:2",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 270,
															"id": 277,
															"nodeType": "Return",
															"src": "2452:17:2"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 280,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "2497:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 281,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "2501:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 283,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 270,
														"id": 284,
														"nodeType": "Return",
														"src": "2483:20:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2346:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2357:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:2"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2391:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "2397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:2"
									},
									"scope": 438,
									"src": "2330:190:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "2822:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2839:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "2843:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "2832:12:2"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:2",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2768:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2779:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2813:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:2"
									},
									"scope": 438,
									"src": "2755:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "3189:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "3206:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 313,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3210:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 315,
												"nodeType": "Return",
												"src": "3199:12:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3135:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3146:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "3180:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:2"
									},
									"scope": 438,
									"src": "3122:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "3532:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 327,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "3549:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 328,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "3553:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "3542:12:2"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:2",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3478:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3489:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "3523:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:2"
									},
									"scope": 438,
									"src": "3465:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "3917:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 342,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "3934:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 343,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "3938:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "3927:12:2"
											}
										]
									},
									"documentation": {
										"id": 333,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3863:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3874:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "3908:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:2"
									},
									"scope": 438,
									"src": "3850:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4466:29:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 357,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "4483:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 358,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "4487:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 356,
												"id": 360,
												"nodeType": "Return",
												"src": "4476:12:2"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4412:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4423:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4457:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:2"
									},
									"scope": 438,
									"src": "4399:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "5084:106:2",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 375,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 367,
																		"src": "5126:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 365,
																		"src": "5131:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 378,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "5134:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 374,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 380,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 365,
																"src": "5168:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 382,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "5172:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 373,
														"id": 384,
														"nodeType": "Return",
														"src": "5161:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:2",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4981:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5000:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5019:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 368,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:2"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "5075:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:2"
									},
									"scope": 438,
									"src": "4959:231:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "5799:105:2",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 400,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5841:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 403,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "5848:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 399,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 405,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 406,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "5882:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 407,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "5886:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 398,
														"id": 409,
														"nodeType": "Return",
														"src": "5875:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:2",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5696:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5715:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5734:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "5790:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:2"
									},
									"scope": 438,
									"src": "5674:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "6675:105:2",
										"statements": [
											{
												"id": 435,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 425,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 417,
																		"src": "6717:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 428,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "6724:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 424,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 430,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:2"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 415,
																"src": "6758:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 417,
																"src": "6762:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 423,
														"id": 434,
														"nodeType": "Return",
														"src": "6751:12:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:2",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6572:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6591:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6610:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "6666:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:2"
									},
									"scope": 438,
									"src": "6550:230:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 439,
							"src": "482:6300:2",
							"usedErrors": []
						}
					],
					"src": "107:6676:2"
				},
				"id": 2
			},
			"BillionCash.sol": {
				"ast": {
					"absolutePath": "BillionCash.sol",
					"exportedSymbols": {
						"BillionCash": [
							1073
						],
						"Context": [
							126
						],
						"Ownable": [
							104
						],
						"SafeMath": [
							438
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 440,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".22",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:32:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 105,
							"src": "71:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1074,
							"sourceUnit": 439,
							"src": "125:57:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 443,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "210:7:3"
									},
									"id": 444,
									"nodeType": "InheritanceSpecifier",
									"src": "210:7:3"
								}
							],
							"canonicalName": "BillionCash",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1073,
							"linearizedBaseContracts": [
								1073,
								104,
								126
							],
							"name": "BillionCash",
							"nameLocation": "195:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 447,
									"libraryName": {
										"id": 445,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 438,
										"src": "231:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "225:27:3",
									"typeName": {
										"id": 446,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "244:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "7711c596",
									"id": 451,
									"mutability": "mutable",
									"name": "_BCTokenBalances",
									"nameLocation": "293:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "258:51:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 450,
										"keyType": {
											"id": 448,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "266:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "258:27:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 449,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "277:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ba0fb861",
									"id": 457,
									"mutability": "mutable",
									"name": "_allowed",
									"nameLocation": "371:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "316:63:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 456,
										"keyType": {
											"id": 452,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "324:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "316:47:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 455,
											"keyType": {
												"id": 453,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "343:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "335:27:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 454,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "354:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 460,
									"mutability": "constant",
									"name": "tokenName",
									"nameLocation": "402:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "386:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 458,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "386:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "42696c6c696f6e43617368",
										"id": 459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "414:13:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1d92c2e30a02300d23660d3e424c03505002d0557b1e126a71208a8d09d06431",
											"typeString": "literal_string \"BillionCash\""
										},
										"value": "BillionCash"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 463,
									"mutability": "constant",
									"name": "tokenSymbol",
									"nameLocation": "450:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "434:34:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 461,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "434:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "4243",
										"id": 462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "464:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cf64ed798cc730363dc3e4c9e3b0c8887625ef44cdc667fe8460dea13b34813e",
											"typeString": "literal_string \"BC\""
										},
										"value": "BC"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 466,
									"mutability": "constant",
									"name": "tokenDecimals",
									"nameLocation": "490:13:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "475:33:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 464,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "475:5:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "506:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 476,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "523:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "515:57:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 467,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "515:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530303030",
											"id": 468,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "538:5:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50000_by_1",
												"typeString": "int_const 50000"
											},
											"value": "50000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 474,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "546:2:3",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"arguments": [
													{
														"id": 472,
														"name": "tokenDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "558:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													],
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "ElementaryTypeNameExpression",
													"src": "550:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_type$_t_uint256_$",
														"typeString": "type(uint256)"
													},
													"typeName": {
														"id": 470,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "550:7:3",
														"typeDescriptions": {}
													}
												},
												"id": 473,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "typeConversion",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "550:22:3",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "546:26:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "538:34:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 478,
									"mutability": "mutable",
									"name": "pancakeswap",
									"nameLocation": "587:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "579:19:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 477,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "579:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "marketingwallet",
									"nameLocation": "613:15:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "605:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 479,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 482,
									"mutability": "mutable",
									"name": "adminAddress",
									"nameLocation": "643:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "635:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 481,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "635:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "01c234a8",
									"id": 485,
									"mutability": "constant",
									"name": "PERCENTS_DIVIDER",
									"nameLocation": "686:16:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "662:47:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "662:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "705:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "eaf98d23",
									"id": 488,
									"mutability": "constant",
									"name": "FEE_PERCENT",
									"nameLocation": "740:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1073,
									"src": "716:40:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "716:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "754:2:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 496,
									"name": "Transfer",
									"nameLocation": "771:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "796:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "780:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "818:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "802:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "779:57:3"
									},
									"src": "765:72:3"
								},
								{
									"anonymous": false,
									"id": 504,
									"name": "Approval",
									"nameLocation": "851:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "886:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "870:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "870:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "918:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "902:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "944:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "936:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:97:3"
									},
									"src": "845:112:3"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "1082:173:3",
										"statements": [
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 513,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "1093:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "_adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1108:13:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1093:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "1093:28:3"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "marketingwallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "1132:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 518,
														"name": "_marketingWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "1150:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1132:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "1132:34:3"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 521,
														"name": "pancakeswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "1177:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 522,
														"name": "_pancakeswap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "1191:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1177:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "1177:26:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 526,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "1220:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 527,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "1234:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 525,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "1214:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1214:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "ExpressionStatement",
												"src": "1214:33:3"
											}
										]
									},
									"id": 531,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_adminAddress",
												"nameLocation": "995:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "987:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "_marketingWallet",
												"nameLocation": "1027:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1019:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "_pancakeswap",
												"nameLocation": "1062:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "1054:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:105:3"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1082:0:3"
									},
									"scope": 1073,
									"src": "965:290:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "1315:35:3",
										"statements": [
											{
												"expression": {
													"id": 536,
													"name": "tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 460,
													"src": "1333:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 535,
												"id": 537,
												"nodeType": "Return",
												"src": "1326:16:3"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1272:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1276:2:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "1300:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1300:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:15:3"
									},
									"scope": 1073,
									"src": "1263:87:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "1412:37:3",
										"statements": [
											{
												"expression": {
													"id": 544,
													"name": "tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 463,
													"src": "1430:11:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 543,
												"id": 545,
												"nodeType": "Return",
												"src": "1423:18:3"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1367:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1373:2:3"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "1397:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 541,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1397:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:15:3"
									},
									"scope": 1073,
									"src": "1358:91:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "1505:39:3",
										"statements": [
											{
												"expression": {
													"id": 552,
													"name": "tokenDecimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 466,
													"src": "1523:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 551,
												"id": 553,
												"nodeType": "Return",
												"src": "1516:20:3"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1466:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1474:2:3"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "1498:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 549,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1498:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1497:7:3"
									},
									"scope": 1073,
									"src": "1457:87:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 562,
										"nodeType": "Block",
										"src": "1605:38:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 476,
													"src": "1623:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 559,
												"id": 561,
												"nodeType": "Return",
												"src": "1616:19:3"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1561:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1572:2:3"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 563,
												"src": "1596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1595:9:3"
									},
									"scope": 1073,
									"src": "1552:91:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "1715:49:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 570,
														"name": "_BCTokenBalances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "1733:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 572,
													"indexExpression": {
														"id": 571,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 565,
														"src": "1750:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1733:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 569,
												"id": 573,
												"nodeType": "Return",
												"src": "1726:30:3"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1660:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1678:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1670:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:15:3"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "1706:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1706:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1705:9:3"
									},
									"scope": 1073,
									"src": "1651:113:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "1839:1117:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 585,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "1858:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 586,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "1867:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 589,
																"indexExpression": {
																	"expression": {
																		"id": 587,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1884:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1884:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1867:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1858:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1850:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1850:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 592,
												"nodeType": "ExpressionStatement",
												"src": "1850:46:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 594,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "1915:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1929:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1921:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 595,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1921:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1921:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1915:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 593,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1907:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1907:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "1907:25:3"
											},
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "BCTokenForFee",
														"nameLocation": "1953:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "1945:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1945:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"id": 609,
															"name": "PERCENTS_DIVIDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "1996:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 606,
																	"name": "FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "1979:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 604,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "1969:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 332,
																"src": "1969:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1969:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "1969:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1969:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1945:68:3"
											},
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "tokensToTransfer",
														"nameLocation": "2032:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "2024:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2024:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 624,
												"initialValue": {
													"arguments": [
														{
															"id": 622,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2141:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 619,
																	"name": "BCTokenForFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "2108:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 616,
																			"name": "BCTokenForFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "2075:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 614,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 579,
																			"src": "2051:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 317,
																		"src": "2051:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2051:38:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "2051:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2051:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "2051:89:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2051:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2024:131:3"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 625,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2168:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 628,
														"indexExpression": {
															"expression": {
																"id": 626,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2185:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2185:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2168:28:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 634,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "2232:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 629,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2199:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 632,
																"indexExpression": {
																	"expression": {
																		"id": 630,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2216:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2216:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2199:28:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "2199:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2199:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2168:70:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "2168:70:3"
											},
											{
												"expression": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 638,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2249:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 640,
														"indexExpression": {
															"id": 639,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2266:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2249:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 645,
																"name": "tokensToTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "2297:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 641,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2272:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 643,
																"indexExpression": {
																	"id": 642,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "2289:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2272:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2272:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2272:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2249:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "2249:65:3"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 649,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2325:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 651,
														"indexExpression": {
															"id": 650,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2342:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2325:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 656,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2407:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 652,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2358:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 654,
																"indexExpression": {
																	"id": 653,
																	"name": "adminAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "2375:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2358:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2358:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2358:73:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2325:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "2325:106:3"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 660,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2442:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 662,
														"indexExpression": {
															"id": 661,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2459:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2442:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 667,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2530:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 663,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2478:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "marketingwallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "2495:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2478:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2478:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2478:76:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2442:112:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "2442:112:3"
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 671,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "2565:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 673,
														"indexExpression": {
															"id": 672,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2582:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2565:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 678,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "2645:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 674,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "2597:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 676,
																"indexExpression": {
																	"id": 675,
																	"name": "pancakeswap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "2614:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2597:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "2597:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2597:72:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2565:104:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "2565:104:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 683,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2696:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2696:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "2708:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 686,
															"name": "tokensToTransfer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2712:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2687:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "EmitStatement",
												"src": "2682:47:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2754:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2754:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2766:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 693,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2780:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2745:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2745:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "EmitStatement",
												"src": "2740:54:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 697,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2819:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2819:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 699,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2831:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2848:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2810:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 702,
												"nodeType": "EmitStatement",
												"src": "2805:57:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 704,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2887:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2887:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "2899:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2912:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 703,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2878:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2878:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "EmitStatement",
												"src": "2873:53:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2944:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 583,
												"id": 711,
												"nodeType": "Return",
												"src": "2937:11:3"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1781:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1798:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1790:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1810:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1802:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:27:3"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "1833:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1833:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1832:6:3"
									},
									"scope": 1073,
									"src": "1772:1184:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3077:50:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 722,
															"name": "_allowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3095:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 724,
														"indexExpression": {
															"id": 723,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 715,
															"src": "3104:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3095:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 726,
													"indexExpression": {
														"id": 725,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "3111:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 721,
												"id": 727,
												"nodeType": "Return",
												"src": "3088:31:3"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2973:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2991:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2983:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2983:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3006:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "2998:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:32:3"
									},
									"returnParameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "3063:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:9:3"
									},
									"scope": 1073,
									"src": "2964:163:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "3206:171:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 739,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "3225:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3244:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3236:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 740,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3236:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3236:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3225:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3217:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3217:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "3217:30:3"
											},
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 747,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "3258:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 751,
															"indexExpression": {
																"expression": {
																	"id": 748,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3267:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3267:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3258:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 752,
														"indexExpression": {
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3279:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3258:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "3290:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3258:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "3258:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 757,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3320:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3320:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 759,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3332:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 760,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3341:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 756,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3311:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3311:36:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "3306:41:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 737,
												"id": 764,
												"nodeType": "Return",
												"src": "3358:11:3"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3144:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3160:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3152:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3152:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3177:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3169:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3169:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3151:32:3"
									},
									"returnParameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "3200:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 735,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3200:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3199:6:3"
									},
									"scope": 1073,
									"src": "3135:242:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "3504:1177:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 778,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3523:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 779,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3532:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 781,
																"indexExpression": {
																	"id": 780,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3549:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3532:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3523:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3515:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3515:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3574:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 787,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "3583:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 789,
																	"indexExpression": {
																		"id": 788,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "3592:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3583:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 792,
																"indexExpression": {
																	"expression": {
																		"id": 790,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3598:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3598:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3583:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3574:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3566:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3566:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "3566:44:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 797,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "3629:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3643:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3635:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 798,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3635:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3635:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3629:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3621:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3621:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 804,
												"nodeType": "ExpressionStatement",
												"src": "3621:25:3"
											},
											{
												"expression": {
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 805,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3659:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 807,
														"indexExpression": {
															"id": 806,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 768,
															"src": "3676:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3659:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 812,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3711:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 808,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3684:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 810,
																"indexExpression": {
																	"id": 809,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3701:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3684:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "3684:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3684:33:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3659:58:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "3659:58:3"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "BCTokenForFee",
														"nameLocation": "3738:13:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "3730:21:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3730:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 825,
												"initialValue": {
													"arguments": [
														{
															"id": 823,
															"name": "PERCENTS_DIVIDER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "3781:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 820,
																	"name": "FEE_PERCENT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "3764:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 818,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "3754:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 332,
																"src": "3754:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3754:22:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 347,
														"src": "3754:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3754:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3730:68:3"
											},
											{
												"assignments": [
													827
												],
												"declarations": [
													{
														"constant": false,
														"id": 827,
														"mutability": "mutable",
														"name": "tokensToTransfer",
														"nameLocation": "3817:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 923,
														"src": "3809:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 826,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3809:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [
														{
															"id": 836,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "3926:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 833,
																	"name": "BCTokenForFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "3893:13:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 830,
																			"name": "BCTokenForFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "3860:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 828,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "3836:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 317,
																		"src": "3836:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3836:38:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 317,
																"src": "3836:56:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3836:71:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 317,
														"src": "3836:89:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3836:104:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3809:131:3"
											},
											{
												"expression": {
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 839,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "3953:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 841,
														"indexExpression": {
															"id": 840,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3970:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3953:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 846,
																"name": "tokensToTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "4001:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 842,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "3976:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 844,
																"indexExpression": {
																	"id": 843,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3993:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3976:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "3976:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3976:42:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3953:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3953:65:3"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 850,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4029:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 852,
														"indexExpression": {
															"id": 851,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4046:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4029:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 857,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4111:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 853,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4062:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 855,
																"indexExpression": {
																	"id": 854,
																	"name": "adminAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "4079:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4062:30:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4062:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4062:73:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4029:106:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "4029:106:3"
											},
											{
												"expression": {
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 861,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4146:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 863,
														"indexExpression": {
															"id": 862,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4163:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4146:33:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 868,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4234:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 864,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4182:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 866,
																"indexExpression": {
																	"id": 865,
																	"name": "marketingwallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "4199:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4182:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4182:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4182:76:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4146:112:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "4146:112:3"
											},
											{
												"expression": {
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 872,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "4269:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 874,
														"indexExpression": {
															"id": 873,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4286:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4269:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 879,
																"name": "BCTokenForFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "4349:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 875,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "4301:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 877,
																"indexExpression": {
																	"id": 876,
																	"name": "pancakeswap",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "4318:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4301:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4301:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4301:72:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4269:104:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 882,
												"nodeType": "ExpressionStatement",
												"src": "4269:104:3"
											},
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 883,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "4384:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 887,
															"indexExpression": {
																"id": 884,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "4393:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4384:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 888,
														"indexExpression": {
															"expression": {
																"id": 885,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4399:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4399:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4384:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 896,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "4444:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 889,
																		"name": "_allowed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "4413:8:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 891,
																	"indexExpression": {
																		"id": 890,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "4422:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4413:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"expression": {
																		"id": 892,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4428:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4428:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4413:26:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 317,
															"src": "4413:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4413:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4384:66:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "4384:66:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4477:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4477:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "adminAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "4489:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4503:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4468:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4468:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "EmitStatement",
												"src": "4463:54:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 908,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4542:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4542:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 910,
															"name": "marketingwallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "4554:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4571:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 907,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4533:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4533:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "4528:57:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4610:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4610:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 917,
															"name": "pancakeswap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4622:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "BCTokenForFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4635:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 914,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "4601:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4601:48:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 920,
												"nodeType": "EmitStatement",
												"src": "4596:53:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4669:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 776,
												"id": 922,
												"nodeType": "Return",
												"src": "4662:11:3"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3394:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3425:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3417:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3448:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3440:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3469:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3461:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3461:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3406:75:3"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "3498:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 774,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3498:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:6:3"
									},
									"scope": 1073,
									"src": "3385:1296:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "4798:261:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 934,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "4817:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4836:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4828:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 935,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4828:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4828:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4817:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 933,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4809:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "4809:30:3"
											},
											{
												"expression": {
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 942,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "4850:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 946,
															"indexExpression": {
																"expression": {
																	"id": 943,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4859:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4859:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4850:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 945,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "4871:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4850:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 955,
																		"name": "addedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "4931:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 948,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "4897:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 951,
																			"indexExpression": {
																				"expression": {
																					"id": 949,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "4906:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "4906:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4897:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 953,
																		"indexExpression": {
																			"id": 952,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 926,
																			"src": "4918:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4897:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "add",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 302,
																	"src": "4897:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4897:45:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4882:71:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4850:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 959,
												"nodeType": "ExpressionStatement",
												"src": "4850:103:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 961,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4978:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4978:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 963,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "4990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 964,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "4999:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 967,
																"indexExpression": {
																	"expression": {
																		"id": 965,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5008:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5008:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4999:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 969,
															"indexExpression": {
																"id": 968,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "5020:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4999:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 960,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "4969:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4969:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "EmitStatement",
												"src": "4964:65:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5047:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 932,
												"id": 973,
												"nodeType": "Return",
												"src": "5040:11:3"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "4698:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4724:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4716:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "4741:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4733:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4733:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4715:37:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "4787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 930,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4786:6:3"
									},
									"scope": 1073,
									"src": "4689:370:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "5181:266:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 985,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "5200:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5219:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5211:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 986,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5211:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5211:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5200:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 984,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5192:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5192:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "5192:30:3"
											},
											{
												"expression": {
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 993,
																"name": "_allowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "5233:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 997,
															"indexExpression": {
																"expression": {
																	"id": 994,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5242:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5242:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5233:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 998,
														"indexExpression": {
															"id": 996,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5254:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5233:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 1006,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 979,
																		"src": "5314:15:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 999,
																				"name": "_allowed",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 457,
																				"src": "5280:8:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																					"typeString": "mapping(address => mapping(address => uint256))"
																				}
																			},
																			"id": 1002,
																			"indexExpression": {
																				"expression": {
																					"id": 1000,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5289:3:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1001,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5289:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5280:20:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1004,
																		"indexExpression": {
																			"id": 1003,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "5301:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5280:29:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 317,
																	"src": "5280:33:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5280:50:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1008,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5265:76:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5233:108:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1010,
												"nodeType": "ExpressionStatement",
												"src": "5233:108:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1012,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5366:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5366:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "5378:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 1015,
																	"name": "_allowed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "5387:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																		"typeString": "mapping(address => mapping(address => uint256))"
																	}
																},
																"id": 1018,
																"indexExpression": {
																	"expression": {
																		"id": 1016,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5396:3:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5396:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5387:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1020,
															"indexExpression": {
																"id": 1019,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "5408:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5387:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "5357:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "5352:65:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5435:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 983,
												"id": 1024,
												"nodeType": "Return",
												"src": "5428:11:3"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5076:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5102:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5094:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5094:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "5119:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5111:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5111:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5093:42:3"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "5170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 981,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5169:6:3"
									},
									"scope": 1073,
									"src": "5067:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1059,
										"nodeType": "Block",
										"src": "5512:168:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1034,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "5531:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5541:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5531:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5523:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5523:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1038,
												"nodeType": "ExpressionStatement",
												"src": "5523:20:3"
											},
											{
												"expression": {
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_BCTokenBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "5554:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5571:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5554:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1046,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1030,
																"src": "5612:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1042,
																	"name": "_BCTokenBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 451,
																	"src": "5582:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1044,
																"indexExpression": {
																	"id": 1043,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "5599:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5582:25:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "5582:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5582:37:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5554:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "5554:65:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5652:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5644:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5644:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5644:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "5656:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "5665:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1050,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "5635:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5635:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "5630:42:3"
											}
										]
									},
									"id": 1060,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "5464:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5478:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "5470:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5495:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "5487:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5469:33:3"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5512:0:3"
									},
									"scope": 1073,
									"src": "5455:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1071,
										"nodeType": "Block",
										"src": "5759:45:3",
										"statements": [
											{
												"expression": {
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1067,
														"name": "adminAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 482,
														"src": "5770:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1068,
														"name": "_devAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "5785:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "5770:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "5770:26:3"
											}
										]
									},
									"functionSelector": "d0d41fe1",
									"id": 1072,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1065,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1064,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "5749:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "5749:9:3"
										}
									],
									"name": "setDevAddress",
									"nameLocation": "5697:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_devAddress",
												"nameLocation": "5727:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "5711:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5711:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5710:29:3"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5759:0:3"
									},
									"scope": 1073,
									"src": "5688:116:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "186:5621:3",
							"usedErrors": []
						}
					],
					"src": "35:5774:3"
				},
				"id": 3
			}
		}
	}
}